diff --git a/.gitignore b/.gitignore
index b8bd026..b083bb8 100644
--- a/.gitignore
+++ b/.gitignore
@@ -26,3 +26,6 @@
 *.exe
 *.out
 *.app
+
+# Vim
+*.swp 
diff --git a/Classes/AbilityButton.cpp b/Classes/AbilityButton.cpp
new file mode 100644
index 0000000..18e0f9e
--- /dev/null
+++ b/Classes/AbilityButton.cpp
@@ -0,0 +1,127 @@
+#include "AbilityButton.h"
+
+using namespace cocos2d;
+
+#define FIRE "firebutton.png"
+#define WATER "waterbutton.png"
+#define WOOD "woodbutton.png"
+#define FIRE_DOWN "firebuttondown.png"
+#define WATER_DOWN "waterbuttondown.png"
+#define WOOD_DOWN "woodbuttondown.png"
+
+	
+bool AbilityButton::init()
+{
+	srand(time(0));
+	return true;
+}
+
+void AbilityButton::CreateButton()
+{
+	/* ’˝≥£◊¥Ã¨œ¬µƒ∞¥≈•Õº∆¨ */
+	CCScale9Sprite* btnfire = CCScale9Sprite::create(FIRE);
+	CCScale9Sprite* btnwater = CCScale9Sprite::create(WATER);
+	CCScale9Sprite* btnwood = CCScale9Sprite::create(WOOD);
+	/* µ„ª˜◊¥Ã¨œ¬µƒ∞¥≈•Õº∆¨ */  
+    CCScale9Sprite* btnfireDown = CCScale9Sprite::create(FIRE_DOWN); 
+	CCScale9Sprite* btnwaterDown = CCScale9Sprite::create(WATER_DOWN); 
+	CCScale9Sprite* btnwoodDown = CCScale9Sprite::create(WOOD_DOWN); 
+	/* ∞¥≈•±ÍÃ‚ */  
+	firetitle = CCLabelTTF::create("@@", "Marker Felt", 80);  
+	watertitle = CCLabelTTF::create("@@", "Marker Felt", 80);  
+	woodtitle = CCLabelTTF::create("@@", "Marker Felt", 80);  
+
+//	fireBtn->setPreferredSize(CCSize(100, 100));
+//	waterBtn->setPreferredSize(CCSize(100, 100));
+//	woodBtn->setPreferredSize(CCSize(100, 100));
+	/* ∞¥≈•µƒ¥Û–°ª·∏˘æ›±ÍÃ‚◊‘∂Øµ˜’˚ */
+	fireBtn = CCControlButton::create(firetitle, btnfire);  
+	waterBtn = CCControlButton::create(watertitle, btnwater); 
+	woodBtn = CCControlButton::create(woodtitle, btnwood); 
+	/* …Ë÷√∞¥≈•∞¥œ¬ ±µƒÕº∆¨ */  
+	fireBtn->setBackgroundSpriteForState(btnfireDown, CCControlStateSelected);  
+	waterBtn->setBackgroundSpriteForState(btnwaterDown, CCControlStateSelected);  
+	woodBtn->setBackgroundSpriteForState(btnwoodDown, CCControlStateSelected);  
+	
+	this->addChild(fireBtn); 
+	this->addChild(waterBtn); 
+	this->addChild(woodBtn); 
+
+	BindButtonEvent();
+}
+
+void AbilityButton::setButtonPosition(CCPoint pos)
+{
+	fireBtn->setPosition(ccp(pos.x,pos.y));  
+	waterBtn->setPosition(ccp(pos.x+100,pos.y));  
+	woodBtn->setPosition(ccp(pos.x+200,pos.y));  
+}
+
+void AbilityButton::BindButtonEvent()
+{
+	fireBtn->addTargetWithActionForControlEvents(this,cccontrol_selector(AbilityButton::fireTouchUpOutside),CCControlEventTouchUpInside);
+	waterBtn->addTargetWithActionForControlEvents(this,cccontrol_selector(AbilityButton::waterTouchUpOutside),CCControlEventTouchUpInside);
+	woodBtn->addTargetWithActionForControlEvents(this,cccontrol_selector(AbilityButton::woodTouchUpOutside),CCControlEventTouchUpInside);
+}
+
+void AbilityButton::LockButtonTouch()
+{
+	fireBtn->setTouchEnabled(false);
+	waterBtn->setTouchEnabled(false);
+	woodBtn->setTouchEnabled(false);
+}
+
+void AbilityButton::UnlockButtonTouch()
+{
+	fireBtn->setTouchEnabled(true);
+	waterBtn->setTouchEnabled(true);
+	woodBtn->setTouchEnabled(true);
+}
+
+void AbilityButton::fireTouchUpOutside(CCObject* pSender, CCControlEvent event)
+{
+	this->isTouch = true;
+	tag = fire;
+	CCLOG("fire");
+}
+void AbilityButton::waterTouchUpOutside(CCObject* pSender, CCControlEvent event)
+{
+	this->isTouch = true;
+	tag = water;
+}
+void AbilityButton::woodTouchUpOutside(CCObject* pSender, CCControlEvent event)
+{
+	this->isTouch = true;
+	tag = wood;
+}
+
+void AbilityButton::updateDamage(int level)
+{
+
+	//À¢–¬…À∫¶À„∑®
+	fireDamage = (int)(CCRANDOM_0_1()*(40+level));
+	waterDamage = (int)(CCRANDOM_0_1()*(40+level));
+	woodDamage = (int)(CCRANDOM_0_1()*(40+level));
+	//labelœ‘ æ
+	char fireDamageString[10];
+	char waterDamageString[10];
+	char woodDamageString[10];
+	sprintf(fireDamageString,"%d",fireDamage);
+	sprintf(waterDamageString,"%d",waterDamage);
+	sprintf(woodDamageString,"%d",woodDamage);
+	firetitle->setString(fireDamageString);
+	watertitle->setString(waterDamageString);
+	woodtitle->setString(woodDamageString);
+}
+
+int AbilityButton::getDamageByTag(int tag)
+{
+	if (tag==fire)
+		return fireDamage;
+	else if (tag==water)
+		return waterDamage;
+	else if (tag==wood)
+		return woodDamage;
+	else
+		return 0;
+}
\ No newline at end of file
diff --git a/Classes/AbilityButton.h b/Classes/AbilityButton.h
new file mode 100644
index 0000000..68f681c
--- /dev/null
+++ b/Classes/AbilityButton.h
@@ -0,0 +1,52 @@
+Ôªø#ifndef __ABILITY_BUTTON_H__
+#define __ABILITY_BUTTON_H__
+#include "cocos2d.h"
+#include "cocos-ext.h"
+#include "time.h"
+
+USING_NS_CC;
+USING_NS_CC_EXT; 
+
+typedef enum{
+	fire,
+	water,
+	wood,
+	metal
+}tagForButton;
+
+class AbilityButton :public CCNode
+{
+public:
+	CREATE_FUNC(AbilityButton);
+public:
+	virtual bool init();
+	//ÂàõÂª∫ÊåâÈíÆ
+	void CreateButton();
+	//ËÆæÁΩÆ‰ΩçÁΩÆ
+	void setButtonPosition(CCPoint pos);
+	//ÁªëÂÆö‰∫ã‰ª∂
+	void BindButtonEvent();
+	//
+	void fireTouchUpOutside(CCObject* pSender, CCControlEvent event);
+	void waterTouchUpOutside(CCObject* pSender, CCControlEvent event);
+	void woodTouchUpOutside(CCObject* pSender, CCControlEvent event);
+	//ÈîÅÂÆöËß¶Êë∏
+	void LockButtonTouch();
+	//Ëß£ÈîÅËß¶Êë∏
+	void UnlockButtonTouch();
+	//Âà∑Êñ∞ÊäÄËÉΩ‰º§ÂÆ≥
+	void updateDamage(int level);
+	//Ëé∑Âèñ‰º§ÂÆ≥ÂÄº
+	int getDamageByTag(int tag);
+	bool isTouch;
+	int tag;
+	int fireDamage,waterDamage,woodDamage;
+private:
+	CCControlButton* fireBtn; 
+	CCControlButton* waterBtn; 
+	CCControlButton* woodBtn; 
+	CCLabelTTF *firetitle;
+	CCLabelTTF *watertitle;
+	CCLabelTTF *woodtitle;
+};
+#endif
\ No newline at end of file
diff --git a/Classes/AnimLib.cpp b/Classes/AnimLib.cpp
new file mode 100644
index 0000000..7461d51
--- /dev/null
+++ b/Classes/AnimLib.cpp
@@ -0,0 +1,100 @@
+#include "AnimLib.h"
+
+//update:2014-10-3 01:30:47
+
+CCFiniteTimeAction* AnimLib::getAction(int choice,CCSize size)
+{
+	CCFiniteTimeAction* action=NULL;
+	switch(choice)
+	{
+	case TAISHANYADING:
+		{
+		CCMoveBy* dun=CCMoveBy::create(0.20f,ccp(0,-size.height/2));
+		CCMoveBy* qi=CCMoveBy::create(0.20f,ccp(0,size.height/2));
+		CCMoveBy* tui=CCMoveBy::create(0.20f,ccp(size.width/2,0));
+		CCMoveBy* hui=CCMoveBy::create(0.20f,ccp(-size.width/2,0));
+		action=CCSequence::create(dun,qi,tui,hui,NULL);
+		}
+		break;
+	case STAGGER:
+		{
+		CCMoveBy* yao=CCMoveBy::create(0.28f,ccp(size.width,0));
+		CCMoveBy* bai=CCMoveBy::create(0.28f,ccp(-size.width,0));
+		action=CCSequence::create(yao,bai,yao,bai,NULL);
+		}
+	case STRIKE:
+		{
+		CCMoveBy* yao=CCMoveBy::create(0.10f,ccp(size.width/2,0));
+		CCMoveBy* bai=CCMoveBy::create(0.10f,ccp(-size.width/2,0));
+		action=CCSequence::create(yao,bai,NULL);
+		}
+		break;
+	case ATTACK:
+		{
+		CCMoveBy* yao=CCMoveBy::create(0.15f,ccp(size.width/2,0));
+		CCMoveBy* bai=CCMoveBy::create(0.15f,ccp(-size.width/2,0));
+		action=CCSequence::create(yao,bai,NULL);
+		}
+		break;
+	case UP:
+		{
+		CCMoveBy* up=CCMoveBy::create(0.35f,ccp(0,size.height));
+		action=up;
+		}
+		break;
+	case DOWN:
+		{
+		CCMoveBy* down=CCMoveBy::create(1.0f,ccp(0,-size.height));
+		action=down;
+		}
+		break;
+	case TELEPORTOUT:
+		{
+		CCBlink* shan=CCBlink::create(0.20f,2);
+		CCHide* hide=CCHide::create();
+		action=CCSequence::create(shan,hide,NULL);
+		}
+		break;
+	case TELEPORTIN:
+		{
+		CCBlink* shan=CCBlink::create(0.20f,2);
+		CCShow* show=CCShow::create();
+		action=CCSequence::create(shan,show,NULL);
+		}
+		break;
+	case STEALTHOUT:
+		{
+		CCFadeTo* fadeOut=CCFadeTo::create(0.50f,75);
+		action=fadeOut;
+		}
+		break;
+	case STEALTHIN:
+		{
+		CCFadeIn* fadeIn=CCFadeIn::create(0.50f);
+		action=fadeIn;
+		}
+		break;
+	case SWAY:
+		{
+		CCRotateTo* rotate = CCRotateTo::create(0.2,10,10);
+		CCRotateTo* rotate1 = CCRotateTo::create(0.2,-10,-10);
+		CCRotateTo* rotate2 = CCRotateTo::create(0.2,0,0);
+		action = CCSequence::create(rotate,rotate1,rotate2,NULL);
+		}
+		break;
+	case FADEOUT:
+		{
+			CCFadeTo* fadeTo = CCFadeTo::create(0.5,0);
+			action = fadeTo;
+		}
+		break;
+	case FADEIN:
+		{
+			CCFadeTo* fadeTo = CCFadeTo::create(0.5,255);
+			action = fadeTo;
+		}
+	default:
+		break;
+	}
+	return action;
+}
diff --git a/Classes/AnimLib.h b/Classes/AnimLib.h
new file mode 100644
index 0000000..bc3a39a
--- /dev/null
+++ b/Classes/AnimLib.h
@@ -0,0 +1,28 @@
+#ifndef _ANIMLIB_H_
+#define _ANIMLIB_H_
+#include "cocos2d.h"
+using namespace cocos2d;
+
+#define TAISHANYADING 1
+#define STAGGER 2
+#define STRIKE 3
+#define DOWN 5
+#define UP 4
+#define ATTACK 0
+#define STEALTH 6
+#define TELEPORTOUT 7
+#define TELEPORTIN 8
+#define STEALTHOUT 9
+#define STEALTHIN 10
+#define SWAY 11
+#define FADEOUT 12
+#define FADEIN 13
+
+
+class AnimLib
+{
+public:
+	static CCFiniteTimeAction* getAction(int choice,CCSize size);
+};
+
+#endif
diff --git a/Classes/Animation.cpp b/Classes/Animation.cpp
deleted file mode 100644
index 1cd707a..0000000
--- a/Classes/Animation.cpp
+++ /dev/null
@@ -1,94 +0,0 @@
-#include "Animation.h"
-
-//update:2014-10-3 01:30:47
-
-CCFiniteTimeAction* Animation::getAction(int choice,CCSize size)
-{
-	CCFiniteTimeAction* action=NULL;
-	switch(choice)
-	{
-	case TAISHANYADING:
-		{
-		CCMoveBy* dun=CCMoveBy::create(0.20f,ccp(0,-size.height/2));
-		CCMoveBy* qi=CCMoveBy::create(0.20f,ccp(0,size.height/2));
-		CCMoveBy* tui=CCMoveBy::create(0.20f,ccp(size.width/2,0));
-		CCMoveBy* hui=CCMoveBy::create(0.20f,ccp(-size.width/2,0));
-		action=CCSequence::create(dun,qi,tui,hui,NULL);
-		}
-		break;
-	case STAGGER:
-		{
-		CCMoveBy* yao=CCMoveBy::create(0.28f,ccp(size.width,0));
-		CCMoveBy* bai=CCMoveBy::create(0.28f,ccp(-size.width,0));
-		action=CCSequence::create(yao,bai,yao,bai,NULL);
-		}
-	case STRIKE:
-		{
-		CCMoveBy* yao=CCMoveBy::create(0.10f,ccp(size.width/2,0));
-		CCMoveBy* bai=CCMoveBy::create(0.10f,ccp(-size.width/2,0));
-		action=CCSequence::create(yao,bai,NULL);
-		}
-		break;
-	case ATTACK:
-		{
-		CCMoveBy* yao=CCMoveBy::create(0.15f,ccp(size.width/2,0));
-		CCMoveBy* bai=CCMoveBy::create(0.15f,ccp(-size.width/2,0));
-		action=CCSequence::create(yao,bai,NULL);
-		}
-		break;
-	case UP:
-		{
-		CCMoveBy* up=CCMoveBy::create(0.35f,ccp(0,size.height));
-		action=up;
-		}
-		break;
-	case DOWN:
-		{
-		CCMoveBy* down=CCMoveBy::create(1.0f,ccp(0,-size.height));
-		action=down;
-		}
-		break;
-	case TELEPORTOUT:
-		{
-		CCBlink* shan=CCBlink::create(0.20f,2);
-		CCHide* hide=CCHide::create();
-		action=CCSequence::create(shan,hide,NULL);
-		}
-		break;
-	case TELEPORTIN:
-		{
-		CCBlink* shan=CCBlink::create(0.20f,2);
-		CCShow* show=CCShow::create();
-		action=CCSequence::create(shan,show,NULL);
-		}
-		break;
-	case STEALTHOUT:
-		{
-		CCFadeTo* fadeOut=CCFadeTo::create(0.50f,75);
-		action=fadeOut;
-		}
-		break;
-	case STEALTHIN:
-		{
-		CCFadeIn* fadeIn=CCFadeIn::create(0.50f);
-		action=fadeIn;
-		}
-		break;
-	case SWAY:
-		{
-		CCRotateTo* rotate = CCRotateTo::create(0.2,10,10);
-		CCRotateTo* rotate1 = CCRotateTo::create(0.2,-10,-10);
-		CCRotateTo* rotate2 = CCRotateTo::create(0.2,0,0);
-		action = CCSequence::create(rotate,rotate1,rotate2,NULL);
-		}
-		break;
-	case FADEOUT:
-		{
-			CCFadeOut* fadeOut = CCFadeOut::create(0.5);
-			action = fadeOut;
-		}
-	default:
-		break;
-	}
-	return action;
-}
\ No newline at end of file
diff --git a/Classes/Animation.h b/Classes/Animation.h
deleted file mode 100644
index 3ed3c30..0000000
--- a/Classes/Animation.h
+++ /dev/null
@@ -1,27 +0,0 @@
-#ifndef _ANIMATION_H_
-#define _ANIMATION_H_
-#include "cocos2d.h"
-using namespace cocos2d;
-
-#define TAISHANYADING 1
-#define STAGGER 2
-#define STRIKE 3
-#define DOWN 5
-#define UP 4
-#define ATTACK 0
-#define STEALTH 6
-#define TELEPORTOUT 7
-#define TELEPORTIN 8
-#define STEALTHOUT 9
-#define STEALTHIN 10
-#define SWAY 11
-#define FADEOUT 12
-
-
-class Animation
-{
-public:
-	static CCFiniteTimeAction* getAction(int choice,CCSize size);
-};
-
-#endif
\ No newline at end of file
diff --git a/Classes/AppMacros.h b/Classes/AppMacros.h
index 0d69bf1..2bf6d22 100644
--- a/Classes/AppMacros.h
+++ b/Classes/AppMacros.h
@@ -57,6 +57,9 @@
 #define FACEDIR_MRCD "FaceDirection"
 #define MAPNO_MRCD "MapNo"
 #define STORYCNT_MRCD "StoryCnt"
+#define HAS_SHADOW_MRCD "HasShadow"
+#define SH_STAND_P_MRCD "ShStandPos"
+#define STORY_TIME_MRCD "StoryTime"
 #define EVENTDONE_MRCD "EventDone"
 
 #define SPEED_SRCD "Speed"
@@ -66,6 +69,8 @@
 #define FLASH_SRCD "Flash"
 #define ALL_SUPERPOWER_SRCD "AllSuperPower"
 
+#define EXP_CRCD "Exp"
+
 //”Œœ∑º«¬ºµƒ≥ı º÷µ√¸√˚∑® « Ù–‘√˚º”_INI
 #define FIRSTSAVE_INI true
 #define POSITIONX_INI 63
@@ -73,8 +78,13 @@
 #define FACEDIR_INI 0
 #define MAPNO_INI MAP11
 #define STORYCNT_INI 0
+#define HAS_SHADOW_INI false
+#define SH_STAND_P_INI 2
+#define STORY_TIME_INI 10
 #define EVENTDONE_INI ""
 
+#define EXP_INI 0
+
 #define SPEED_INI 2.0
 #define TELEPORT_INI false
 #define STEALTH_INI false
@@ -82,6 +92,8 @@
 #define FLASH_INI false
 #define ALL_SUPERPOWER_INI false
 
+
+
 #define MAX_DONE_LIST 100
 #define DEFUALT_DELIM ','
 
@@ -114,6 +126,7 @@
 #define IDY_ATT "idy"
 
 #define CHANGESCENE_EVT "change scene"
+#define MAP10 18
 #define MAP11 19
 #define MAP12 20
 #define EVENT_MAP11 0
@@ -166,14 +179,31 @@
 #define STAND_TRIG 1
 #define STAND_TRIG_IMGNO -10
 #define ATRIG_NO_MAN_IMGNO -1
+#define MAP_SCALER 100
 
 //Event Ids
 #define NO_EVENT_FLAG -1
 #define TALKMAN_EVT 0
 #define GET_SUP_EVT 1
 #define DIALOG_EVT 2
+#define SHADOW_EVT 3
+#define RELOAD_EVT 4
 
+//Notification Center
+#define HERO_STEP_UP_MSG "HeroStepUp"
 typedef enum{kNone=1,kWall=17,kEvent=41}CollisionType;
 typedef enum{Down=0,Left=1,Right=2,Up=3}FaceDirection;
 
+//zorders
+#define HERO_ON_MAP_ZOR 5
+#define HERO_MOVE_BACK_ZOR 3
+#define NPC_ON_MAP_BACK_ZOR 4
+#define NPC_ON_MAP_FRON_ZOR 6
+#define HERO_ON_PANEL_ZOR 3
+#define PANEL_ON_MAPLYR_ZOR 15
+#define WIN_ON_PANEL_ZOR 11
+
+//switches
+#define DEBUG_MODE true
+#define HERO_COVER_MODE FALSE
 #endif /* __APPMACROS_H__ */
diff --git a/Classes/Blood.cpp b/Classes/Blood.cpp
new file mode 100644
index 0000000..91dc9a2
--- /dev/null
+++ b/Classes/Blood.cpp
@@ -0,0 +1,31 @@
+Ôªø#include "Blood.h"
+USING_NS_CC;
+
+bool Blood::init()
+{
+	return true;
+}
+void Blood::setBloodSlider()
+{
+	this->bloodSlider = CCControlSlider::create(CCSprite::create(BLOODBACKGROUND),
+										  CCSprite::create(BLOOD),
+										  CCSprite::create(SLIDERTHUMB));
+	this->addChild(bloodSlider,2);
+	bloodSlider->setTouchEnabled(false);
+}
+
+void Blood::setSliderPosition(CCPoint pos)
+{
+	bloodSlider->setPosition(ccp(pos.x,pos.y));
+}
+
+void Blood::setTotalBlood(float total)
+{
+	bloodSlider->setMaximumValue(total);
+	bloodSlider->setMinimumValue(0);
+}
+
+void Blood::setCurrentBlood(float currentHp)
+{
+	bloodSlider->setValue(currentHp);
+}
diff --git a/Classes/Blood.h b/Classes/Blood.h
new file mode 100644
index 0000000..212b5ae
--- /dev/null
+++ b/Classes/Blood.h
@@ -0,0 +1,26 @@
+Ôªø#ifndef __BLOOD_H__
+#define __BLOOD_H__
+#include "cocos2d.h"
+#include "cocos-ext.h"
+using namespace cocos2d;
+USING_NS_CC_EXT; 
+
+#define BLOODBACKGROUND "bloodbackground.png"
+#define BLOOD "blood.png"
+#define SLIDERTHUMB "thumb.png"
+
+class Blood : public CCNode
+{
+public:
+	CREATE_FUNC(Blood);
+public:
+	virtual bool init();
+    void setBloodSlider();
+	void setSliderPosition(CCPoint pos);
+	void setTotalBlood(float total);
+	void setCurrentBlood(float currentHp);
+private:
+	CCControlSlider* bloodSlider;
+};
+
+#endif
\ No newline at end of file
diff --git a/Classes/ButtonA.cpp b/Classes/ButtonA.cpp
index dab6904..781f009 100644
--- a/Classes/ButtonA.cpp
+++ b/Classes/ButtonA.cpp
@@ -1,5 +1,5 @@
 #include "ButtonA.h"
-#include "Animation.h"//$
+#include "AnimLib.h"//$
 
 //update:2014-9-26 01:59:07
 
diff --git a/Classes/CPlayer.cpp b/Classes/CPlayer.cpp
new file mode 100644
index 0000000..1cde45f
--- /dev/null
+++ b/Classes/CPlayer.cpp
@@ -0,0 +1,33 @@
+#include "CPlayer.h"
+
+bool CPlayer::init()
+{
+	exp = sGlobal->playerState->exp;
+	CCLOG("exp:%d",exp);
+	exp2Level(exp);
+	healthPoint=100+level*2;
+	currentHp=healthPoint;
+	
+	return true;
+}
+void CPlayer::setPlayer()
+{
+	 CCSize visibleSize = CCDirector::sharedDirector()->getVisibleSize();
+	player = CCSprite::create(PLAYER);
+	player->setPosition(ccp(100,visibleSize.height-200));
+	this->addChild(player);
+}
+
+void CPlayer::exp2Level(int exp)
+{
+	if (exp<2)
+		level=1;
+	else if (exp>=2&&exp<=30)
+		level=1+exp/2;
+	else if(exp>30&&exp<=60)
+		level = 16+(exp-30)/3;
+	else if(exp>60&&exp<=180)
+		level = 26+(exp-60)/5;
+	else
+		level = 50;
+}
\ No newline at end of file
diff --git a/Classes/CPlayer.h b/Classes/CPlayer.h
new file mode 100644
index 0000000..a5fb35e
--- /dev/null
+++ b/Classes/CPlayer.h
@@ -0,0 +1,22 @@
+#ifndef __CPLAYER_H__
+#define __CPLAYER_H__
+#include "Role.h"
+#include "GlobalState.h"
+
+using namespace cocos2d;
+ 
+#define PLAYER "player.png"
+
+class CPlayer:public Role
+{
+public:
+	CREATE_FUNC(CPlayer);
+public:
+	virtual bool init();
+	void setPlayer();
+	void attack();
+	void exp2Level(int exp);
+private:
+	CCSprite* player;
+};
+#endif 
\ No newline at end of file
diff --git a/Classes/CombatAnimation.cpp b/Classes/CombatAnimation.cpp
new file mode 100644
index 0000000..e7f2432
--- /dev/null
+++ b/Classes/CombatAnimation.cpp
@@ -0,0 +1,85 @@
+#include "CombatAnimation.h"
+
+void CombatAnimation::fireParticle(int direction)
+{
+	CCParticleSystemQuad *m_emitter=new CCParticleSystemQuad();
+	m_emitter->initWithTotalParticles(40);//900∏ˆ¡£◊”∂‘œÛ
+	//…Ë÷√Õº∆¨
+	m_emitter->setTexture(CCTextureCache::sharedTextureCache()->addImage("particleFire.png"));
+	//…Ë÷√∑¢…‰¡£◊”µƒ≥÷–¯ ±º‰-1±Ì æ“ª÷±∑¢…‰£¨0√ª”–“‚“Â£¨∆‰À˚÷µ±Ì æ≥÷–¯ ±º‰
+	m_emitter->setDuration(3);
+
+
+
+	/*
+	//…Ë÷√÷––ƒ∑ΩœÚ,’‚∏ˆµÍ «œ‡∂‘∑¢…‰µ„£¨x’˝∑ΩœÚŒ™”“£¨y’˝∑ΩœÚŒ™…œ
+	m_emitter->setGravity(CCPoint(0,-240));
+
+
+	//…Ë÷√Ω«∂»£¨Ω«∂»µƒ±‰ªØ¬ 
+	m_emitter->setAngle(90);
+	m_emitter->setAngleVar(360);
+
+
+	//…Ë÷√æ∂œÚº”ÀŸ∂»£¨æ∂œÚº”ÀŸ∂»µƒ±‰ªØ¬ 
+	m_emitter->setRadialAccel(50);
+	m_emitter->setRadialAccelVar(0);
+
+	//…Ë÷√¡£◊”µƒ«–œÚº”ÀŸ∂»£¨«–œÚº”ÀŸ∂»µƒ±‰ªØ¬ 
+	m_emitter->setTangentialAccel(30);
+	m_emitter->setTangentialAccelVar(0);
+
+
+	//…Ë÷√¡£◊”µƒŒª÷√£¨Œª÷√µƒ±‰ªØ¬ 
+	m_emitter->setPosition(CCPoint(400,500));
+	m_emitter->setPosVar(CCPoint(400,0));
+
+	//…Ë÷√¡£◊”…˘√˜£¨…˙√¸µƒ±‰ªØ¬ 
+	m_emitter->setLife(4);
+	m_emitter->setLifeVar(2);
+
+
+	//…Ë÷√¡£◊”ø™ ºµƒ◊‘–˝◊™ÀŸ∂»£¨ø™ º◊‘–˝◊™ÀŸ∂»µƒ±‰ªØ¬ 
+	m_emitter->setStartSpin(30);
+	m_emitter->setStartSpinVar(60);
+
+	//…Ë÷√Ω· ¯µƒ ±∫Úµƒ◊‘–˝◊™“‘º∞◊‘–˝◊™µƒ±‰ªØ¬ 
+	m_emitter->setEndSpin(60);
+	m_emitter->setEndSpinVar(60);
+
+	ccColor4F cc;
+	cc.a=1.0f;
+	cc.b=255.0f;
+	cc.g=255.0f;
+	cc.r=255.0f;
+	ccColor4F cc2;
+	cc2.a=0;
+	cc2.b=0;
+	cc2.g=0;
+	cc2.r=0;
+	//…Ë÷√ø™ ºµƒ ±∫Úµƒ—’…´“‘º∞—’…´µƒ±‰ªØ¬ 
+	m_emitter->setStartColor(cc);
+	m_emitter->setStartColorVar(cc2);
+
+
+
+	//…Ë÷√Ω· ¯µƒ ±∫Úµƒ—’…´“‘º∞—’…´µƒ±‰ªØ¬ 
+	m_emitter->setEndColor(cc);
+	m_emitter->setEndColorVar(cc2);
+
+	//…Ë÷√ø™ º ±∫Ú¡£◊”µƒ¥Û–°£¨“‘º∞¥Û–°µƒ±‰ªØ¬ 
+	m_emitter->setStartSize(30);
+	m_emitter->setStartSizeVar(0);
+
+
+	//…Ë÷√¡£◊”Ω· ¯µƒ ±∫Úµƒ¥Û–°£¨“‘º∞¥Û–°µƒ±‰ªØ¬ 
+	m_emitter->setEndSize(20.0f);
+	m_emitter->setEndSizeVar(0);
+
+	//…Ë÷√√ø√Î÷”≤˙…˙¡£◊”µƒ ˝ƒø
+	m_emitter->setEmissionRate(100);
+
+	*/
+
+	this->addChild(m_emitter);
+}
\ No newline at end of file
diff --git a/Classes/CombatAnimation.h b/Classes/CombatAnimation.h
new file mode 100644
index 0000000..a48edbe
--- /dev/null
+++ b/Classes/CombatAnimation.h
@@ -0,0 +1,14 @@
+#ifndef __COMBAT_ANIMATION_H__
+#define __COMBAT_ANIMATION_H__
+#include "cocos2d.h"
+#include "cocos-ext.h"
+using namespace cocos2d;
+USING_NS_CC_EXT; 
+class CombatAnimation:public CCNode
+{
+public:
+	CREATE_FUNC(CombatAnimation);
+public:
+	void fireParticle(int direction);
+};
+#endif 
\ No newline at end of file
diff --git a/Classes/CombatScene.cpp b/Classes/CombatScene.cpp
index 0af66d0..b4d3380 100644
--- a/Classes/CombatScene.cpp
+++ b/Classes/CombatScene.cpp
@@ -1,149 +1,345 @@
-#include "AppMacros.h"//$
-#include "CombatScene.h"
-USING_NS_CC;
+Ôªø#include "CombatScene.h"
 
-//update:2014-10-4 19:37:38
+USING_NS_CC;
 
-CCScene* Combat::scene() {
-	CCScene *scene = CCScene::create();
-	Combat *layer = Combat::create();
-	scene->addChild(layer);
-	// return the scene
-	return scene;
+CCScene* Combat::scene()
+{
+    // 'scene' is an autorelease object
+    CCScene *scene = CCScene::create();
+    // 'layer' is an autorelease object
+    Combat *layer = Combat::create();
+    // add layer as a child to scene
+    scene->addChild(layer);
+    // return the scene
+    return scene;
 }
 
-bool Combat::init() {
+// on "init" you need to initialize your instance
+bool Combat::init()
+{
+    //////////////////////////////
+    // 1. super init first
+    if ( !CCLayer::init() )
+    {
+        return false;
+    }
+	//
+    isPlayingAnimation = false;
 
-	if (!CCLayer::init()) {
-		return false;
-	}
+    CCSize visibleSize = CCDirector::sharedDirector()->getVisibleSize();
+    CCPoint origin = CCDirector::sharedDirector()->getVisibleOrigin();
+	//ËßíËâ≤ÂàõÂª∫
+	cplayer = CPlayer::create();
+	cplayer->setPlayer();
+	this->addChild(cplayer);
+	monster = Monster::create();
+	monsterType = 0;//‰∏¥Êó∂
+	monster->setMonster(monsterType);
+	
 
-	//≤ª“™Œ Œ“¥”ƒƒ¿Ô¿¥
-	cc_timeval psv;
-	CCTime::gettimeofdayCocos2d(&psv,NULL);
-	unsigned long int rand_seed = psv.tv_sec*1000+psv.tv_usec/1000;
-	srand(rand_seed);
+	this->addChild(monster);
+	//Ë°ÄÊù°ÂàõÂª∫
+	playerblood = Blood::create();
+	playerblood->setBloodSlider();
+	playerblood->setSliderPosition(ccp(150,visibleSize.height-50));
+	playerblood->setTotalBlood(cplayer->healthPoint);
+	playerblood->setCurrentBlood(cplayer->currentHp);	
+	monsterblood = Blood::create();
+	monsterblood->setBloodSlider();
+	monsterblood->setSliderPosition(ccp(visibleSize.width-150,visibleSize.height-50));
+	monsterblood->setTotalBlood(monster->healthPoint);
+	monsterblood->setCurrentBlood(monster->currentHp);
+	this->addChild(playerblood);
+	this->addChild(monsterblood);
 
-	initSprite();
-	initLabel();
-	show();
-	return true;
-}
+	//Á≠âÁ∫ß‰∏éÂΩìÂâçË°ÄÈáèlabel
+	/*Á≠âÁ∫ß*/
+	char level[10],blood[10];
+	sprintf(level,"Lv:%d",cplayer->level);
+	plevelLabel = CCLabelTTF::create(level, "Heiti SC",20);
+	plevelLabel->setPosition(ccp(60,visibleSize.height-20));
+	this->addChild(plevelLabel,2);
+	sprintf(level,"Lv:%d",monster->level);
+	mlevelLabel = CCLabelTTF::create(level, "Heiti SC",20);
+	mlevelLabel->setPosition(ccp(visibleSize.width-60,visibleSize.height-20));
+	this->addChild(mlevelLabel,2);
+	/*Ë°ÄÈáè*/
+	sprintf(blood,"Hp:%d",cplayer->currentHp);
+	pbloodLabel = CCLabelTTF::create(blood, "Heiti SC",20);
+	pbloodLabel->setPosition(ccp(240,visibleSize.height-20));
+	this->addChild(pbloodLabel,2);
+	sprintf(blood,"Hp:%d",monster->currentHp);
+	mbloodLabel = CCLabelTTF::create(blood, "Heiti SC",20);
+	mbloodLabel->setPosition(ccp(visibleSize.width-240,visibleSize.height-20));
+	this->addChild(mbloodLabel,2);
 
 
-void Combat::initSprite(){
-	background = CCSprite::create(COMBAT_IMG_PATH);//$
-	background->setPosition(ccp(background->getContentSize().width/2, background->getContentSize().height/2));
-	background->setTag(BACKGROUND);
-	addChild(background, 0);
 
-	player = Player1::create();
-	player->setPosition(ccp(-(player->getChildByTag(IMGSP)->getContentSize().width+150), 
-	player->getChildByTag(IMGSP)->getContentSize().height));
-	addChild(player);
+	//ÊåâÈíÆÂàõÂª∫
+	playerbutton = AbilityButton::create();
+	monsterbutton = AbilityButton::create();
+	playerbutton->CreateButton();
+	playerbutton->setButtonPosition(ccp(50,50));
+	playerbutton->updateDamage(cplayer->level);
+	monsterbutton->CreateButton();
+	monsterbutton->setButtonPosition(ccp(420,50));
+	monsterbutton->LockButtonTouch();
+	monsterbutton->updateDamage(monster->level);
+	this->addChild(playerbutton);
+	this->addChild(monsterbutton);
 
-	enemy = Enemy::create();
-	enemy->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width - enemy->getChildByTag(IMGSP)->getContentSize().width-150,
-		CCDirector::sharedDirector()->getVisibleSize().height -enemy->getChildByTag(IMGSP)->getContentSize().height));
-	addChild(enemy);	
+	//Ê∏∏ÊàèÁªìÊùüLabel
+	winLabel = CCLabelTTF::create("YOU WIN!", "Heiti SC", 80);
+	loseLabel = CCLabelTTF::create("YOU LOSE", "Heiti SC", 80);
+	winLabel->setPosition(ccp(visibleSize.width/2-20,visibleSize.height/2+20));
+	loseLabel->setPosition(ccp(visibleSize.width/2-20,visibleSize.height/2+20));
+	winLabel->setVisible(false);
+	loseLabel->setVisible(false);
+	this->addChild(winLabel);
+	this->addChild(loseLabel);
+
+	//scheduleÁõëÂê¨ÔºåÊØèÂ∏ßÂà∑Êñ∞‰∏ÄÊ¨°
+	this->scheduleUpdate();
+
+	//ËÆ¢ÈòÖÊí≠ÊîæÂä®ÁîªÁöÑÊ∂àÊÅØ
+	CCNotificationCenter::sharedNotificationCenter()->addObserver(this,callfuncO_selector(Combat::playAnimation),"animation",NULL);
+	//ËÆ¢ÈòÖÊ∏∏ÊàèÁªìÊùü
+	CCNotificationCenter::sharedNotificationCenter()->addObserver(this,callfuncO_selector(Combat::gameOver),"gameover",NULL);
 
-	CombatCtrl* menu = CombatCtrl::create();
-	menu->setPointers(player,enemy,background);
-	addChild(menu);
-}
 
-//@labelœ‘ æ
-void Combat::initLabel(){
-	CCNotificationCenter::sharedNotificationCenter()->addObserver(this,callfuncO_selector(Combat::ScaleBlood),"gethurt",NULL);
-	
-	//œ‘ æ◊‘º∫”Îµ–»Àµƒ—™ÃıÕº∆¨
-	pBlood = CCSprite::create(BLOOD_IMG_PATH);//$
-	pBlood->setPosition(ccp(1047, 250));//138
-	pBlood->setAnchorPoint(ccp(1, 1));pBlood->setTag(12);
-	pBlood->setScaleX(1);
-	addChild(pBlood,1);
-	eBlood = CCSprite::create(BLOOD_IMG_PATH);//$
-	eBlood->setPosition(ccp(478, 558));
-	eBlood->setAnchorPoint(ccp(1, 1));eBlood->setTag(22);
-	eBlood->setScale(1);
-	addChild(eBlood,1);
-
-	//œ‘ æÀ´∑Ω—™¡ø÷µ
-	CCPoint pBloodPos = pBlood->getPosition();CCPoint eBloodPos = eBlood->getPosition();
-	char playerHp[10];char enemyHp[10];
-	sprintf(playerHp, "%d/%d",player->Hp,player->Hp);
-	pBloodLabel = CCLabelTTF::create("" ,"Heiti SC", 30);pBloodLabel->setString(playerHp);pBloodLabel->setPosition(ccp(pBloodPos.x-10,pBloodPos.y-22));pBloodLabel->setAnchorPoint(ccp(1, 0.5));pBloodLabel->setTag(13);
-	addChild(pBloodLabel,2);
-	sprintf(enemyHp, "%d/%d",enemy->Hp,enemy->Hp);
-	eBloodLabel = CCLabelTTF::create("", "Heiti SC", 30);eBloodLabel->setString(enemyHp);eBloodLabel->setPosition(ccp(eBloodPos.x-250,eBloodPos.y-22));eBloodLabel->setAnchorPoint(ccp(1, 0.5));eBloodLabel->setTag(23);
-	addChild(eBloodLabel,2);
-
-	//œ‘ æÀ´∑Ωµ»º∂
-	char level[10];
-	sprintf(level,"Lv.%d",player->level);
-	CCLabelTTF *plevel = CCLabelTTF::create("","Heiti SC",30);plevel->setFontFillColor(ccBLACK);plevel->setString(level);plevel->setPosition(ccp(pBloodPos.x-13,pBloodPos.y+32));plevel->setAnchorPoint(ccp(1,1));plevel->setTag(33);
-	addChild(plevel,2);
-	sprintf(level,"Lv.%d",enemy->level);
-	CCLabelTTF *elevel = CCLabelTTF::create("","Heiti SC",30);plevel->setFontFillColor(ccBLACK);elevel->setString(level);elevel->setPosition(ccp(eBloodPos.x-320,eBloodPos.y+32));elevel->setAnchorPoint(ccp(1,1));elevel->setTag(33);
-	addChild(elevel,2);
-
-	//œ‘ æ√˚◊÷
-	const char* pname;
-	const char* ename;
-	CCLabelTTF *pName = CCLabelTTF::create("","Heiti SC",30);
-	pname = player->name.getCString();
-	pName->setString(pname);
-	pName->setFontFillColor(ccBLACK);pName->setPosition(ccp(pBloodPos.x-300,pBloodPos.y+32));pName->setAnchorPoint(ccp(1,1));pName->setTag(33);
-	addChild(pName,2);
-	CCLabelTTF *eName = CCLabelTTF::create("","Heiti SC",30);
-	ename = enemy->name.getCString();
-	eName->setString(ename);
-	eName->setFontFillColor(ccBLACK);eName->setString(enemy->name.getCString());eName->setPosition(ccp(eBloodPos.x-10,eBloodPos.y+35));eName->setAnchorPoint(ccp(1,1));eName->setTag(33);
-	addChild(eName,2);
-
-	//æ≠—È÷µ
 
+    return true;
 }
 
-void Combat::show(){
 
-	CCActionInterval* moveTo1 = CCMoveTo::create(1.5,ccp((player->getChildByTag(IMGSP)->getContentSize().width+150), 
-		player->getChildByTag(IMGSP)->getContentSize().height));
-	player->runAction(moveTo1);
 
-	CCAction* enemyUp = Animation::getAction(SWAY,enemy->getChildByTag(IMGSP)->getContentSize());
-	CCSequence* seq = CCSequence::create(CCDelayTime::create(1.5),enemyUp,NULL);
-	enemy->runAction(seq);
+void Combat::update(float delta)
+{
+	if (playerbutton->isTouch==true&&isPlayingAnimation==false)
+	{
+		//ÈîÅÂÆöplayerbuttonËß¶Êë∏
+		playerbutton->LockButtonTouch();
+		//ÊÄ™Áâ©ÈÄâÊã©button
+		monsterButtonTag = monster->chooseButton();
+		//Âà§Êñ≠Â±ûÊÄßËÉúË¥ü
+		winnerNum = checkButtonTag(playerbutton->tag,monsterButtonTag);
+		CCLOG("win:%d",winnerNum);
+		//‰º§ÂÆ≥ËÆ°ÁÆó
+		damage = damageCompute(winnerNum);
+		CCLOG("damage:%d",damage);
+		//Êí≠ÊîæÊàòÊñóÂä®Áîª
+		//postÊ∂àÊÅØ
+		CCNotificationCenter::sharedNotificationCenter()->postNotification("animation",NULL);
+		//Êõ¥Êñ∞Ë°ÄÊù°
+		updateBlood(winnerNum,damage);
+		playerbutton->isTouch=false;
+		//Âà§Êñ≠ÊòØÂê¶ÁªìÊùü
+		checkGameOver();
+		
+	}
+	
 }
 
+//Âà§Êñ≠ÂèåÊñπÈÄâÊã©Â±ûÊÄßÁöÑËÉúË¥ü
+int Combat::checkButtonTag(int playerTag,int monsterTag)
+{
+	CCLOG("tag:%d  tag:%d",playerTag,monsterTag);
+	//Âπ≥Â±Ä
+	if (playerTag==monsterTag)
+	{
+		if(playerbutton->getDamageByTag(playerTag)>=monsterbutton->getDamageByTag(monsterTag))
+			return playerWin;
+		else
+			return monsterWin;
+	}
+	else if ((playerTag==0&&monsterTag==2)||(playerTag==1&&monsterTag==0)||(playerTag==2&&monsterTag==1))
+	{
+		return playerWin;
+	}
+	else
+	{
+		return monsterWin;
+	}
+}
 
+//‰º§ÂÆ≥ËÆ°ÁÆó
+int Combat::damageCompute(int winnerNum)
+{
+	int damage,pdamage,mdamage;
+	//Âπ≥Â±ÄÊÉÖÂÜµ‰º§ÂÆ≥‰∏∫ÂèåÊñπÂ∑ÆÂÄº
+	if (playerbutton->tag==monsterButtonTag)
+	{
+		pdamage = playerbutton->getDamageByTag(playerbutton->tag);
+		mdamage = monsterbutton->getDamageByTag(monsterButtonTag);
+		damage = abs(pdamage-mdamage);
+	}
+	//ÈùûÂπ≥Â±ÄÊÉÖÂÜµ‰º§ÂÆ≥ÂÄº
+	else
+	{
+		if (winnerNum==playerWin)
+		{
+			damage = playerbutton->getDamageByTag(playerbutton->tag);
+		}
+		else if (winnerNum==monsterWin)
+		{
+			damage = monsterbutton->getDamageByTag(monsterButtonTag);
+		}
+	}
+	return damage;
+}
 
+//Âà∑Êñ∞Ë°ÄÊù°
+void Combat::updateBlood(int winnerNum,int damage)
+{
+	if (winnerNum==playerWin)
+	{
+		monster->currentHp-=damage; 
+		if(monster->currentHp<=0)
+			monster->currentHp=0;
+	}
+	else
+	{
+		cplayer->currentHp-=damage;
+		if(cplayer->currentHp<=0)
+			cplayer->currentHp=0;
+	}
 
+	playerblood->setCurrentBlood(cplayer->currentHp);
+	monsterblood->setCurrentBlood(monster->currentHp);
+	char blood[10];
+	sprintf(blood,"Hp:%d",cplayer->currentHp);
+	pbloodLabel->setString(blood);
+	sprintf(blood,"Hp:%d",monster->currentHp);
+	mbloodLabel->setString(blood);
+}
+//Âà§Êñ≠Ê∏∏ÊàèÊòØÂê¶ÁªìÊùü
+void Combat::checkGameOver()
+{
+	if (cplayer->currentHp<=0)
+	{
+			gameWinner = 1;
+		CCNotificationCenter::sharedNotificationCenter()->postNotification("gameover",NULL);
+	
+		CCLOG("monster win!");
+	}
+	else if (monster->currentHp<=0)
+	{
+		gameWinner = 0;
+		CCNotificationCenter::sharedNotificationCenter()->postNotification("gameover",NULL);
+		
+		CCLOG("player win!");
+		cplayer->exp++;
+		sGlobal->playerState->exp = cplayer->exp;
+	}
+	else
+	{
+		//Âà∑Êñ∞‰∏ÄÊ¨°button
+		playerbutton->updateDamage(cplayer->level);
+		monsterbutton->updateDamage(monster->level);
+	}
+		
+}
 
 
-void Combat::ScaleBlood(CCObject* character){
-	Character* p = (Character*)character;
+void Combat::playAnimation(CCObject* psender)
+{
+	int pZorder,mZorder;
+	isPlayingAnimation=true;
+	animationDone = false;
+	CCBlink* blk = CCBlink::create(0.5,3);
+	CCSequence* pblink = CCSequence::create(CCDelayTime::create(1.2),blk,NULL);
+	playerAttack = Particles::create();
+	monsterAttack = Particles::create();
+	if (playerbutton->tag==0)
+	{
+		playerAttack->setFireParticle();
+		playerAttack->playerAttack();
+	}
+	if (playerbutton->tag==1)
+	{
+		playerAttack->setWaterParticle();
+		playerAttack->playerAttack();
+	}
+	if (playerbutton->tag==2)
+	{
+		playerAttack->setWoodParticle();
+		playerAttack->playerAttack();
+	}
+	//monster
+	if (monsterButtonTag==0)
+	{
+		monsterAttack->setFireParticle();
+		monsterAttack->monsterAttack();
+	}
+	if (monsterButtonTag==1)
+	{
+		monsterAttack->setWaterParticle();
+		monsterAttack->monsterAttack();
+	}
+	if (monsterButtonTag==2)
+	{
+		monsterAttack->setWoodParticle();
+		monsterAttack->monsterAttack();
+	}
+	
+	if (winnerNum==1)
+	{//monster win
+		pZorder=1;
+		mZorder=2;
+		playerAttack->setParticleLife(0.5);
+		cplayer->runAction(pblink);
 
-	int ht = p->Hp-p->remainHp;
+	}
+	else
+	{
+		pZorder=2;
+		mZorder=1;
+		monsterAttack->setParticleLife(0.5);
+		monster->runAction(pblink);
+	}
 
-	float st =  (float)p->remainHp/(float)p->Hp;
-	
-	CCScaleTo *Scale =CCScaleTo::create(0.5,st,1.0f);
 
+	CCSequence* seq = CCSequence::create(CCDelayTime::create(1.5),CCCallFunc::create(this,callfunc_selector(Combat::setSignal)),NULL);
 
-	char blood[10];
-	if (p->ishero)
+	playerbutton->runAction(seq);
+ 
+	addChild(playerAttack,pZorder);
+	addChild(monsterAttack,mZorder);
+}
+
+void Combat::setSignal()
+{
+	isPlayingAnimation=false;
+	//ÊÅ¢Â§çÊåâÈíÆÂèØËß¶Êë∏Áä∂ÊÄÅ
+	playerbutton->UnlockButtonTouch();
+}
+
+void Combat::gameOver(CCObject* psender)
+{
+	if (gameWinner==0)
 	{
-		Player1* player0=(Player1*)p;
-		sprintf(blood, "%d/%d", player0->remainHp,player0->Hp);
-		pBloodLabel->setString(blood);
-		pBlood->runAction(Scale);
+		winLabel->setVisible(true);
+
 	}
 	else
 	{
-		Enemy* enemy0=(Enemy*) p;
-		sprintf(blood, "%d/%d", enemy0->remainHp,enemy0->Hp);
-		eBloodLabel->setString(blood);
-		eBlood->runAction(Scale);
+		loseLabel->setVisible(true);
 	}
+	CCSequence* seq = CCSequence::create(CCDelayTime::create(3.5),CCCallFunc::create(this,callfunc_selector(Combat::popCombat)),NULL);
+	playerbutton->runAction(seq);
 }
+
+void Combat::popCombat()
+{
+	//Â≠òÊ°£
+
+
+	//‰øùÂ≠òÔºöÁªèÈ™åÂÄºexp
+
+
+	//ÁßªÈô§ËßÇÂØüËÄÖ
+	CCNotificationCenter::sharedNotificationCenter()->removeAllObservers(this);
+	//popScene
+	CCEGLView::sharedOpenGLView()->setDesignResolutionSize(672,448, kResolutionExactFit);
+	CCDirector::sharedDirector()->popScene();
+}
\ No newline at end of file
diff --git a/Classes/CombatScene.cpp~ b/Classes/CombatScene.cpp~
index ea695b0..4e99c93 100644
--- a/Classes/CombatScene.cpp~
+++ b/Classes/CombatScene.cpp~
@@ -56,7 +56,7 @@ void Combat::showPlayer(){
 
 void Combat::showEnemy(){
 	
-	CCAction* enemyUp = Animation::getAction(SWAY,enemy->getChildByTag(IMGSP)->getContentSize());
+	CCAction* enemyUp = AnimLib::getAction(SWAY,enemy->getChildByTag(IMGSP)->getContentSize());
 	CCSequence* seq = CCSequence::create(CCDelayTime::create(1.5),enemyUp,NULL);
 	enemy->runAction(seq);
 }
diff --git a/Classes/CombatScene.h b/Classes/CombatScene.h
index 5145303..8ce4671 100644
--- a/Classes/CombatScene.h
+++ b/Classes/CombatScene.h
@@ -1,43 +1,69 @@
-//
-//  CombatScene.h
-//  Ë°ÄËâ≤ÊòéËøúÊπñ
-//
-//  Created by Ring King on 14-4-22.
-//
-//
-
-#ifndef _________CombatScene__
-#define _________CombatScene__
+Ôªø#ifndef __COMBAT_SCENE_H__
+#define __COMBAT_SCENE_H__
 
 #include "cocos2d.h"
-#include "Player1.h"
-#include "Enemy.h"
-#include "CombatCtrl .h"
-#include "Animation.h"
-//update:2014-10-4 19:37:23
+#include "Blood.h"
+#include "CPlayer.h"
+#include "Monster.h"
+#include "AbilityButton.h"
+#include "Particles.h"
+
+using namespace cocos2d;
+
+typedef enum{
+	playerWin,
+	monsterWin,
+	drawTie
+}chechResult;
+
 
 class Combat : public cocos2d::CCLayer
 {
 public:
+    // Here's a difference. Method 'init' in cocos2d-x returns bool, instead of returning 'id' in cocos2d-iphone
+    virtual bool init();  
+    // there's no 'id' in cpp, so we recommend returning the class instance pointer
     static cocos2d::CCScene* scene();
+    // a selector callback
+    void menuCloseCallback(CCObject* pSender);
+    // implement the "static node()" method manually
     CREATE_FUNC(Combat);
-	virtual bool init();
-   
-	void initSprite();
-    void initLabel();
-	void show();
-
-	void ScaleBlood(CCObject* character);
+	virtual void update(float delta);
+	int checkButtonTag(int playerTag,int monsterTag);
+	int damageCompute(int winner);
+	//Âà∑Êñ∞Ë°ÄÊù°
+	void updateBlood(int winnerNum,int damage);
+	void checkGameOver();
+	void playAnimation(CCObject* psender);
+	void setSignal();
+	void gameOver(CCObject* psender);
+	void popCombat();
+	//
+	int monsterType;
 private:
-    Player1* player;
-	Enemy* enemy;
-	CCSprite *background;
-	CCSprite *pBlood;
-	CCSprite *eBlood;
-	CCLabelTTF *pBloodLabel;
-	CCLabelTTF *eBloodLabel;
-};
+	CPlayer* cplayer;
+	Monster* monster;
+	Blood* playerblood;
+	Blood* monsterblood;
+	AbilityButton* playerbutton;
+	AbilityButton* monsterbutton;
+	Particles* playerAttack;
+	Particles* monsterAttack;
+	CCLabelTTF* winLabel;
+	CCLabelTTF* loseLabel;
+	CCLabelTTF* pbloodLabel;
+	CCLabelTTF* mbloodLabel;
+	CCLabelTTF* plevelLabel;
+	CCLabelTTF* mlevelLabel;
 
-#endif /* defined(_________CombatScene__) */
+	int monsterButtonTag;
+	int damage;
+	int winnerNum;
+	int gameWinner;
+	bool isPlayingAnimation;
+	bool animationDone;
 
 
+};
+
+#endif // __Combat_SCENE_H__
diff --git a/Classes/ControlPanel.cpp b/Classes/ControlPanel.cpp
index f3b2f27..07d8791 100644
--- a/Classes/ControlPanel.cpp
+++ b/Classes/ControlPanel.cpp
@@ -67,7 +67,7 @@ void ControlPanel::initControllerListeners()
 	rwindow->setPosition(ccp(CCDirector::sharedDirector()->getWinSize().width/2,
 		CCDirector::sharedDirector()->getWinSize().height/2));
 	rGlobal->rwindow=rwindow;
-	this->addChild(rwindow,11);
+	this->addChild(rwindow,WIN_ON_PANEL_ZOR);
 
 	//bigwindow=BigWindow::create();
 	//this->setTag(BIGWINDOW);this->addChild(bigwindow,11);
@@ -75,7 +75,7 @@ void ControlPanel::initControllerListeners()
 
 	diawindow=DiaWindow::create();
 	rGlobal->diawindow=diawindow;
-	this->setTag(DIAWINDOW);this->addChild(diawindow,11);
+	this->setTag(DIAWINDOW);this->addChild(diawindow,WIN_ON_PANEL_ZOR);
 }
 
 void ControlPanel::initControllers()
@@ -108,6 +108,9 @@ void ControlPanel::initNightBg()
 	CCSprite* nightBg = CCSprite::create(NIGHTBG_IMG_PATH);
 	rGlobal->nightBg = nightBg;
 	nightBg->setPosition(ccp(nightBg->getContentSize().width / 2, nightBg->getContentSize().height / 2));
-	nightBg->setOpacity(150);
 	this->addChild(nightBg);
+
+	int hour = TimeUtil::getHour();
+	if (hour>=18 || hour<=7) nightBg->setOpacity(150);
+	else nightBg->setOpacity(0);
 }
diff --git a/Classes/ControlPanel.h b/Classes/ControlPanel.h
index cf081bc..6028291 100644
--- a/Classes/ControlPanel.h
+++ b/Classes/ControlPanel.h
@@ -7,6 +7,7 @@
 #include "ButtonA.h"
 #include "TouchScreen.h"
 #include "Menu.h"
+#include "TimeUtil.h"
 using namespace cocos2d;
 
 //update£∫2014-9-26 01:33:57
diff --git a/Classes/CrossMapEvent.cpp b/Classes/CrossMapEvent.cpp
new file mode 100644
index 0000000..a476214
--- /dev/null
+++ b/Classes/CrossMapEvent.cpp
@@ -0,0 +1,36 @@
+#include "CrossMapEvent.h"
+#include "Hero.h"
+
+void CrossMapEvent::happen()
+{
+	//choose map 
+	CCString* path; CCPoint heroTilePos=rGlobal->getHeroTilePos();
+	int mapNo=sGlobal->mapState->mapNo; CCPoint delt=ccp(1,0);
+
+	if(mapNo==MAP11) path=CCString::create(MAP11_PATH), delt=ccp(1,0);
+	else path=CCString::create(MAP12_PATH), delt=ccp(-1,0);
+
+	//re-create hero
+	if(HERO_COVER_MODE)
+	{
+		rGlobal->hero=Hero::create();
+		//rGlobal->hero->gotFocusT();
+		rGlobal->hero->setFaceDirection(rGlobal->hero->dir);
+	}
+
+	//change map
+	Map* map = (Map*)rGlobal->map;
+	map->removeAllChildrenWithCleanup(true);
+	map=Map::create(path->getCString());
+	map->crossMap(heroTilePos,mapNo);
+	rGlobal->hero->addChild(map);
+	rGlobal->map=map;
+
+	//re-create rGlobal->shadow
+	if(rGlobal->shadow==NULL) return;
+	rGlobal->shadow = ShadowingMan::create();
+	CCPoint heroPos = heroTilePos + delt;
+	CCPoint tPos = map->positionFromTileCoord(heroPos);
+	rGlobal->shadow->setPosition(tPos);
+	map->addChild(rGlobal->shadow,5);
+}
diff --git a/Classes/CrossMapEvent.h b/Classes/CrossMapEvent.h
new file mode 100644
index 0000000..1dd4148
--- /dev/null
+++ b/Classes/CrossMapEvent.h
@@ -0,0 +1,12 @@
+#ifndef _CROSS_MAP_EVENT_H_
+#define _CROSS_MAP_EVENT_H_
+#include "Event.h"
+
+//re-init resources after map crossing
+class CrossMapEvent //: public Event
+{
+public:
+    static void happen();
+};
+#endif
+
diff --git a/Classes/EventLoader.cpp b/Classes/EventLoader.cpp
index 85d197a..095ef3a 100644
--- a/Classes/EventLoader.cpp
+++ b/Classes/EventLoader.cpp
@@ -2,6 +2,8 @@
 #include "TalkManEvent.h"
 #include "GetSuPEvent.h"
 #include "DiaEvent.h"
+#include "GetShdwEvent.h"
+#include "ReloadEvent.h"
 
 CCArray* EventLoader::start(const char* sFilePath)
 {
@@ -24,6 +26,10 @@ CCArray* EventLoader::start(const char* sFilePath)
 				event=GetSuPEvent::create(); break;
 			case DIALOG_EVT:
 				event=DiaEvent::create(); break;
+			case SHADOW_EVT:
+				event=GetShdwEvent::create(); break;
+			case RELOAD_EVT:
+				event=ReloadEvent::create(); break;
 				/*case ITEM_EVT:
 				  event=ItemEvent::create(); break;
 				  case COMBAT_EVT:
@@ -96,6 +102,5 @@ CCArray* EventLoader::start(const char* sFilePath)
 		}
 		eventSet->addObject(event);
 	}
-	eventSet->retain();
 	return eventSet;
 }
diff --git a/Classes/EventManager.cpp b/Classes/EventManager.cpp
index 67124ec..82c79a6 100644
--- a/Classes/EventManager.cpp
+++ b/Classes/EventManager.cpp
@@ -1,9 +1,12 @@
 #include "AppMacros.h"
 #include "EventManager.h"
 
-void EventManager::load(int sTime)
+void EventManager::load(int fnmapNo, int weekday)
 {
-	loadAllEvents(sTime);
+	events=CCArray::create();
+	events->retain();
+	loadAllEvents(fnmapNo*MAP_SCALER+weekday);
+	loadAllEvents(fnmapNo*MAP_SCALER+sGlobal->mapState->sTime);
 	loadEmap();
 }
 
@@ -46,7 +49,7 @@ ControllerListener* EventManager::happen(CCPoint coord, int ent)
 
 		curPtr=findEventById(event->next);
 	}
-	while(curPtr==NULL);
+	while(curPtr!=NULL);
 
 	return subject;
 }
@@ -69,7 +72,6 @@ void EventManager::release()
 
 EventManager::~EventManager()
 {
-	events->release();
 	release();
 }
 
@@ -106,10 +108,10 @@ ControllerListener* EventManager::listener(int type)
     return NULL;
 }
 
-void EventManager::loadAllEvents(int sTime)
+void EventManager::loadAllEvents(int fileCode)
 {
-	CCString* str=CCString::createWithFormat(EVENT_CSV_PATH,sTime);
-	events=EventLoader::start(str->getCString());
+	CCString* str=CCString::createWithFormat(EVENT_CSV_PATH,fileCode);
+	events->addObjectsFromArray(EventLoader::start(str->getCString())); 
 }
 
 void EventManager::loadEmap()
@@ -128,7 +130,7 @@ void EventManager::loadEmap()
 int EventManager::isInstant(Event* event)
 {
 	const int nn=2;
-	const int instant[nn]={GET_SUP_EVT};
+	const int instant[nn]={GET_SUP_EVT,SHADOW_EVT};
 	for(int i=0;i<nn;i++)
 		if(event->id==instant[i])
 			return TRUE;
diff --git a/Classes/EventManager.h b/Classes/EventManager.h
index 07777d3..bd4279a 100644
--- a/Classes/EventManager.h
+++ b/Classes/EventManager.h
@@ -15,7 +15,7 @@ using namespace cocos2d;
 class EventManager
 {
 public:
-    void load(int sTime);
+    void load(int fnmapNo, int weekday);
     ControllerListener* happen(CCPoint coord, int ent);//entrance through hero or buttonA
 	void next();
 	int isInstant(Event* event);
@@ -29,7 +29,7 @@ public:
 private:
     Event* findEventById(int id);
     ControllerListener* listener(int type);
-    void loadAllEvents(int sTime);
+    void loadAllEvents(int fileCode);
     void loadEmap();
     void markHappened(Event* event);
 };
diff --git a/Classes/GetShdwEvent.cpp b/Classes/GetShdwEvent.cpp
new file mode 100644
index 0000000..96c6496
--- /dev/null
+++ b/Classes/GetShdwEvent.cpp
@@ -0,0 +1,30 @@
+#include "GlobalState.h"
+#include "GetShdwEvent.h"
+#include "ShadowingMan.h"
+#include "Map.h"
+
+void GetShdwEvent::happen() 
+{
+	//extract starting pos
+	CCInteger* intgx=(CCInteger*)args->lastObject();
+	int dir=-1;
+	if(intgx!=NULL) dir=intgx->getValue();
+	CCPoint pos=ccp(1,0);
+	switch(dir)
+	{
+		case Down: pos=ccp(0,1); break;
+		case Left: pos=ccp(-1,0); break;
+		case Right: pos=ccp(1,0); break;
+		case Up: pos=ccp(0,-1); break;
+		default: CCLog("Unexpected Shadow pos. Using default.");
+	}
+
+	Map* map = (Map*)rGlobal->map;
+	rGlobal->shadow = ShadowingMan::create(); 
+	CCPoint  heroTilePos=map->tileCoordFromPosition(
+			rGlobal->hero->getPosition() - map->getPosition() );
+	CCPoint heroPos = heroTilePos + pos;
+	CCPoint tPos = map->positionFromTileCoord(heroPos);
+	rGlobal->shadow->setPosition(tPos);
+	rGlobal->map->addChild(rGlobal->shadow,5);
+}
diff --git a/Classes/GetShdwEvent.h b/Classes/GetShdwEvent.h
new file mode 100644
index 0000000..44f31c9
--- /dev/null
+++ b/Classes/GetShdwEvent.h
@@ -0,0 +1,13 @@
+#ifndef _GET_SHADOW_EVENT_H_
+#define _GET_SHADOW_EVENT_H_
+#include "Event.h"
+
+//Hero gets Shadowing Boyfriend instantly after event
+class GetShdwEvent: public Event
+{
+public:
+    CREATE_FUNC(GetShdwEvent);
+public:
+    void happen();
+};
+#endif
diff --git a/Classes/GlobalPath.h b/Classes/GlobalPath.h
index a84ede9..d3556e4 100644
--- a/Classes/GlobalPath.h
+++ b/Classes/GlobalPath.h
@@ -35,9 +35,13 @@
 #define NAME_PATH  "txt/names.txt"
 #define SCRIPT_PATH "txt/Script0"
 #define SCRIPT_PATH_LEN 10
+#define FINAL_SCRIPT_PATH "txt/Fin1"
+#define FINAL_SCRIPT_PATH_LEN 7
 #define CLOSEN_IMG_PATH "img/story/CloseNormal.png"
 #define CLOSES_IMG_PATH "img/story/CloseSelected.png"
-#define BGNAME_IMG_PATH "img/story/bg_x00.jpg"
+#define CONFIRM_BACKGROUND_IMG_PATH "img/story/ConfirmBackground.png"
+#define CONFIRM_BUTTOM_IMG_PATH "img/story/ConfirmButton.png"
+#define BGNAME_IMG_PATH "img/story/bg_%s.jpg"
 #define BGNAME_PATH_LEN 13
 #define DUIHUAKUANG_IMG_PATH "img/story/Duihuakuang.png"
 #define PLIST_IMG_PATH "img/story/vdrawing.plist"
@@ -46,7 +50,8 @@
 #define STAFFBG_IMG_PATH "img/story/staff_bg.png"
 #define STAFF_IMG_PATH "img/story/staff.png"
 #define BLACK_IMG_PATH "img/story/black.png"
-#define LEAFLET_IMG_PATH "img/story/leafletsclose.png"
+#define LEAFLET_IMG_PATH "img/story/leaflet.png"
+#define LEAFLET_CLOSE_IMG_PATH "img/story/leafletsclose.png"
 
 //new combat
 #define PLAYER_IMG_PATH "img/new combat/hero.png"
diff --git a/Classes/GlobalRes.h b/Classes/GlobalRes.h
index d31c247..4d61171 100644
--- a/Classes/GlobalRes.h
+++ b/Classes/GlobalRes.h
@@ -14,6 +14,7 @@ public:
     Window* rwindow;
     DiaWindow* diawindow;
     Backpack* backpack;
+	HumanEntity* shadow;
 };
 //note that when an event wish to walk the hero, do as follow:
 //WalkingMan* walkHero=(WalkingMan*)rGloble->hero;
diff --git a/Classes/GlobalState.cpp b/Classes/GlobalState.cpp
index 4f44622..0171927 100644
--- a/Classes/GlobalState.cpp
+++ b/Classes/GlobalState.cpp
@@ -13,21 +13,27 @@ void GlobalState::load()
     loadSuperPower();
     loadPlayerState();
     loadDoneList();
+	loadPlayerState();
 }
 
 void GlobalState::save()
 {
-   SAVE_INT(POSITIONX_MRCD, mapState->positionX);
-   SAVE_INT(POSITIONY_MRCD, mapState->positionY);
-   SAVE_INT(FACEDIR_MRCD, mapState->faceDir);
-   SAVE_INT(MAPNO_MRCD, mapState->mapNo);
-   SAVE_INT(STORYCNT_MRCD, mapState->storyCnt);
-
-   SAVE_INT(SPEED_SRCD, superPower->speed);
-   SAVE_BOOL(TELEPORT_SRCD, superPower->teleport);
-   SAVE_BOOL(STEALTH_SRCD, superPower->stealth);
-   SAVE_BOOL(SURF_SRCD, superPower->surf);
-   saveDoneList();
+	SAVE_INT(POSITIONX_MRCD, mapState->positionX);
+	SAVE_INT(POSITIONY_MRCD, mapState->positionY);
+	SAVE_INT(FACEDIR_MRCD, mapState->faceDir);
+	SAVE_INT(MAPNO_MRCD, mapState->mapNo);
+	SAVE_INT(STORYCNT_MRCD, mapState->storyCnt);
+	SAVE_BOOL(HAS_SHADOW_MRCD, mapState->hasSh);
+	SAVE_INT(SH_STAND_P_MRCD, mapState->standPos);
+	SAVE_INT(STORY_TIME_MRCD, mapState->sTime);
+
+	SAVE_INT(SPEED_SRCD, superPower->speed);
+	SAVE_BOOL(TELEPORT_SRCD, superPower->teleport);
+	SAVE_BOOL(STEALTH_SRCD, superPower->stealth);
+	SAVE_BOOL(SURF_SRCD, superPower->surf);
+
+	SAVE_INT(EXP_CRCD,playerState->exp);
+	saveDoneList();
 }
 
 void GlobalState::newr()
@@ -37,6 +43,9 @@ void GlobalState::newr()
 	SAVE_INT(FACEDIR_MRCD,FACEDIR_INI);
 	SAVE_INT(MAPNO_MRCD,MAPNO_INI);
 	SAVE_INT(STORYCNT_MRCD,STORYCNT_INI);
+	SAVE_BOOL(HAS_SHADOW_MRCD,HAS_SHADOW_INI);
+	SAVE_INT(SH_STAND_P_MRCD,SH_STAND_P_INI);
+	SAVE_INT(STORY_TIME_MRCD,STORY_TIME_INI);
 
 	SAVE_INT(SPEED_SRCD,SPEED_INI);
 	SAVE_BOOL(TELEPORT_SRCD,TELEPORT_INI);
@@ -60,6 +69,9 @@ void GlobalState::loadMapState()
     mapState->faceDir= LOAD_INT(FACEDIR_MRCD, FACEDIR_INI);
     mapState->mapNo = LOAD_INT(MAPNO_MRCD, MAPNO_INI);
     mapState->storyCnt = LOAD_INT(STORYCNT_MRCD, STORYCNT_INI);
+	mapState->hasSh = LOAD_BOOL(HAS_SHADOW_MRCD, HAS_SHADOW_INI);
+	mapState->standPos= LOAD_INT(SH_STAND_P_MRCD, SH_STAND_P_INI);
+	mapState->sTime= LOAD_INT(STORY_TIME_MRCD, STORY_TIME_INI);
 }
 
 void GlobalState::loadSuperPower()
@@ -85,10 +97,6 @@ void GlobalState::loadDoneList()
 	}
 }
 
-void GlobalState::loadPlayerState()
-{
-
-}
 
 void GlobalState::saveDoneList()
 {
@@ -103,3 +111,12 @@ void GlobalState::saveDoneList()
 		}
 	RcdUtil::saveList(list,DEFUALT_DELIM);
 }
+
+
+
+
+void GlobalState::loadPlayerState()
+{
+	playerState = new PlayerState;
+	playerState->exp = LOAD_INT(EXP_CRCD,EXP_INI);
+}
diff --git a/Classes/GlobalState.h b/Classes/GlobalState.h
index 1f82c2b..c83b313 100644
--- a/Classes/GlobalState.h
+++ b/Classes/GlobalState.h
@@ -5,8 +5,9 @@
 #include "Singleton.hpp"
 #include "MapState.h"
 #include "SuperPower.h"
-#include "CombatUnit.h"
+//#include "CombatUnit.h"
 #include "BagRecord.h"
+#include "PlayerState.h"
 using namespace cocos2d;
 
 //Record of the state of the game in the memory
@@ -17,8 +18,9 @@ class GlobalState: public Singleton<GlobalState>
 public:
     MapState* mapState;
     SuperPower* superPower;
-    CombatUnit* playerState;
+    //CombatUnit* playerState;
     BagRecord* bagRecord;
+	PlayerState* playerState;
     bool doneList[MAX_DONE_LIST];
 public:
     void load();
@@ -31,6 +33,7 @@ private:
     void loadDoneList();
     void loadPlayerState();
 	void saveDoneList();
+	//void savePlayerState();
 };
 #define sGlobal GlobalState::instance()
 #endif
diff --git a/Classes/HelloWorldScene.cpp b/Classes/HelloWorldScene.cpp
index d13db9f..043e98b 100644
--- a/Classes/HelloWorldScene.cpp
+++ b/Classes/HelloWorldScene.cpp
@@ -1,4 +1,5 @@
 #include "HelloWorldScene.h"
+#include "TimeUtil.h"
 USING_NS_CC;
 
 //last: 20140925.2257
@@ -38,14 +39,13 @@ Map* HelloWorld::initMap()
 	Map* map;
 	if(mapNo==MAP11)map=Map::create(MAP11_PATH);//∂¡»°µÿÕº∫≈map11
 	else map=Map::create(MAP12_PATH);//∂¡»°µÿÕº∫≈map12	
-	//@eManager
 	sGlobalRes::instance()->map=map;
-	eManager->load(0);//@rGlobal->mapState->sTime
+	
+	//@eManager
+	eManager->load(mapNo-MAP10, TimeUtil::getWeekDay());
 	map->initNPC();
 	map->setGameStartPos();
 
-	
-
 	CCLayer* mapLayer=CCLayer::create();
 	map->setTag(MAP);
 	mapLayer->addChild(map);
@@ -59,16 +59,21 @@ void HelloWorld::initControlPanel(Map* map)
 	ControlPanel* panel=ControlPanel::create(map);
 	//rGlobal->panel=panel;
 	panel->hero->setTag(HERO);
-	this->getChildByTag(MAPLAYER)->addChild(panel->hero,3);
+	this->addChild(panel,PANEL_ON_MAPLYR_ZOR);
+
+	if(HERO_COVER_MODE)
+		map->addChild(panel->hero,HERO_ON_MAP_ZOR);
+	else 
+		this->getChildByTag(MAPLAYER)->addChild(panel->hero,HERO_ON_PANEL_ZOR);
 
 	//shadow init
-	panel->hero->shadow = ShadowingMan::create();
-	CCPoint heroPos = panel->hero->getHeroTilePos() + ccp(0, 1);
+	Hero* hero = panel->hero;
+	rGlobal->shadow=NULL;
+	if(!sGlobal->mapState->hasSh) return;
+	rGlobal->shadow = ShadowingMan::create();
+	CCPoint heroPos = hero->getHeroTilePos() + ccp(1, 0);
 	CCPoint tPos = map->positionFromTileCoord(heroPos);
-	panel->hero->shadow->setPosition(tPos);
-	//this->getChildByTag(MAPLAYER)->addChild(panel->hero->shadow,5);
-	map->addChild(panel->hero->shadow,5);
-
-	this->addChild(panel,15);
+	rGlobal->shadow->setPosition(tPos);
+	map->addChild(rGlobal->shadow,HERO_ON_MAP_ZOR);
 }
 
diff --git a/Classes/Hero.cpp b/Classes/Hero.cpp
index 5e4016f..e827bec 100644
--- a/Classes/Hero.cpp
+++ b/Classes/Hero.cpp
@@ -2,7 +2,7 @@
 
 bool Hero::init() 
 {
-	setID(0); picNo=0; isWalking=false;  
+	setID(0); picNo=0; isWalking=false; 
 	map=(Map*)rGlobal->map;
 	dir=sGlobal->mapState->faceDir;
 
@@ -44,36 +44,22 @@ void Hero::doEvent(CCPoint heroTilePos)
 		{
 			case 0:case 1:case 2:case 3:case 4:
 			case 5:case 6:case 7:case 8:case 9:
+				if(id==sGlobal->mapState->storyCnt)
 				{
-					if(id==sGlobal->mapState->storyCnt)
-					{
-						touchEnded=dir;walkEnd();//endWalking
-						this->focus=false;
-						CCEGLView::sharedOpenGLView()->setDesignResolutionSize(JX_RESOLUWID, JX_RESOLUHEI, kResolutionExactFit);
-						CCScene* story=StoryWorld::scene();
-						CCDirector::sharedDirector()->pushScene(story);
-						this->gotFocusT();
-						sGlobal->mapState->storyCnt++;
-						sGlobal->save();
-					}
+					touchEnded=dir;walkEnd();//endWalking
+					this->focus=false;
+					CCEGLView::sharedOpenGLView()->setDesignResolutionSize(JX_RESOLUWID, JX_RESOLUHEI, kResolutionExactFit);
+					CCScene* story=StoryWorld::scene();
+					CCTransitionFade *scenetrans = CCTransitionFade::create(0.7, story);
+					CCDirector::sharedDirector()->pushScene(scenetrans);
+					this->gotFocusT();
+					sGlobal->mapState->storyCnt++;
+					sGlobal->save();
 				}
 				break;
 
-			case MAP11:
-				touchEnded=dir;walkEnd();
-				map->removeAllChildrenWithCleanup(true);
-				map=Map::create(MAP12_PATH);//@
-				map->crossMap(heroTilePos,MAP11);
-				this->getParent()->addChild(map);
-				break;
-
-			case MAP12:
-				touchEnded=dir;walkEnd();
-				map->removeAllChildrenWithCleanup(true);
-				map=Map::create(MAP11_PATH);//@
-				map->crossMap(heroTilePos,MAP12);
-				this->getParent()->addChild(map);
-				break;
+			case MAP11: crossToMap(MAP12); break;
+			case MAP12: crossToMap(MAP11); break;
 			default:break;
 		}
 	}
@@ -85,8 +71,9 @@ void Hero::doEvent(CCPoint heroTilePos)
 			touchEnded=dir;walkEnd();//endWalking
 			this->focus=false;
 			CCEGLView::sharedOpenGLView()->setDesignResolutionSize(JX_RESOLUWID, JX_RESOLUHEI, kResolutionExactFit);
-			CCScene* combat=Combat::scene();
-			CCDirector::sharedDirector()->pushScene(combat);//@
+//			CCScene* combat=Combat::scene();
+			//CCTransitionFade *scenetrans = CCTransitionFade::create(0.7, combat);
+//			CCDirector::sharedDirector()->pushScene(scenetrans);//@
 		}
 		this->focus=true;
 		;}
@@ -129,36 +116,6 @@ void Hero::endRespond()
 	touchEnded=dir;
 }
 
-void Hero::stepDown()
-{
-	if (checkEvent(getHeroTilePos())==kEvent)
-		doEvent(getHeroTilePos());
-	walkEnd();
-}
-
-void Hero::stepUp()
-{
-	CCPoint heroCoord=getHeroTilePos();
-	CCPoint moveCoord=move/map->getTileSize().height;
-	if(checkCollision(ccp(heroCoord.x+moveCoord.x,
-					heroCoord.y-moveCoord.y))==kWall)
-	{
-		touchEnded=dir; walkEnd();
-	}
-}
-
-void Hero::followMe()
-{
-	if(touchEnded<=-1)
-	{
-		CCArray* heroPos = CCArray::create();
-		CCPoint heroCoord=getHeroTilePos();
-		heroPos->addObject(CCInteger::create(heroCoord.x));
-		heroPos->addObject(CCInteger::create(heroCoord.y));
-		CCNotificationCenter::sharedNotificationCenter()->postNotification("shadow", (CCObject*)heroPos);
-	}
-}
-
 void Hero::walkEnd()
 {
 	if(touchEnded>-1)
@@ -207,6 +164,7 @@ void Hero::initAction(int dir)
 	CCCallFunc* stepD=CCCallFunc::create(this,callfunc_selector(Hero::stepDown));
 	//CCSpawn* animJ=CCSpawn::create(anim,jump,NULL);
 	CCSequence* revAct = CCSequence::create(stepU, delay, follM, revShift, stepD, NULL);
+
 	moveLegs=CCRepeatForever::create(anim);
 	moveMap=CCRepeatForever::create(revAct);
 }
@@ -215,6 +173,40 @@ void Hero::initAction(int dir)
 
 
 
+void Hero::stepUp()
+{
+	CCPoint heroCoord=getHeroTilePos();
+	CCPoint moveCoord=move/map->getTileSize().height;
+	if(checkCollision(ccp(heroCoord.x+moveCoord.x,
+					heroCoord.y-moveCoord.y))==kWall)
+	{
+		touchEnded=dir; walkEnd();
+	}
+}
+
+void Hero::followMe()
+{
+	if(touchEnded<=-1)
+	{
+		CCArray* heroPos = CCArray::create();
+		CCPoint heroCoord=getHeroTilePos();
+		heroPos->addObject(CCInteger::create(heroCoord.x));
+		heroPos->addObject(CCInteger::create(heroCoord.y));
+		CCNotificationCenter::sharedNotificationCenter()->postNotification(HERO_STEP_UP_MSG, (CCObject*)heroPos);
+	}
+}
+
+void Hero::stepDown()
+{
+	if (checkEvent(getHeroTilePos())==kEvent)
+		doEvent(getHeroTilePos());
+	walkEnd();
+}
+
+
+
+
+
 
 
 
@@ -255,3 +247,30 @@ void Hero::gotFocusT()
 {
 	focus=true;
 }
+
+void Hero::crossToMap(int mapNo)
+{
+	//choose map 
+	CCString* path; CCPoint heroTilePos=getHeroTilePos();
+	CCPoint delt=ccp(1,0);
+	if(mapNo==MAP11) //arrive at MAP11
+		path=CCString::create(MAP11_PATH), delt=ccp(1,0);
+	else 
+		path=CCString::create(MAP12_PATH), delt=ccp(-1,0);
+
+	//change map
+	touchEnded=dir;walkEnd();
+	map->removeAllChildrenWithCleanup(true);
+	map=Map::create(path->getCString());
+	rGlobal->map=map;
+	map->crossMap(heroTilePos,mapNo);
+	this->getParent()->addChild(map);
+
+	//re-create rGlobal->shadow
+	if(rGlobal->shadow==NULL) return;
+	rGlobal->shadow = ShadowingMan::create();
+	CCPoint heroPos = getHeroTilePos() + delt;
+	CCPoint tPos = map->positionFromTileCoord(heroPos);
+	rGlobal->shadow->setPosition(tPos);
+	map->addChild(rGlobal->shadow,5);
+}
diff --git a/Classes/Hero.h b/Classes/Hero.h
index 4c23566..6c7ee2f 100644
--- a/Classes/Hero.h
+++ b/Classes/Hero.h
@@ -25,7 +25,6 @@ public:
 public:
     Map* map;
     CCPoint move;
-	ShadowingMan* shadow;
 private:
     bool init();
     void initAction(int dir);
@@ -35,9 +34,13 @@ private:
     void walkEnd();
     CollisionType checkEvent(CCPoint tileCoord);
     void doEvent(CCPoint heroPosition);
+	void crossToMap(int mapNo); 
     cocos2d::CCAction* moveMap;
     cocos2d::CCAction* moveLegs;
     int touchEnded;
     bool focus;
+
+	CCAction* moveHero;
+	void stepForward();
 };
 #endif
diff --git a/Classes/Map.cpp b/Classes/Map.cpp
index 8dfdc47..1e2780a 100644
--- a/Classes/Map.cpp
+++ b/Classes/Map.cpp
@@ -39,20 +39,13 @@ void Map::initNPC()
 
 Map* Map::crossMap(CCPoint tileBirthPoint,int mapNo)
 {
-	if(mapNo==MAP11)
-	{
+	if(mapNo==MAP12) //Arriving to the right piece: MAP12
 		tileBirthPoint=ccp(2+3,tileBirthPoint.y);
-		sGlobal->mapState->mapNo=MAP12;
-		eManager->release();
-		eManager->load(EVENT_MAP11);
-	}
 	else
-	{
 		tileBirthPoint=ccp(this->getMapSize().width-3-3,tileBirthPoint.y);
-		sGlobal->mapState->mapNo=MAP11;
-		eManager->release();
-		eManager->load(EVENT_MAP12);
-	}
+	sGlobal->mapState->mapNo=mapNo;
+	eManager->release();
+	eManager->load(mapNo-MAP10,TimeUtil::getWeekDay());
 	this->setPosition(this->humanPosForTileMove(tileBirthPoint));
 	initNPC();
 	return this;
diff --git a/Classes/Map.h b/Classes/Map.h
index f9c47d4..dc9a8b0 100644
--- a/Classes/Map.h
+++ b/Classes/Map.h
@@ -7,6 +7,7 @@
 #include "WalkingMan.h"
 #include "NPCUtil.h"
 #include "Emap.h"
+#include "TimeUtil.h"
 using namespace cocos2d;
 //displays the game Map and NPCs
 //stores the NPCs to respond to Events
diff --git a/Classes/MapState.h b/Classes/MapState.h
index 5a0a8a0..d8e0f7e 100644
--- a/Classes/MapState.h
+++ b/Classes/MapState.h
@@ -10,5 +10,7 @@ public:
    int positionY;
    int faceDir;
    int sTime;
+   bool hasSh;
+   int standPos;
 };
 #endif
diff --git a/Classes/MenuLayer.cpp b/Classes/MenuLayer.cpp
index d500c1e..aac120b 100644
--- a/Classes/MenuLayer.cpp
+++ b/Classes/MenuLayer.cpp
@@ -27,7 +27,7 @@ bool MenuLayer::init()
 	diawindow->setControllerListener(hero);
 	addChild(diawindow,5);
 	sGlobalRes::instance()->diawindow=diawindow;//@
-	eManager->load(0);
+	//eManager->load(0);
 
 	map->initNPC();
 	map->setGameStartPos();
diff --git a/Classes/Monster.cpp b/Classes/Monster.cpp
new file mode 100644
index 0000000..12ff5d1
--- /dev/null
+++ b/Classes/Monster.cpp
@@ -0,0 +1,52 @@
+#include "Monster.h"
+
+bool Monster::init()
+{
+	cc_timeval psv;
+	CCTime::gettimeofdayCocos2d(&psv,NULL);
+	unsigned long int rand_seed = psv.tv_sec*1000+psv.tv_usec/1000;
+	srand(rand_seed);
+	
+	return true;
+}
+void Monster::setMonster(int monType)
+{
+	CCSize visibleSize = CCDirector::sharedDirector()->getVisibleSize();
+	char monPath[20];
+	if (monType==0)
+	{
+		monsterNo = (int)(CCRANDOM_0_1()*6);
+		sprintf(monPath,"monster%d.png",monsterNo);
+		monster = CCSprite::create(monPath);
+		level = (int)(CCRANDOM_0_1()*20);
+	}
+	else
+	{
+		sprintf(monPath,"monster%d.png",monType);
+		monster = CCSprite::create(monPath);
+		level = 30;
+	}
+
+	healthPoint=100+level*2;
+	currentHp=healthPoint;
+	
+	
+	monster->setPosition(ccp(visibleSize.width-100,visibleSize.height-200));
+	this->addChild(monster);
+}
+
+int Monster::chooseButton()
+{
+	//srand((unsigned)time(NULL));
+	//—°buttonÀ„∑®
+	int tag;
+	float rdm = CCRANDOM_0_1();
+	CCLOG("%f",rdm);
+	if (rdm<0.3)
+		tag=0;
+	else if (rdm>=0.3&&rdm<0.6)
+		tag=1;
+	else if (rdm>=0.6&&rdm<=1)
+		tag=2;
+	return tag;
+}
\ No newline at end of file
diff --git a/Classes/Monster.h b/Classes/Monster.h
new file mode 100644
index 0000000..aaa694e
--- /dev/null
+++ b/Classes/Monster.h
@@ -0,0 +1,23 @@
+#ifndef __MONSTER_H__
+#define __MONSTER_H__
+#include "Role.h"
+#include "cocos-ext.h"
+#include "time.h"
+using namespace cocos2d;
+USING_NS_CC_EXT; 
+
+#define MONSTER "monster.png"
+class Monster:public Role
+{
+public:
+	CREATE_FUNC(Monster);
+public:
+	int monsterNo;
+	virtual bool init();
+	void setMonster(int monType);
+	int chooseButton();
+	//void attack();
+private:
+	CCSprite* monster;
+};
+#endif 
\ No newline at end of file
diff --git a/Classes/NPCUtil.cpp b/Classes/NPCUtil.cpp
index 7caac06..34f02ed 100644
--- a/Classes/NPCUtil.cpp
+++ b/Classes/NPCUtil.cpp
@@ -15,7 +15,8 @@ CCArray* NPCUtil::initNPC()
 			int cat=event->category;
 			int arg0;
 			HumanEntity* man;
-			CCInteger* intg=(CCInteger*)args->objectAtIndex(INDEX_ZERO);
+			CCInteger* intg;
+			if(args->count()!=0) intg = (CCInteger*)args->objectAtIndex(INDEX_ZERO);
 			switch(cat)
 			{
 			case STANDING:
@@ -41,7 +42,7 @@ CCArray* NPCUtil::initNPC()
 			default:break;
 			}
 			man->setTag(MAN_START+event->id);
-			rGlobal->map->addChild(man,4);
+			rGlobal->map->addChild(man,NPC_ON_MAP_BACK_ZOR);
 			NPCs->addObject(man);
 		}
 	}
diff --git a/Classes/Particles.cpp b/Classes/Particles.cpp
new file mode 100644
index 0000000..07e8b25
--- /dev/null
+++ b/Classes/Particles.cpp
@@ -0,0 +1,57 @@
+#include "Particles.h"
+
+bool Particles::init()
+{
+	mSystem = new CCParticleSystemQuad();
+	
+	this->addChild(mSystem);
+	return true;
+}
+
+void Particles::setFireParticle()
+{
+	mSystem->initWithFile("FireParticle.plist");//plistŒƒº˛ø…“‘Õ®π˝¿˝◊”±‡º≠∆˜ªÒµ√
+	mSystem->setTextureWithRect(CCTextureCache::sharedTextureCache()->addImage("particleFire.png")
+		,CCRectMake(0,0,64,64));//º”‘ÿÕº∆¨£¨µ⁄“ª∏ˆ≤Œ ˝ «Œ∆¿Ì£¨µ⁄∂˛∏ˆ≤Œ ˝ «—°‘ÒÕº∆¨…œµƒŒª÷√
+	mSystem->setBlendAdditive(true);//’‚∏ˆµ˜”√±ÿ≤ªø……Ÿ
+	//mSystem->setPosition(ccp(200,200));//…Ë÷√Œª÷√	
+}
+
+void Particles::setWaterParticle()
+{
+	mSystem->initWithFile("WaterParticle.plist");//plistŒƒº˛ø…“‘Õ®π˝¿˝◊”±‡º≠∆˜ªÒµ√
+	mSystem->setTextureWithRect(CCTextureCache::sharedTextureCache()->addImage("particleNapalm.png")
+		,CCRectMake(0,0,64,64));//º”‘ÿÕº∆¨£¨µ⁄“ª∏ˆ≤Œ ˝ «Œ∆¿Ì£¨µ⁄∂˛∏ˆ≤Œ ˝ «—°‘ÒÕº∆¨…œµƒŒª÷√
+	mSystem->setBlendAdditive(true);//’‚∏ˆµ˜”√±ÿ≤ªø……Ÿ
+	//mSystem->setPosition(ccp(200,200));//…Ë÷√Œª÷√
+}
+
+void Particles::setWoodParticle()
+{
+	mSystem->initWithFile("WoodParticle.plist");//plistŒƒº˛ø…“‘Õ®π˝¿˝◊”±‡º≠∆˜ªÒµ√
+	mSystem->setTextureWithRect(CCTextureCache::sharedTextureCache()->addImage("leave.png")
+		,CCRectMake(0,0,64,64));//º”‘ÿÕº∆¨£¨µ⁄“ª∏ˆ≤Œ ˝ «Œ∆¿Ì£¨µ⁄∂˛∏ˆ≤Œ ˝ «—°‘ÒÕº∆¨…œµƒŒª÷√
+	mSystem->setBlendAdditive(true);//’‚∏ˆµ˜”√±ÿ≤ªø……Ÿ
+	//mSystem->setPosition(ccp(200,200));//…Ë÷√Œª÷√
+}
+
+void Particles::playerAttack()
+{
+	//mSystem->setAngle(180);
+	mSystem->setPosition(ccp(200,240));//…Ë÷√Œª÷√
+}
+
+void Particles::monsterAttack()
+{
+	mSystem->setAngle(180);
+	mSystem->setPosition(ccp(470,240));//…Ë÷√Œª÷√
+}
+
+void Particles::setParticleDuration(float dt)
+{
+	mSystem->setDuration(dt);
+}
+void Particles::setParticleLife(float dt)
+{
+	mSystem->setLife(dt);
+}
\ No newline at end of file
diff --git a/Classes/Particles.h b/Classes/Particles.h
new file mode 100644
index 0000000..8d77f6e
--- /dev/null
+++ b/Classes/Particles.h
@@ -0,0 +1,25 @@
+#ifndef __PARTICLES_H__
+#define __PARTICLES_H__
+#include "cocos2d.h"
+#include "cocos-ext.h"
+using namespace cocos2d;
+USING_NS_CC_EXT; 
+class Particles:public CCNode
+{
+public:
+	CREATE_FUNC(Particles);
+public:
+    virtual bool init();
+	void setFireParticle();
+	void setWaterParticle();
+	void setWoodParticle();
+	void playerAttack();
+	void monsterAttack();
+	//void setDuration();
+	void setParticleDuration(float dt);
+	void setParticleLife(float dt);
+private:
+	CCParticleSystemQuad *m_emitter;
+	CCParticleSystemQuad* mSystem;
+};
+#endif 
\ No newline at end of file
diff --git a/Classes/PlayReader.cpp b/Classes/PlayReader.cpp
index a980175..db967a2 100644
--- a/Classes/PlayReader.cpp
+++ b/Classes/PlayReader.cpp
@@ -10,122 +10,119 @@
 #include "strtok_r.c"
 
 PlayReader::PlayReader() {
-    lineNum=0;
-    curLine=0;
-	//saver = *cocos2d::CCUserDefault::sharedUserDefault();
+  lineNum=0;
+  curLine=0;
+  //saver = *cocos2d::CCUserDefault::sharedUserDefault();
 }
 
 PlayReader::PlayReader(string filePath) {
-    ReadFileWithFullPath(filePath);
+  ReadFileWithFullPath(filePath);
 }
 
 void PlayReader::ReadFileWithFullPath(cocos2d::CCString filePath) {
-    unsigned char *buffer;
-    unsigned long bufSize;
-    buffer = cocos2d::CCFileUtils::sharedFileUtils()->getFileData(filePath.getCString(), "r", &bufSize);
-    split((char *)buffer, "\n", &dialogs);
-    lineNum = dialogs.size();
-    curLine = 0;
+  unsigned char *buffer;
+  unsigned long bufSize;
+  buffer = cocos2d::CCFileUtils::sharedFileUtils()->getFileData(filePath.getCString(), "r", &bufSize);
+  split((char *)buffer, "\n", &dialogs);
+  lineNum = dialogs.size();
+  curLine = 0;
 }
 
 vector<string> PlayReader::PlayerNames() {
-	unsigned char *buffer;
-    unsigned long bufSize;
-	vector<string> names;
-	std::string fullPath = cocos2d::CCFileUtils::sharedFileUtils()->fullPathForFilename("names.txt");
-    buffer = cocos2d::CCFileUtils::sharedFileUtils()->getFileData(fullPath.c_str(), "r", &bufSize);
-    split((char *)buffer, "\n", &names);
-	return names;
+  unsigned char *buffer;
+  unsigned long bufSize;
+  vector<string> names;
+  std::string fullPath = cocos2d::CCFileUtils::sharedFileUtils()->fullPathForFilename("names.txt");
+  buffer = cocos2d::CCFileUtils::sharedFileUtils()->getFileData(fullPath.c_str(), "r", &bufSize);
+  split((char *)buffer, "\n", &names);
+  return names;
 }
 
 string PlayReader::GetNextDialog() {
-    assert(curLine<=lineNum);
-    return dialogs[curLine++];
+  assert(curLine<=lineNum);
+  return dialogs[curLine++];
 }
 
 void PlayReader::ChangeFile(cocos2d::CCString filePath) {
-    dialogs.clear();
-    ReadFileWithFullPath(filePath);
+  dialogs.clear();
+  ReadFileWithFullPath(filePath);
 }
 
 void PlayReader::split(const char * str,const char * deli, vector<string> *list) {
-    char buff[200000];
-    //_snprintf(buff,sizeof(buff), str, NULL);
-	//for(int i=0;i<200000;i++)
-		//buff[i]=str[i];
-	strcpy(buff,str);
-    char * gg;
-    char *p = strtok_r(buff, deli, &gg);
-    
-    list->clear();
-    while(p !=NULL && gg!=NULL)
-    {
-        list->push_back(p);
-        p = strtok_r(NULL, deli, &gg);
-    };
+  char buff[200000];
+  strcpy(buff,str);
+  char * gg;
+  char *p = strtok_r(buff, deli, &gg);
+  
+  list->clear();
+  while(p !=NULL && gg!=NULL)
+  {
+    list->push_back(p);
+    p = strtok_r(NULL, deli, &gg);
+  };
 }
 
 int PlayReader::getCurLine() {
-    return (int)curLine;
+  return (int)curLine;
 }
 
 
 ProcessSaver::ProcessSaver() {
-    // Read the save
-    if (cocos2d::CCUserDefault::sharedUserDefault()->getBoolForKey("FisrtSave", true)) {
-        cocos2d::CCUserDefault::sharedUserDefault()->setBoolForKey("FisrtSave", false);
-        cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("PositionX", 0);
-        cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("PositionY", 0);
-        cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("MapProcess", 0);
-        cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("Process", '0');
-        cocos2d::CCUserDefault::sharedUserDefault()->flush();
-    } else {
-        _x = cocos2d::CCUserDefault::sharedUserDefault()->getIntegerForKey("PositionX");
-        _y = cocos2d::CCUserDefault::sharedUserDefault()->getIntegerForKey("PositionY");
-        _mapProcess = cocos2d::CCUserDefault::sharedUserDefault()->getIntegerForKey("MapProcess");
-        _process = cocos2d::CCUserDefault::sharedUserDefault()->getIntegerForKey("Process");
-    }
+  // Read the save
+  if (cocos2d::CCUserDefault::sharedUserDefault()->getBoolForKey("FisrtSave", true)) {
+    cocos2d::CCUserDefault::sharedUserDefault()->setBoolForKey("FisrtSave", false);
+    cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("PositionX", 0);
+    cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("PositionY", 0);
+    cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("MapProcess", 0);
+    cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("Process", '0');
+    cocos2d::CCUserDefault::sharedUserDefault()->flush();
+  } else {
+    _x = cocos2d::CCUserDefault::sharedUserDefault()->getIntegerForKey("PositionX");
+    _y = cocos2d::CCUserDefault::sharedUserDefault()->getIntegerForKey("PositionY");
+    _mapProcess = cocos2d::CCUserDefault::sharedUserDefault()->getIntegerForKey("MapProcess");
+    _process = cocos2d::CCUserDefault::sharedUserDefault()->getIntegerForKey("Process");
+  }
 }
 
 void ProcessSaver::save(int x, int y, int mapProcess) {
-    _x = x; _y = y; _mapProcess = mapProcess;
-    cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("PositionX", _x);
-    cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("PositionY", _y);
-    cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("MapProcess", _mapProcess);
-    cocos2d::CCUserDefault::sharedUserDefault()->flush();
+  _x = x; _y = y; _mapProcess = mapProcess;
+  cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("PositionX", _x);
+  cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("PositionY", _y);
+  cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("MapProcess", _mapProcess);
+  cocos2d::CCUserDefault::sharedUserDefault()->flush();
 }
 
 void ProcessSaver::savePosition(int x, int y) {
-    _x = x; _y = y;
-    cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("PositionX", _x);
-    cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("PositionY", _y);
-    cocos2d::CCUserDefault::sharedUserDefault()->flush();
+  _x = x; _y = y;
+  cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("PositionX", _x);
+  cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("PositionY", _y);
+  cocos2d::CCUserDefault::sharedUserDefault()->flush();
 }
 
 void ProcessSaver::saveMapProcess(int mapProcess) {
-    _mapProcess = mapProcess;
-    cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("MapProcess", _mapProcess);
-    cocos2d::CCUserDefault::sharedUserDefault()->flush();
+  _mapProcess = mapProcess;
+  cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("MapProcess", _mapProcess);
+  cocos2d::CCUserDefault::sharedUserDefault()->flush();
 }
 
 void ProcessSaver::saveProcess(int process) {
-    _process = process;
-    cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("Process", process);
-    cocos2d::CCUserDefault::sharedUserDefault()->flush();
+  _process = process;
+  cocos2d::CCUserDefault::sharedUserDefault()->setIntegerForKey("Process", process);
+  cocos2d::CCUserDefault::sharedUserDefault()->flush();
 }
 
 int ProcessSaver::getPositionX() {
-    return _x;
+  return _x;
 }
 
 int ProcessSaver::getPositionY() {
-    return _y;
+  return _y;
 }
 
 int ProcessSaver::getMapProcess() {
-    return _mapProcess;
+  return _mapProcess;
 }
 
 int ProcessSaver::getProcess() {
-    return _process;
+  return _process;
 }
\ No newline at end of file
diff --git a/Classes/PlayReader.h b/Classes/PlayReader.h
index ce8649b..1f0f80c 100644
--- a/Classes/PlayReader.h
+++ b/Classes/PlayReader.h
@@ -17,38 +17,37 @@
 using namespace std;
 class PlayReader {
 public:
-    PlayReader();
-    PlayReader(string filePath);
-    void ReadFileWithFullPath(cocos2d::CCString filePath);
-    string GetNextDialog();
-    void ChangeFile(cocos2d::CCString filePath);
-    int getCurLine();
-	vector<string> PlayerNames();
-    
+  PlayReader();
+  PlayReader(string filePath);
+  void ReadFileWithFullPath(cocos2d::CCString filePath);
+  string GetNextDialog();
+  void ChangeFile(cocos2d::CCString filePath);
+  int getCurLine();
+  vector<string> PlayerNames();
+  
 protected:
-    void split(const char * str,const char * deli, vector<string> *list);
-    
-    unsigned long lineNum;
-    unsigned long curLine;
-    vector<string> dialogs;
-    
+  void split(const char * str,const char * deli, vector<string> *list);
+  
+  unsigned long lineNum;
+  unsigned long curLine;
+  vector<string> dialogs;
+  
 };
 #endif /* defined(_________PlayReader__) */
 
 
 class ProcessSaver {
-    int _x, _y, _mapProcess;
-    int _process;
-    //cocos2d::CCUserDefault saver;
-    
+  int _x, _y, _mapProcess;
+  int _process;
+  
 public:
-    ProcessSaver();
-    void save(int x, int y, int mapProcess);
-    void savePosition(int x, int y);
-    void saveMapProcess(int mapProcess);
-    void saveProcess(int process);
-    int getPositionX();
-    int getPositionY();
-    int getMapProcess();
-    int getProcess();
+  ProcessSaver();
+  void save(int x, int y, int mapProcess);
+  void savePosition(int x, int y);
+  void saveMapProcess(int mapProcess);
+  void saveProcess(int process);
+  int getPositionX();
+  int getPositionY();
+  int getMapProcess();
+  int getProcess();
 };
\ No newline at end of file
diff --git a/Classes/PlayerState.h b/Classes/PlayerState.h
new file mode 100644
index 0000000..ea041ee
--- /dev/null
+++ b/Classes/PlayerState.h
@@ -0,0 +1,16 @@
+#ifndef _PLAYER_STATE_H_
+#define _PLAYER_STATE_H_
+#include "cocos2d.h"
+#include "AppMacros.h"
+
+using namespace cocos2d;
+
+//Record of the state of the game in the memory
+//contains pointer to playerState of Player
+//and pointer to bagRecord of Backpack
+class PlayerState
+{
+public:
+	int exp;
+};
+#endif
diff --git a/Classes/ReloadEvent.cpp b/Classes/ReloadEvent.cpp
new file mode 100644
index 0000000..22bbb23
--- /dev/null
+++ b/Classes/ReloadEvent.cpp
@@ -0,0 +1,29 @@
+#include "ReloadEvent.h"
+#include "GlobalRes.h"
+#include "AnimLib.h"
+#include "EventManager.h"
+#include "TimeUtil.h"
+#include "Map.h"
+
+void ReloadEvent::happen()
+{
+	CCSequence* blinkOfNight=CCSequence::create(
+			AnimLib::getAction(FADEIN,CCSize()),
+			CCDelayTime::create(1.5f),
+			AnimLib::getAction(FADEOUT,CCSize()),
+			NULL);
+	rGlobal->nightBg->runAction(blinkOfNight);
+
+	Map* map=(Map*)rGlobal->map;
+	for (int i = 0; i < map->NPCs->count(); i++)
+	{
+		CCNode* npc=(CCNode*)map->NPCs->objectAtIndex(i);
+		npc->removeFromParent();
+	}
+	map->NPCs->release();
+	sGlobal->mapState->sTime++;
+	eManager->release();
+	int mapNo=sGlobal->mapState->mapNo;
+	eManager->load(mapNo-MAP10,TimeUtil::getWeekDay());
+	map->initNPC();
+}
diff --git a/Classes/ReloadEvent.h b/Classes/ReloadEvent.h
new file mode 100644
index 0000000..6f55dda
--- /dev/null
+++ b/Classes/ReloadEvent.h
@@ -0,0 +1,14 @@
+#ifndef _RELOAD_EVENT_H_
+#define _RELOAD_EVENT_H_
+#include "Event.h"
+
+//Reloads all event on the map after a blink of night
+class ReloadEvent: public Event
+{
+public:
+    CREATE_FUNC(ReloadEvent);
+public:
+    void happen();
+};
+#endif
+
diff --git a/Classes/RestorationEvent.cpp b/Classes/RestorationEvent.cpp
index 9697ed4..c358d60 100644
--- a/Classes/RestorationEvent.cpp
+++ b/Classes/RestorationEvent.cpp
@@ -3,7 +3,7 @@
 void RestorationEvent::happen()
 {
     CCInteger* intg=(CCInteger*)args->objectAtIndex(NUM_ATTALT_INDEX);
-    CombatUnit* player=sGlobal->playerState;
+    PlayerState* player=sGlobal->playerState;
     for(int i=0;i<intg->getValue();i++)
     {
 	int index=NUM_ATTALT_INDEX+2*i;
diff --git a/Classes/Role.cpp b/Classes/Role.cpp
new file mode 100644
index 0000000..df5848c
--- /dev/null
+++ b/Classes/Role.cpp
@@ -0,0 +1,6 @@
+#include "Role.h"
+
+bool Role::init()
+{
+	return true;
+}
\ No newline at end of file
diff --git a/Classes/Role.h b/Classes/Role.h
new file mode 100644
index 0000000..afe6240
--- /dev/null
+++ b/Classes/Role.h
@@ -0,0 +1,19 @@
+#ifndef __Role_H__
+#define __Role_H__
+#include "cocos2d.h"
+#include "cocos-ext.h"
+using namespace cocos2d;
+USING_NS_CC_EXT; 
+class Role:public CCNode
+{
+public:
+	CREATE_FUNC(Role);
+public:
+	virtual bool init();
+	//int getHp();
+	int exp;
+	int level;
+	int healthPoint;
+	int currentHp;
+};
+#endif 
\ No newline at end of file
diff --git a/Classes/ShadowingMan.cpp b/Classes/ShadowingMan.cpp
index 0e7c06c..1c0bfcd 100644
--- a/Classes/ShadowingMan.cpp
+++ b/Classes/ShadowingMan.cpp
@@ -4,7 +4,7 @@
 
 bool ShadowingMan::init()
 {
-	CCNotificationCenter::sharedNotificationCenter()->addObserver(this,callfuncO_selector(ShadowingMan::shadow),"shadow",NULL);
+	CCNotificationCenter::sharedNotificationCenter()->addObserver(this,callfuncO_selector(ShadowingMan::shadow),HERO_STEP_UP_MSG,NULL);
 	this->picNo=9;
 	//this->setID(SHADOWN_FLAG_ID);
 	this->initSprite();
@@ -41,7 +41,13 @@ void ShadowingMan::shadow(CCObject* heroPos)
 	else
 		CCLog("Strange vect: (%f,%f)", vect.x, vect.y);
 
-	CCMoveBy* move=CCMoveBy::create(STD_WALK_DURATION*0.45,vect);
+	const float duration=STD_WALK_DURATION/sGlobal->superPower->speed;
+	CCMoveBy* move=CCMoveBy::create(duration*0.9,vect);
 	CCAnimate* anim=CCAnimate::create(walkAnimations[dir]);//Ë°åËµ∞
 	sprite->runAction(anim); this->runAction(move);
 }
+
+ShadowingMan::~ShadowingMan()
+{
+	CCNotificationCenter::sharedNotificationCenter()->purgeNotificationCenter();
+}
diff --git a/Classes/ShadowingMan.h b/Classes/ShadowingMan.h
index 0f6afca..92668f7 100644
--- a/Classes/ShadowingMan.h
+++ b/Classes/ShadowingMan.h
@@ -11,6 +11,7 @@ public:
     CREATE_FUNC(ShadowingMan);
 	bool init();
 	void shadow(CCObject* direction);
+	~ShadowingMan();
 };
 #endif
 
diff --git a/Classes/Story.cpp b/Classes/Story.cpp
index d123494..480a61a 100644
--- a/Classes/Story.cpp
+++ b/Classes/Story.cpp
@@ -1,460 +1,512 @@
 #include "Story.h"
 
 USING_NS_CC;
-//update: 2014-9-30 13:29:52
+//update: 2015-7-26 13:44:52
 
 CCScene* StoryWorld::scene() {
-    CCScene *scene = CCScene::create();
-    StoryWorld *layer = StoryWorld::create();
-	layer->setTag(1);
-    scene->addChild(layer);
-    return scene;
+  CCScene *scene = CCScene::create();
+  StoryWorld *layer = StoryWorld::create();
+  layer->setTag(1);
+  scene->addChild(layer);
+  return scene;
 }
 
 bool StoryWorld::init() {
-    if ( !CCLayer::init() )
-    {
-        return false;
-    }
-
-    char theName[10][11]={"","Á©ÜÂ©ß:", "Â≠êËΩ©:", "Â∞ëÊù∞:", "Âª∫ÂõΩ", "Ë∑Ø‰∫∫A:", "Ë∑Ø‰∫∫B:", "Ë∑Ø‰∫∫C:", "ËÄÅÁà∑Áà∑:", "Ê±üÂßê:"};
-    char play[20] = SCRIPT_PATH;
-    int current=sGlobal->mapState->storyCnt+'0';//stay
-    play[SCRIPT_PATH_LEN] = current;
-    reader.ReadFileWithFullPath(CCFileUtils::sharedFileUtils()->fullPathForFilename(play));
-    setTouchEnabled(true);
-    CCSize visibleSize = CCDirector::sharedDirector()->getVisibleSize();
-    CCPoint origin = CCDirector::sharedDirector()->getVisibleOrigin();
-    CCMenuItemImage *pCloseItem = CCMenuItemImage::create(
-                                        CLOSEN_IMG_PATH, CLOSES_IMG_PATH, this, menu_selector(StoryWorld::menuCloseCallback)); 
-	pCloseItem->setPosition(ccp(origin.x + visibleSize.width - pCloseItem->getContentSize().width/2 ,
-                                origin.y + pCloseItem->getContentSize().height/2));
-    
-    CCMenu* pMenu = CCMenu::create(pCloseItem, NULL);
-    pMenu->setPosition(CCPointZero);
-    addChild(pMenu, 2);
-    
-    char bg_name[30] = BGNAME_IMG_PATH;
-    bg_name[BGNAME_PATH_LEN] = current;
-    CCSprite* pBackground = CCSprite::create(bg_name);
-    pBackground->setPosition(ccp(visibleSize.width/2 + origin.x, visibleSize.height/2 + origin.y));
-    pBackground->setScale(1);
-    pBackground->setTag(108);
-    addChild(pBackground, 0);
-    
-    CCSprite* dialogBox = CCSprite::create(DUIHUAKUANG_IMG_PATH);
-    dialogBox->setPosition(ccp(visibleSize.width/2, dialogBox->getContentSize().height/2));
-    dialogBox->setOpacity(220);
-    addChild(dialogBox,1);
-    
-    CCLabelTTF* pName = CCLabelTTF::create(theName[0], "Heiti SC", 40);
-    pName->setTag(101);
-    pName->setPosition(ccp(pName->getContentSize().width/2, dialogBox->getContentSize().height - 2 * pName->getContentSize().height));
-    pName->setAnchorPoint(CCPointZero);
-    addChild(pName, 1);
-    
-    CCLabelTTF* pLabel = CCLabelTTF::create("Click to Start", "Heiti SC", 40);
-    pLabel->setTag(100);
-    pLabel->setPosition(ccp(40, origin.y + dialogBox->getContentSize().height - 3.4 * pLabel->getContentSize().height));
-    pLabel->setAnchorPoint(CCPointZero);
-    pLabel->setDimensions(CCSizeMake(1100, 0));
-    pLabel->setHorizontalAlignment(kCCTextAlignmentLeft);
-    addChild(pLabel, 1);
-    
+  if ( !CCLayer::init() ) {
+    return false;
+  }
+  char theName[10][11]={"","Á©ÜÂ©ß:", "Â≠êËΩ©:", "Â∞ëÊù∞:", "Âª∫ÂõΩ", "Ë∑Ø‰∫∫A:", "Ë∑Ø‰∫∫B:", "Ë∑Ø‰∫∫C:", "ËÄÅÁà∑Áà∑:", "Ê±üÂßê:"};
+  char play[20] = SCRIPT_PATH;
+  int current=sGlobal->mapState->storyCnt+'0';//stay
+  play[SCRIPT_PATH_LEN] = current;
+  reader.ReadFileWithFullPath(CCFileUtils::sharedFileUtils()->fullPathForFilename(play));
+  setTouchEnabled(true);
+  CCSize visibleSize = CCDirector::sharedDirector()->getVisibleSize();
+  CCPoint origin = CCDirector::sharedDirector()->getVisibleOrigin();
+  CCMenuItemImage *pCloseItem = CCMenuItemImage::create(CLOSEN_IMG_PATH, CLOSES_IMG_PATH, this, menu_selector(StoryWorld::menuCloseCallback));
+  
+  pCloseItem->setPosition(ccp(origin.x + visibleSize.width - pCloseItem->getContentSize().width/2 , origin.y + pCloseItem->getContentSize().height/2));
+  
+  CCMenu* pMenu = CCMenu::create(pCloseItem, NULL);
+  pMenu->setPosition(CCPointZero);
+  addChild(pMenu, 2);
+  
+  char bg_name[30] = "" ;
+  char bg_num[4]="";
+  sprintf(bg_num, "%c00", current);
+  sprintf(bg_name, BGNAME_IMG_PATH, bg_num);
+  CCSprite* pBackground = CCSprite::create(bg_name);
+  pBackground->setPosition(ccp(visibleSize.width/2 + origin.x, visibleSize.height/2 + origin.y));
+  pBackground->setScale(1);
+  pBackground->setTag(108);
+  addChild(pBackground, 0);
+  
+  CCSprite* dialogBox = CCSprite::create(DUIHUAKUANG_IMG_PATH);
+  dialogBox->setPosition(ccp(visibleSize.width/2, dialogBox->getContentSize().height/2));
+  dialogBox->setOpacity(220);
+  addChild(dialogBox,1);
+  
+  CCLabelTTF* pName = CCLabelTTF::create(theName[0], "Heiti SC", 40);
+  pName->setTag(101);
+  pName->setPosition(ccp(pName->getContentSize().width/2, dialogBox->getContentSize().height - 2 * pName->getContentSize().height));
+  pName->setAnchorPoint(CCPointZero);
+  addChild(pName, 1);
+  
+  
+  CCLabelTTF* pLabel = CCLabelTTF::create("Click to Start", "Heiti SC", 40);
+  pLabel->setTag(100);
+  pLabel->setPosition(ccp(40, origin.y + dialogBox->getContentSize().height - 3.4 * pLabel->getContentSize().height));
+  pLabel->setAnchorPoint(CCPointZero);
+  pLabel->setDimensions(CCSizeMake(1100, 0));
+  pLabel->setHorizontalAlignment(kCCTextAlignmentLeft);
+  addChild(pLabel, 1);
+  
+  
     CCSpriteFrameCache::sharedSpriteFrameCache()->addSpriteFramesWithFile(PLIST_IMG_PATH);
     CCSpriteBatchNode *spriteBatch=CCSpriteBatchNode::create(VDRAWING_IMG_PATH);
-    spriteBatch->setTag(102);
-    addChild(spriteBatch, 0);
-    spriteBatch->setPosition(CCPointZero);
-
-    CCSprite *leftSprite=CCSprite::createWithSpriteFrameName("me_1.png");
-    leftSprite->setScale(0.8);
-    leftSprite->setPosition(ccp(leftSprite->getContentSize().width*0.8, leftSprite->getContentSize().height/2 *0.8));
-    leftSprite->setTag(1);
-    leftSprite->setOpacity(0);
-    spriteBatch->addChild(leftSprite, 0);
-    
-    CCSprite *rightSprite=CCSprite::createWithSpriteFrameName("blank.png");
-    rightSprite->setPosition(ccp(800, 130));
-    rightSprite->setTag(2);
-    rightSprite->setOpacity(0);
-    spriteBatch->addChild(rightSprite, 0);
-    
-    avgGame();
-    return true;
+  spriteBatch->setTag(102);
+  addChild(spriteBatch, 0);
+  spriteBatch->setPosition(CCPointZero);
+  
+  CCSprite *leftSprite=CCSprite::createWithSpriteFrameName("me_1.png");
+  leftSprite->setScale(0.8);
+  leftSprite->setPosition(ccp(leftSprite->getContentSize().width*0.8, leftSprite->getContentSize().height/2 *0.8));
+  leftSprite->setTag(1);
+  leftSprite->setOpacity(0);
+  spriteBatch->addChild(leftSprite, 0);
+  
+  CCSprite *rightSprite=CCSprite::createWithSpriteFrameName("blank.png");
+  //rightSprite->setScale(0.8);
+  rightSprite->setPosition(ccp(800, 130));
+  rightSprite->setTag(2);
+  rightSprite->setOpacity(0);
+  spriteBatch->addChild(rightSprite, 0);
+  
+  avgGame();
+  return true;
 }
 
 void StoryWorld::ccTouchesEnded(cocos2d::CCSet *pTouches, cocos2d::CCEvent *pEvent){
-    avgGame();
+  avgGame();
 }
 
 void StoryWorld::avgGame(void) {
-    CCLabelTTF* myDialog = (CCLabelTTF *)getChildByTag(100);
-    CCLabelTTF* myName = (CCLabelTTF *)getChildByTag(101);
-    CCSpriteBatchNode *spriteBatch = (CCSpriteBatchNode *)getChildByTag(102);
-    CCSprite *myLeftSprite = (CCSprite *)spriteBatch->getChildByTag(1);
-    CCSprite *myRightSprite = (CCSprite *)spriteBatch->getChildByTag(2);
-    
-    strcpy(dialog, reader.GetNextDialog().c_str());
-
-	char theName[10][11]={"","Á©ÜÂ©ß1:", "Â≠êËΩ©:", "Â∞ëÊù∞:", "Âª∫ÂõΩ", "Ë∑Ø‰∫∫A:", "Ë∑Ø‰∫∫B:", "Ë∑Ø‰∫∫C:", "ËÄÅÁà∑Áà∑:", "Ê±üÂßê:"};
-
-	myName->setString(theName[dialog[0]-48]);
-    //‰ªªÂä°Á´ãÁªòÂàáÊç¢
-    switch (dialog[0]) {
-        case '0': {   //Êó†‰∫∫
-            char b[10]="me_ .png";
-            b[3] = dialog[1]+1;
-            myLeftSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
-        }
-            break;
-        case '1': {   //ME
-            char b[10]="me_ .png";
-            b[3] = dialog[1]+1;
-            myLeftSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
-        }
-            break;
-        case '2': {   //Â≠êËΩ©
-            char b[10]="zx_ .png";
-            b[3] = dialog[1]+1;
-            myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
-        }
-            break;
-        case '3': {   //Â∞ëÊù∞
-            char b[10]="sj_ .png";
-            b[3] = dialog[1];
-            myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
-        }
-            break;
-        case '4': {   //Âª∫ÂõΩ
-            char b[10]="jg_ .png";
-            b[3] = dialog[1];
-            myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
-        }
-            break;
-        case '5': {  
-            char b[10]="la_ .png";
-            b[3] = dialog[1];
-            myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
-        }
-            break;
-        case '6': { 
-            char b[10]="lb_ .png";
-            b[3] = dialog[1];
-            myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
-        }
-            break;
-        case '7': {
-            char b[10]="lc_ .png";
-            b[3] = dialog[1];
-            myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
-        }
-            break;
-        case '8': { 
-            char b[10]="yy_ .png";
-            b[3] = dialog[1];
-            myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
+  CCLabelTTF* myDialog = (CCLabelTTF *)getChildByTag(100);
+  CCLabelTTF* myName = (CCLabelTTF *)getChildByTag(101);
+  CCSpriteBatchNode *spriteBatch = (CCSpriteBatchNode *)getChildByTag(102);
+  CCSprite *myLeftSprite = (CCSprite *)spriteBatch->getChildByTag(1);
+  CCSprite *myRightSprite = (CCSprite *)spriteBatch->getChildByTag(2);
+  
+  strcpy(dialog, reader.GetNextDialog().c_str());
+  
+  char theName[10][11]={"","Á©ÜÂ©ß:", "Â≠êËΩ©:", "Â∞ëÊù∞:", "Âª∫ÂõΩ", "Ë∑Ø‰∫∫A:", "Ë∑Ø‰∫∫B:", "Ë∑Ø‰∫∫C:", "ËÄÅÁà∑Áà∑:", "Ê±üÂßê:"};
+  
+  myName->setString(theName[dialog[0]-48]);
+  // ‰∫∫Áâ©Á´ãÁªòÂàáÊç¢
+  characterPasterSwitchCase(dialog[0]);
+  
+  switch (dialog[2]) {
+      // ÈÄâÊã©Ëµ∞Âêë
+    case '1': {
+      //ÂºÄÂßãÈÄâÊã©Ëµ∞Âêë
+      //ÂÅúÊ≠¢Ëß¶Êë∏
+      setTouchEnabled(false);
+      CCSprite *back = CCSprite::create(LANDSCAPE_IMG_PATH);
+      back->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/2));
+      back->setOpacity(150);
+      back->setTag(3);
+      addChild(back, 3);
+      switch (current) {
+        case '3': {
+          CCLabelTTF *Label1 = CCLabelTTF::create("Yes", "Heiti SC", 40);
+          CCLabelTTF *Label2 = CCLabelTTF::create("No", "Heiti SC", 40);
+          CCMenuItemLabel *firstChoice = CCMenuItemLabel::create(Label1, this, menu_selector(StoryWorld::leafletChoiceHandler));
+          CCMenuItemLabel *secondChoice = CCMenuItemLabel::create(Label2, this, menu_selector(StoryWorld::leafletChoiceHandler));
+          firstChoice->setTag(fChoice);
+          secondChoice->setTag(sChoice);
+          firstChoice->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/5 * 4.1));
+          secondChoice->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/5 * 2.9));
+          CCMenu *menu = CCMenu::create(firstChoice, secondChoice, NULL);
+          menu->setPosition(CCPointZero);
+          menu->setTag(2);
+          addChild(menu, 3);
+          return;
         }
-            break;
-        case '9': { 
-            char b[10]="jj_ .png";
-            b[3] = dialog[1];
-            myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
+          break;
+        case '9': {
+          //ÂàõÂª∫CCMenu
+          CCLabelTTF *Label1 = CCLabelTTF::create("Â≠êËΩ©", "Heiti SC", 40);
+          CCLabelTTF *Label2 = CCLabelTTF::create("Â∞ëÊù∞", "Heiti SC", 40);
+          CCLabelTTF *Label3 = CCLabelTTF::create("Âª∫ÂõΩ", "Heiti SC", 40);
+          CCMenuItemLabel *firstChoice = CCMenuItemLabel::create(Label1, this, menu_selector(StoryWorld::theFinalChoiceHandler));
+          CCMenuItemLabel *secondChoice = CCMenuItemLabel::create(Label2, this, menu_selector(StoryWorld::theFinalChoiceHandler));
+          CCMenuItemLabel *thirdChoice = CCMenuItemLabel::create(Label3, this, menu_selector(StoryWorld::theFinalChoiceHandler));
+          
+          firstChoice->setTag(fChoice);
+          secondChoice->setTag(sChoice);
+          thirdChoice->setTag(tChoice);
+          
+          firstChoice->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/5 * 4.1));
+          secondChoice->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/5 * 2.9));
+          thirdChoice->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/5 * 1.8));
+          
+          CCMenu *menu = CCMenu::create(firstChoice, secondChoice, thirdChoice, NULL);
+          menu->setPosition(CCPointZero);
+          menu->setTag(2);
+          addChild(menu, 3);
+          return;
         }
-            break;
+          break;
+          
         default:
-            break;
+          break;
+      }
+    }
+      break;
+    case '2': {
+      // ‰ª•ÂâçÁöÑÊàòÊñóSceneÂÖ•Âè£
+    }
+      break;
+    case '3': {
+      if (myLeftSprite->getOpacity() == 0)
+        myLeftSprite->setOpacity(255);
+      else
+        myLeftSprite->runAction(CCFadeOut::create(1));
     }
+      break;
+    case '4': {
+      if (myRightSprite->getOpacity() == 0)
+        myRightSprite->setOpacity(255);
+      else
+        myRightSprite->runAction(CCFadeOut::create(1));
+    }
+      break;
+    case '5': {
+      if (myRightSprite->getOpacity()==0 && myLeftSprite->getOpacity()==0) {
+        myLeftSprite->setOpacity(255);
+        myRightSprite->setOpacity(255);
+      } else if (myRightSprite->getOpacity()!=0 && myLeftSprite->getOpacity()!=0) {
+        myLeftSprite->runAction(CCFadeOut::create(1));
+        myRightSprite->runAction(CCFadeOut::create(1));
+      }
+    }
+      break;
+    default:
+      break;
+  }
+  
+  // ÂâßÊú¨ÂàáÊç¢ÂèäÂÆåÁªìÂèäÁâπÊïà
+  specialPartSwitchCase(dialog[3]);
+  
+  //Èü≥Êïà
+  audioSwitchCase(dialog[4]);
 
-    switch (dialog[2]) {
-            // ÈÄâÊã©Ëµ∞Âêë
-        case '1': {
-            //ÂºÄÂßãÈÄâÊã©Ëµ∞Âêë
-            //ÂÅúÊ≠¢Ëß¶Êë∏
-            setTouchEnabled(false);
-            CCSprite *back = CCSprite::create(LANDSCAPE_IMG_PATH);
-            back->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/2));
-            back->setOpacity(150);
-            back->setTag(3);
-            addChild(back, 3);
-            switch (current) {
-                case '3': {
-                    CCLabelTTF *Label1 = CCLabelTTF::create("Yes", "Heiti SC", 40);
-                    CCLabelTTF *Label2 = CCLabelTTF::create("No", "Heiti SC", 40);
-                    CCMenuItemLabel *firstChoice = CCMenuItemLabel::create(Label1, this, menu_selector(StoryWorld::makeAChoice));
-                    CCMenuItemLabel *secondChoice = CCMenuItemLabel::create(Label2, this, menu_selector(StoryWorld::makeAChoice));
-                    firstChoice->setTag(fChoice);
-                    secondChoice->setTag(sChoice);
-                    firstChoice->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/5 * 4.1));
-                    secondChoice->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/5 * 2.9));
-                    CCMenu *menu = CCMenu::create(firstChoice, secondChoice, NULL);
-                    menu->setPosition(CCPointZero);
-                    menu->setTag(2);
-                    addChild(menu, 3);
-                    return;
-                }
-                    break;
-                case '9': {
-                    //ÂàõÂª∫CCMenu
-                    CCLabelTTF *Label1 = CCLabelTTF::create("Â≠êËΩ©", "Heiti SC", 40);
-                    CCLabelTTF *Label2 = CCLabelTTF::create("Â∞ëÊù∞", "Heiti SC", 40);
-                    CCLabelTTF *Label3 = CCLabelTTF::create("Âª∫ÂõΩ", "Heiti SC", 40);
-                    CCMenuItemLabel *firstChoice = CCMenuItemLabel::create(Label1, this, menu_selector(StoryWorld::makeAChoice));
-                    CCMenuItemLabel *secondChoice = CCMenuItemLabel::create(Label2, this, menu_selector(StoryWorld::makeAChoice));
-                    CCMenuItemLabel *thirdChoice = CCMenuItemLabel::create(Label3, this, menu_selector(StoryWorld::makeAChoice));
-                    
-                    firstChoice->setTag(fChoice);
-                    secondChoice->setTag(sChoice);
-                    thirdChoice->setTag(tChoice);
-                    
-                    firstChoice->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/5 * 4.1));
-                    secondChoice->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/5 * 2.9));
-                    thirdChoice->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/5 * 1.8));
-                    
-                    CCMenu *menu = CCMenu::create(firstChoice, secondChoice, thirdChoice, NULL);
-                    menu->setPosition(CCPointZero);
-                    menu->setTag(2);
-                    addChild(menu, 3);
-                    return;
-                }
-                    break;
-                default:
-                    break;
-            }
-        }
-            break;
-        case '2': {
-            CCScene *combatScene = Combat::scene();
-            CCDirector::sharedDirector()->pushScene(combatScene);
-        }
-            break;
-        case '3': {
-            if (myLeftSprite->getOpacity() == 0)
-                myLeftSprite->setOpacity(255);
-            else
-                myLeftSprite->runAction(CCFadeOut::create(1));
-        }
-            break;
-        case '4': {
-            if (myRightSprite->getOpacity() == 0)
-                myRightSprite->setOpacity(255);
-            else
-                myRightSprite->runAction(CCFadeOut::create(1));
-        }
-            break;
-        case '5': {
-            if (myRightSprite->getOpacity()==0 && myLeftSprite->getOpacity()==0) {
-                myLeftSprite->setOpacity(255);
-                myRightSprite->setOpacity(255);
-            } else if (myRightSprite->getOpacity()!=0 && myLeftSprite->getOpacity()!=0) {
-                myLeftSprite->runAction(CCFadeOut::create(1));
-                myRightSprite->runAction(CCFadeOut::create(1));
-            }
-        }
-            break;
-        default:
-            break;
+  
+  // ËÉåÊôØ
+  char all_bg[8][4] = {"010", "030", "204", "701", "717", "725", "732"};
+  char bg_num[4]="000";
+  int curLine = reader.getCurLine();
+  sprintf(bg_num, "%c%02d", current, curLine);
+  if (curLine == 0) {
+    CCSprite *Background = (CCSprite *)getChildByTag(108);
+    char bg_name[30]=BGNAME_IMG_PATH;
+    bg_name[BGNAME_PATH_LEN] = current;
+    Background->setTexture(CCTextureCache::sharedTextureCache()->addImage(bg_name));
+  } else {
+    for (int i =0; i<8; i++) {
+      if (strcmp(all_bg[i], bg_num)==0) {
+        CCSprite *Background = (CCSprite *)getChildByTag(108);
+        char bg_name[30]="";
+        sprintf(bg_name, BGNAME_IMG_PATH, bg_num);
+        Background->setTexture(CCTextureCache::sharedTextureCache()->addImage(bg_name));
+      }
     }
-    
-    // ÂâßÊú¨ÂàáÊç¢ÂèäÂÆåÁªìÂèäÁâπÊïà
-    switch (dialog[3]) {
-        case '1':{    // ‰øùÂ≠òËøõÂ∫¶
-            current+=1;
-			CCEGLView::sharedOpenGLView()->setDesignResolutionSize(672, 448, kResolutionExactFit);
-            CCDirector::sharedDirector()->popScene();
-            // TODO: POP OUT
-        }
-            break;
-        case '2':{    // wanjie
-			CCSprite* staff_bg = CCSprite::create(STAFFBG_IMG_PATH);
-			staff_bg->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2 + CCDirector::sharedDirector()->getVisibleOrigin().x, CCDirector::sharedDirector()->getVisibleSize().height/2 + CCDirector::sharedDirector()->getVisibleOrigin().y));
-			addChild(staff_bg, 4);
+  }
+  
+  myDialog->setString(dialog+5);
+}
+// AVG: ‰∫∫Áâ©Á´ãÁªòÈÉ®ÂàÜ
+void StoryWorld::characterPasterSwitchCase(int code) {
+  CCSpriteBatchNode *spriteBatch = (CCSpriteBatchNode *)getChildByTag(102);
+  CCSprite *myLeftSprite = (CCSprite *)spriteBatch->getChildByTag(1);
+  CCSprite *myRightSprite = (CCSprite *)spriteBatch->getChildByTag(2);
+  
+  switch (dialog[0]) {
+    case '0': {   //Êó†‰∫∫
+      char b[10]="me_ .png";
+      b[3] = dialog[1]+1;
+      myLeftSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
+    }
+      break;
+      
+    case '1': {   //ME
+      char b[10]="me_ .png";
+      b[3] = dialog[1]+1;
+      myLeftSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
+    }
+      break;
+    case '2': {   //Â≠êËΩ©
+      char b[10]="zx_ .png";
+      b[3] = dialog[1]+1;
+      myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
+    }
+      break;
+    case '3': {   //Â∞ëÊù∞
+      char b[10]="sj_ .png";
+      b[3] = dialog[1];
+      myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
+    }
+      break;
+    case '4': {   //Âª∫ÂõΩ
+      char b[10]="jg_ .png";
+      b[3] = dialog[1];
+      myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
+    }
+      break;
+    case '5': {
+      char b[10]="la_ .png";
+      b[3] = dialog[1];
+      myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
+    }
+      break;
+    case '6': {
+      char b[10]="lb_ .png";
+      b[3] = dialog[1];
+      myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
+    }
+      break;
+    case '7': {
+      char b[10]="lc_ .png";
+      b[3] = dialog[1];
+      myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
+    }
+      break;
+    case '8': {
+      char b[10]="yy_ .png";
+      b[3] = dialog[1];
+      myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
+    }
+      break;
+    case '9': {
+      char b[10]="jj_ .png";
+      b[3] = dialog[1];
+      myRightSprite->setDisplayFrame(CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(b));
+    }
+      break;
+      
+    default:
+      break;
+  }
+}
 
-			CCSprite* staff = CCSprite::create(STAFF_IMG_PATH );
-			staff->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, -CCDirector::sharedDirector()->getVisibleSize().height/2));
-			addChild(staff, 5);
 
-			CCActionInterval * moveTo = CCMoveTo::create(20,ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height*3/2));
-			CCFiniteTimeAction*  sequneceAction = CCSequence::create(
-				moveTo,
-				CCCallFunc::create(this, callfunc_selector(StoryWorld::over)),
-				NULL);
+// AVG: ÁâπÊÆäÈÉ®ÂàÜÂ§ÑÁêÜÔºåÂê´ÂâßÊú¨ÂàáÊç¢Ôºå‰øùÂ≠òÁ≠â
+void StoryWorld::specialPartSwitchCase(int code) {
+  switch (code) {
+    case '1':{    // ÂâßÊú¨ÁªìÊùüÔºåÁ°ÆËÆ§‰∏ã‰∏Ä‰∏™Âú∞ÁÇπ
+      setTouchEnabled(false);
+      CCSprite *back = CCSprite::create(CONFIRM_BACKGROUND_IMG_PATH);
+      back->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/2));
+      back->setTag(3);
+      addChild(back, 3);
+      
+      // Workspace
+      CCLabelTTF *nextPlaceName = CCLabelTTF::create("", "Heiti SC", 48);
+      nextPlaceName->setString(dialog+5);
+      nextPlaceName->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/5 * 3.1));
+      back->addChild(nextPlaceName);
+      
+      CCMenuItemImage *confirmBtn = CCMenuItemImage::create(CONFIRM_BUTTOM_IMG_PATH, CONFIRM_BUTTOM_IMG_PATH, this, menu_selector(StoryWorld::confirmButtonHandler));
+      confirmBtn->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/5 * 1.2));
+      CCMenu *menu = CCMenu::create(confirmBtn, NULL);
+      menu->setPosition(CCPointZero);
+      menu->setTag(2);
+      addChild(menu, 3);
+    }
+      break;
+    case '2':{    
+      CCSprite* staff_bg = CCSprite::create(STAFFBG_IMG_PATH);
+      staff_bg->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2 + CCDirector::sharedDirector()->getVisibleOrigin().x, CCDirector::sharedDirector()->getVisibleSize().height/2 + CCDirector::sharedDirector()->getVisibleOrigin().y));
+      addChild(staff_bg, 4);
+      
+      CCSprite* staff = CCSprite::create(STAFF_IMG_PATH);
+      staff->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, -CCDirector::sharedDirector()->getVisibleSize().height/2));
+      addChild(staff, 5);
+      
+      CCActionInterval * moveTo = CCMoveTo::create(20,ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height*3/2));
+      CCFiniteTimeAction*  sequneceAction = CCSequence::create(moveTo, CCCallFunc::create(this, callfunc_selector(StoryWorld::gameOverAndBackToWelcome)), NULL);
+      
+      staff->runAction(sequneceAction);
+    }
+      break;
+    case '3':{
+      CCSprite *black = CCSprite::create(BLACK_IMG_PATH);
+      black->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/2));
+      black->setOpacity(0);
+      addChild(black, 4);
+      black->runAction(CCSequence::create(CCFadeIn::create(0.5), CCFadeOut::create(0.5), NULL));
+    }
+      break;
+    default:
+      break;
+  }
+}
 
-			staff->runAction(sequneceAction);
-        }
-            break;
-        case '3':{
-            CCSprite *black = CCSprite::create(BLACK_IMG_PATH);
-            black->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/2));
-            black->setOpacity(0);
-            addChild(black, 4);
-            black->runAction(CCSequence::create(CCFadeIn::create(0.5), CCFadeOut::create(0.5), NULL));
-        }
-            break;
-        default:
-            break;
+// AVG: Èü≥ÊïàÂ§ÑÁêÜÈÉ®ÂàÜ
+void StoryWorld::audioSwitchCase(int code) {
+  switch (code) {
+    case '1':
+    case '2':
+    case '3':
+    case '4':
+    case '5':
+    case '6':{
+      char musicName[7] = " .mp3";
+      musicName[0] = dialog[4];
+      if (CocosDenshion::SimpleAudioEngine::sharedEngine()->isBackgroundMusicPlaying()) {
+        CocosDenshion::SimpleAudioEngine::sharedEngine()->stopBackgroundMusic(true);
+      }
+      CocosDenshion::SimpleAudioEngine::sharedEngine()->preloadBackgroundMusic(CCFileUtils::sharedFileUtils()->fullPathForFilename(musicName).c_str());
+      CocosDenshion::SimpleAudioEngine::sharedEngine()->playBackgroundMusic(CCFileUtils::sharedFileUtils()->fullPathForFilename(musicName).c_str(), true);
     }
-    
-    //Èü≥Êïà
-    switch (dialog[4]) {
-        case '1': case '2': case '3': case '4': case '5':
-        case '6':{
-            char musicName[7] = " .mp3";
-            musicName[0] = dialog[4];
-            if (CocosDenshion::SimpleAudioEngine::sharedEngine()->isBackgroundMusicPlaying()) {
-                CocosDenshion::SimpleAudioEngine::sharedEngine()->stopBackgroundMusic(true);
-            }
-            CocosDenshion::SimpleAudioEngine::sharedEngine()->preloadBackgroundMusic(CCFileUtils::sharedFileUtils()->fullPathForFilename(musicName).c_str());
-            CocosDenshion::SimpleAudioEngine::sharedEngine()->playBackgroundMusic(CCFileUtils::sharedFileUtils()->fullPathForFilename(musicName).c_str(), true);
-        }
-            break;
-        case '7': {
-            CocosDenshion::SimpleAudioEngine::sharedEngine()->stopBackgroundMusic(true);
-        }
-            break;
-        case '8': case '9': case 'A': case 'B': case 'C': case 'D':
-        case 'G':{
-            char effectName[7] = " .wav";
-            effectName[0] = dialog[4];
-            
-            CocosDenshion::SimpleAudioEngine::sharedEngine()->preloadEffect(CCFileUtils::sharedFileUtils()->fullPathForFilename(effectName).c_str());
-            CocosDenshion::SimpleAudioEngine::sharedEngine()->playEffect(CCFileUtils::sharedFileUtils()->fullPathForFilename(effectName).c_str());
-        }
-            break;
-        case 'E': case 'F': 
-        case 'H':{
-            char effectName[7] = " .mp3";
-            effectName[0] = dialog[4];
-            
-            CocosDenshion::SimpleAudioEngine::sharedEngine()->preloadEffect(CCFileUtils::sharedFileUtils()->fullPathForFilename(effectName).c_str());
-            CocosDenshion::SimpleAudioEngine::sharedEngine()->playEffect(CCFileUtils::sharedFileUtils()->fullPathForFilename(effectName).c_str());
-        }
-            break;
-        default:
-            break;
+      break;
+    case '7': {
+      CocosDenshion::SimpleAudioEngine::sharedEngine()->stopBackgroundMusic(true);
     }
-    
-    // ËÉåÊôØ
-    char all_bg[8][4] = {"010", "030", "204", "701", "717", "725", "732"};
-    char bg_num[4]="000";
-    int curLine = reader.getCurLine();
-    sprintf(bg_num, "%c%02d", current, curLine);
-    if (curLine == 0) {
-        CCSprite *Background = (CCSprite *)getChildByTag(108);
-        char bg_name[30]=BGNAME_IMG_PATH;
-        bg_name[BGNAME_PATH_LEN] = current;
-        Background->setTexture(CCTextureCache::sharedTextureCache()->addImage(bg_name));
-    } else {
-        for (int i =0; i<8; i++) {
-            if (strcmp(all_bg[i], bg_num)==0) {
-                CCSprite *Background = (CCSprite *)getChildByTag(108);
-                char bg_name[30]="img/story/bg_000.jpg";
-                sprintf(bg_name, "img/story/bg_%s.jpg", bg_num);
-                Background->setTexture(CCTextureCache::sharedTextureCache()->addImage(bg_name));
-            }
-        }
+      break;
+    case '8':
+    case '9':
+    case 'A':
+    case 'B':
+    case 'C':
+    case 'D':
+    case 'G':{
+      char effectName[7] = " .wav";
+      effectName[0] = dialog[4];
+      
+      CocosDenshion::SimpleAudioEngine::sharedEngine()->preloadEffect(CCFileUtils::sharedFileUtils()->fullPathForFilename(effectName).c_str());
+      CocosDenshion::SimpleAudioEngine::sharedEngine()->playEffect(CCFileUtils::sharedFileUtils()->fullPathForFilename(effectName).c_str());
+    }
+      break;
+    case 'E':
+    case 'F':
+    case 'H':{
+      char effectName[7] = " .mp3";
+      effectName[0] = dialog[4];
+      
+      CocosDenshion::SimpleAudioEngine::sharedEngine()->preloadEffect(CCFileUtils::sharedFileUtils()->fullPathForFilename(effectName).c_str());
+      CocosDenshion::SimpleAudioEngine::sharedEngine()->playEffect(CCFileUtils::sharedFileUtils()->fullPathForFilename(effectName).c_str());
     }
-    myDialog->setString(dialog+5);
+      break;
+      
+    default:
+      break;
+  }
 }
 
-void StoryWorld::makeAChoice(CCObject *sender) {
-    int choice = ((CCNode *)sender)->getTag();
-    if (current == '3') {
-        switch (choice) {
-            case fChoice: {
-                // ÊòæÁ§∫ÂÆ£‰º†Âçï‰∏Ä
-                cout << "xuanchuan " << endl;
-                removeChildByTag(2);
-                removeChildByTag(3);
-                CCSprite *blackBG = CCSprite::create(BLACK_IMG_PATH);
-                blackBG->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/2));
-                blackBG->setScale(1);
-                blackBG->setTag(21);
-                addChild(blackBG, 2);
-                // TODO
-                CCLabelTTF *xuanchuan = CCLabelTTF::create();
-                xuanchuan->setPosition(ccp(0, 40));
-                xuanchuan->setHorizontalAlignment(kCCTextAlignmentLeft);
-                xuanchuan->setAnchorPoint(CCPointZero);
-                xuanchuan->setDimensions(CCSizeMake(1100, 0));
-                xuanchuan->setTag(22);
-                addChild(xuanchuan, 3);
-                
-                // ÂÖ≥Èó≠ÊåâÈíÆ
-                CCMenuItemImage *start = CCMenuItemImage::create(LEAFLET_IMG_PATH,
-                                                                 LEAFLET_IMG_PATH,
-                                                                 this,
-                                                                 menu_selector(StoryWorld::menuLeafletsCloseCallback));
-                
-                start->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width-40, CCDirector::sharedDirector()->getVisibleSize().height-40));
-                
-                //ËèúÂçï
-                CCMenu* pMenu = CCMenu::create(start, NULL);
-                pMenu->setPosition(CCPointZero);
-                pMenu->setTag(23);
-                addChild(pMenu, 4);
-                
-                
-            }
-                return;
-            case sChoice:
-			default:{
-				current+=1;
-				CCEGLView::sharedOpenGLView()->setDesignResolutionSize(480, 320, kResolutionExactFit);
-				CCDirector::sharedDirector()->popScene();
-            }
-                return;
-        }
+//
+void StoryWorld::theFinalChoiceHandler(CCObject *sender) {
+  int choice = ((CCNode *)sender)->getTag();
+  char fileName[FINAL_SCRIPT_PATH_LEN*2] = FINAL_SCRIPT_PATH;
+  switch (choice) {
+    case fChoice:
+      fileName[FINAL_SCRIPT_PATH_LEN]='1';
+      break;
+    case sChoice:
+      fileName[FINAL_SCRIPT_PATH_LEN]='2';
+      break;
+    case tChoice:
+      fileName[FINAL_SCRIPT_PATH_LEN]='3';
+      break;
+      
+    default:
+      break;
+  }
+  reader.ChangeFile(cocos2d::CCFileUtils::sharedFileUtils()->fullPathForFilename(fileName));
+  
+  removeChildByTag(2);
+  removeChildByTag(3);
+  setTouchEnabled(true);
+  
+  avgGame();
+}
+
+// ÂÆ£‰º†ÂçïÈÄâÊã©Â§ÑÁêÜ
+void StoryWorld::leafletChoiceHandler(CCObject *sender) {
+  int choice = ((CCNode *)sender)->getTag();
+  switch (choice) {
+    case fChoice: {
+      // ÊòæÁ§∫ÂÆ£‰º†Âçï‰∏Ä
+      removeChildByTag(2);
+      removeChildByTag(3);
+      
+      CCSprite *blackBG = CCSprite::create(LEAFLET_IMG_PATH);
+      blackBG->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width/2, CCDirector::sharedDirector()->getVisibleSize().height/2));
+      blackBG->setScale(1);
+      blackBG->setTag(21);
+      addChild(blackBG, 2);
+      
+      // ÂÖ≥Èó≠ÊåâÈíÆ
+      CCMenuItemImage *start = CCMenuItemImage::create(LEAFLET_CLOSE_IMG_PATH, LEAFLET_CLOSE_IMG_PATH, this, menu_selector(StoryWorld::menuLeafletsCloseCallback));
+      
+      start->setPosition(ccp(CCDirector::sharedDirector()->getVisibleSize().width-40, CCDirector::sharedDirector()->getVisibleSize().height-40));
+      
+      //ËèúÂçï
+      CCMenu* pMenu = CCMenu::create(start, NULL);
+      pMenu->setPosition(CCPointZero);
+      pMenu->setTag(23);
+      addChild(pMenu, 4);
     }
-    char fileName[8] = "Fin ";
-    
-    switch (choice) {
-        case fChoice:
-            fileName[3]='1';
-            break;
-        case sChoice:
-            fileName[3]='2';
-            break;
-        case tChoice:
-            fileName[3]='3';
-            break;
-        default:
-            break;
+      return;
+    case sChoice:
+    default:{
+      specialPartSwitchCase('1');
     }
-    reader.ChangeFile(cocos2d::CCFileUtils::sharedFileUtils()->fullPathForFilename(fileName));
-    
-    removeChildByTag(2);
-    removeChildByTag(3);
-    setTouchEnabled(true);
-    
-    avgGame();
+      return;
+  }
+}
+
+
+// 
+void StoryWorld::gameOverAndBackToWelcome() {
+  CCScene *welcome = Welcome::scene();
+  CCTransitionCrossFade *backToWelcome = CCTransitionCrossFade::create(0.7, welcome);
+  CCDirector::sharedDirector()->replaceScene(backToWelcome);
 }
 
-void StoryWorld::over() {
-	CCScene *welcome = Welcome::scene();
-	CCTransitionCrossFade *backToWelcome = CCTransitionCrossFade::create(0.7, welcome);
-	CCDirector::sharedDirector()->replaceScene(backToWelcome);
+
+//
+void StoryWorld::saveProcessAndPopOut() {
+  current+=1;
+  CCUserDefault::sharedUserDefault()->setIntegerForKey("Process", current-'0');
+  CCUserDefault::sharedUserDefault()->flush();
+  CCEGLView::sharedOpenGLView()->setDesignResolutionSize(672, 448, kResolutionExactFit);
+  
+  CCDirector::sharedDirector()->popScene();
 }
 
+//
 void StoryWorld::menuLeafletsCloseCallback(CCObject* sender) {
-    removeChildByTag(21);
-    removeChildByTag(22);
-    removeChildByTag(23);
-    setTouchEnabled(true);
-    current+=1;
-    CCUserDefault::sharedUserDefault()->setIntegerForKey("Process", current);
-    CCUserDefault::sharedUserDefault()->flush();
-	CCEGLView::sharedOpenGLView()->setDesignResolutionSize(480, 320, kResolutionExactFit);
-	CCDirector::sharedDirector()->popScene();
+  removeChildByTag(21);
+  removeChildByTag(22);
+  removeChildByTag(23);
+  setTouchEnabled(true);
+  //
+  specialPartSwitchCase('1');
+}
+
+void StoryWorld::confirmButtonHandler(CCObject *sender) {
+  saveProcessAndPopOut();
 }
 
+//
 void StoryWorld::menuCloseCallback(CCObject* pSender) {
 #if (CC_TARGET_PLATFORM == CC_PLATFORM_WINRT) || (CC_TARGET_PLATFORM == CC_PLATFORM_WP8)
-	CCMessageBox("You pressed the close button. Windows Store Apps do not implement a close button.","Alert");
+  CCMessageBox("You pressed the close button. Windows Store Apps do not implement a close button.","Alert");
 #else
-    CCDirector::sharedDirector()->end();
+  CCDirector::sharedDirector()->end();
 #if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
-    exit(0);
+  exit(0);
 #endif
 #endif
 }
diff --git a/Classes/Story.h b/Classes/Story.h
old mode 100644
new mode 100755
index 18b53af..7398b25
--- a/Classes/Story.h
+++ b/Classes/Story.h
@@ -4,7 +4,6 @@
 #include "cocos2d.h"
 #include "AppMacros.h"
 #include "PlayReader.h"
-#include "CombatScene.h"
 #include "SimpleAudioEngine.h"
 #include "Welcome.h"
 #include <vector>
@@ -12,27 +11,30 @@
 class StoryWorld : public cocos2d::CCLayer
 {
 public:
-    virtual bool init();  
-
-    static cocos2d::CCScene* scene();
-    
-    CREATE_FUNC(StoryWorld);
+  virtual bool init();
+  
+  static cocos2d::CCScene* scene();
+  
+  CREATE_FUNC(StoryWorld);
 protected:
-    enum allChoice {fChoice = 10, sChoice, tChoice};
-    void menuCloseCallback(CCObject* pSender);
-    void ccTouchesEnded(cocos2d::CCSet *pTouches, cocos2d::CCEvent *pEvent);
-    void makeAChoice(CCObject *sender);
-    void menuLeafletsCloseCallback(CCObject* sender);
-    void avgGame(void);
-    void saveProcess();
-    void over() ;
-    char current;
-    char dialog[256];
-//    char theName[10][11]={"","Á©ÜÂ©ß:", "Â≠êËΩ©:", "Â∞ëÊù∞:", "Âª∫ÂõΩ", "Ë∑Ø‰∫∫A:", "Ë∑Ø‰∫∫B:", "Ë∑Ø‰∫∫C:", "ËÄÅÁà∑Áà∑:", "Ê±üÂßê:"};
-//	char theName[10][11];
-	//std::vector<string> theName; 
-	PlayReader reader;
-//    ProcessSaver saver;
+  enum allChoice {fChoice = 10, sChoice, tChoice};
+  void menuCloseCallback(CCObject* pSender);
+  void ccTouchesEnded(cocos2d::CCSet *pTouches, cocos2d::CCEvent *pEvent);
+  void leafletChoiceHandler(CCObject *sender);
+  void theFinalChoiceHandler(CCObject *sender);
+  void confirmButtonHandler(CCObject *sender);
+  void menuLeafletsCloseCallback(CCObject* sender);
+  
+  void avgGame(void);
+  void characterPasterSwitchCase(int code);
+  void specialPartSwitchCase(int code);
+  void audioSwitchCase(int code);
+  
+  void saveProcessAndPopOut();
+  void gameOverAndBackToWelcome();
+  char current;
+  char dialog[512];
+  PlayReader reader;
 };
 
 #endif // __StoryWorld_SCENE_H__
diff --git a/Classes/TimeUtil.cpp b/Classes/TimeUtil.cpp
new file mode 100644
index 0000000..43abfc1
--- /dev/null
+++ b/Classes/TimeUtil.cpp
@@ -0,0 +1,35 @@
+#include "TimeUtil.h"
+
+int TimeUtil::getHour()
+{
+	int hour=8;
+#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
+	struct cc_timeval now;
+	CCTime::gettimeofdayCocos2d(&now,NULL);
+	struct tm* tmm = localtime((const time_t*)&now.tv_sec);
+	if(tmm!=NULL) hour = tmm->tm_hour;
+#elif ( CC_TARGET_PLATFORM == CC_PLATFORM_WIN32 )
+	time_t timep;
+	time(&timep);
+	struct tm* tmm = localtime(&timep);
+	if (tmm != NULL) hour = tmm->tm_hour;
+#endif
+	return hour;
+}
+
+int TimeUtil::getWeekDay()
+{
+	int weekday=0;
+#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
+	struct cc_timeval now;
+	CCTime::gettimeofdayCocos2d(&now,NULL);
+	struct tm* tmm = localtime((const time_t*)&now.tv_sec);
+	if(tmm!=NULL) weekday = tmm->tm_wday;
+#elif ( CC_TARGET_PLATFORM == CC_PLATFORM_WIN32 )
+	time_t timep;
+	time(&timep);
+	struct tm* tmm = localtime(&timep);
+	if (tmm != NULL) weekday = tmm->tm_wday;
+#endif
+	return weekday;
+}
diff --git a/Classes/TimeUtil.h b/Classes/TimeUtil.h
new file mode 100644
index 0000000..98a658e
--- /dev/null
+++ b/Classes/TimeUtil.h
@@ -0,0 +1,11 @@
+#ifndef __TIME_UTIL_H__
+#define __TIME_UTIL_H__
+#include "cocos2d.h"
+
+class TimeUtil
+{
+public:
+	static int getHour();
+	static int getWeekDay();
+};
+#endif
diff --git a/Classes/TouchScreen.cpp b/Classes/TouchScreen.cpp
index e7a722c..c102769 100644
--- a/Classes/TouchScreen.cpp
+++ b/Classes/TouchScreen.cpp
@@ -54,9 +54,9 @@ void TouchScreen::teleportTo(CCSet* pTouch, CCEvent *pEvent)
 	CCPoint mapTileMove=hero->map->humanPosForTileMove(mapTileCoord);
 
 	CCSequence* teleport=CCSequence::create(CCDelayTime::create(0.5f),
-		Animation::getAction(TELEPORTOUT,hero->getChildByTag(IMGSP)->getContentSize()),
+		AnimLib::getAction(TELEPORTOUT,hero->getChildByTag(IMGSP)->getContentSize()),
 		CCDelayTime::create(0.40f),
-		Animation::getAction(TELEPORTIN,hero->getChildByTag(IMGSP)->getContentSize()),
+		AnimLib::getAction(TELEPORTIN,hero->getChildByTag(IMGSP)->getContentSize()),
 		NULL);
 	CCScaleTo* mapLayerMove=CCScaleTo::create(0.5f,1.0f);
 	CCSequence* mapMove=CCSequence::create(CCDelayTime::create(0.5f),
diff --git a/Classes/TouchScreen.h b/Classes/TouchScreen.h
index 54d439a..4ee737c 100644
--- a/Classes/TouchScreen.h
+++ b/Classes/TouchScreen.h
@@ -5,6 +5,8 @@
 #include "AppMacros.h"
 #include "Button.h"
 #include "GlobalRes.h"
+#include "AnimLib.h"
+
 using namespace cocos2d;
 
 class TouchScreen: public Button
diff --git a/Classes/Welcome.cpp b/Classes/Welcome.cpp
index 1b158db..0f7c873 100644
--- a/Classes/Welcome.cpp
+++ b/Classes/Welcome.cpp
@@ -27,9 +27,10 @@ bool Welcome::init() {
 
 void Welcome::menuStartCallback(CCObject* pSender) {
 	CCEGLView::sharedOpenGLView()->setDesignResolutionSize(MAP_RESOLUWID,MAP_RESOLUHEI, kResolutionExactFit);
-	CCScene *pScene = HelloWorld::scene();
+	CCScene* pScene = Combat::scene();
+	//CCScene *pScene = HelloWorld::scene();
 	CCTransitionFade *scenetrans = CCTransitionFade::create(0.7, pScene);
-	CCDirector::sharedDirector()->replaceScene(scenetrans);
+	CCDirector::sharedDirector()->pushScene(scenetrans);
 }
 
 void Welcome::menuClearCallback(CCObject* pSender) {
diff --git a/Classes/Welcome.h b/Classes/Welcome.h
index a882cfc..f92089b 100644
--- a/Classes/Welcome.h
+++ b/Classes/Welcome.h
@@ -4,6 +4,7 @@
 #include "cocos2d.h"
 #include "GlobalState.h"
 #include "AppMacros.h"
+#include "CombatScene.h"
 using namespace cocos2d;
 //updateÔºö2014-10-1 15:59:03
 
diff --git a/Classes/desktop.ini b/Classes/desktop.ini
new file mode 100644
index 0000000..b70df33
--- /dev/null
+++ b/Classes/desktop.ini
@@ -0,0 +1,2 @@
+[.ShellClassInfo]
+IconResource=D:\‘∆π‹º“\BaiduYunGuanjia\autobackup.ico,0
diff --git a/Resources/csv/event0.csv b/Resources/csv/event0.csv
deleted file mode 100644
index a2375dc..0000000
--- a/Resources/csv/event0.csv
+++ /dev/null
@@ -1,7 +0,0 @@
-x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,,,,
-1,1,1,1,1,0,1,-1,1,1,1,1,1,1,1,1,1,,,
-62,97,Œ˜ƒœ√≈±£∞≤,2,0,0,7,4,0,3,1,0,1, «–¬…˙∞…,«‡¥∫π„≥°¥”’‚¿Ô“ª÷±Õ˘«∞◊ﬂæÕ «,øÏ»•±®µ¿∞…£°,1,,,
-0,0,œ–»À,3,2,0,8,-1,0,1,6,TRUE,64,95,64,91,64,95,Œ“◊ﬂ,1
-0,0,ø™π“,4,-1,1,-10,-1,0,0,0,0,,,,,,,,
-64,97,«∞–Ú ¬º˛,5,0,0,6,-1,1,1,1,1,»•Œ ±£∞≤,2,2,,,,,
-63,99,—ß–£Õ‚Ã· æ,6,-1,2,-1,-1,0,1,0,1,‘ŸÕ‚±ﬂæÕ «–£√≈Õ‚¿≤,,,,,,,
diff --git a/Resources/csv/event100.csv b/Resources/csv/event100.csv
new file mode 100644
index 0000000..b4709dc
--- /dev/null
+++ b/Resources/csv/event100.csv
@@ -0,0 +1 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
diff --git a/Resources/csv/event101.csv b/Resources/csv/event101.csv
new file mode 100644
index 0000000..b4709dc
--- /dev/null
+++ b/Resources/csv/event101.csv
@@ -0,0 +1 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
diff --git a/Resources/csv/event102.csv b/Resources/csv/event102.csv
new file mode 100644
index 0000000..c123e4b
--- /dev/null
+++ b/Resources/csv/event102.csv
@@ -0,0 +1,2 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
+2,0,StrangeMan,100,1,0,1,-1,0,1,0,1,hello,
diff --git a/Resources/csv/event103.csv b/Resources/csv/event103.csv
new file mode 100644
index 0000000..b4709dc
--- /dev/null
+++ b/Resources/csv/event103.csv
@@ -0,0 +1 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
diff --git a/Resources/csv/event104.csv b/Resources/csv/event104.csv
new file mode 100644
index 0000000..b4709dc
--- /dev/null
+++ b/Resources/csv/event104.csv
@@ -0,0 +1 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
diff --git a/Resources/csv/event105.csv b/Resources/csv/event105.csv
new file mode 100644
index 0000000..b4709dc
--- /dev/null
+++ b/Resources/csv/event105.csv
@@ -0,0 +1 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
diff --git a/Resources/csv/event106.csv b/Resources/csv/event106.csv
new file mode 100644
index 0000000..b4709dc
--- /dev/null
+++ b/Resources/csv/event106.csv
@@ -0,0 +1 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
diff --git a/Resources/csv/event110.csv b/Resources/csv/event110.csv
new file mode 100644
index 0000000..381318c
--- /dev/null
+++ b/Resources/csv/event110.csv
@@ -0,0 +1,9 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,,,,
+1,1,1,1,1,0,1,-1,1,1,1,1,1,1,1,1,1,,,
+62,97,Œ˜ƒœ√≈±£∞≤,2,0,0,7,4,0,3,1,0,1, «–¬…˙∞…,«‡¥∫π„≥°¥”’‚¿Ô“ª÷±Õ˘«∞◊ﬂæÕ «,øÏ»•±®µ¿∞…£°,1,,,
+0,0,œ–»À,3,2,0,8,-1,0,1,6,TRUE,64,95,64,91,64,95,Œ“◊ﬂ,1
+0,0,ø™π“,4,-1,1,-10,-1,0,0,0,0,,,,,,,,
+64,97,«∞–Ú ¬º˛,5,0,0,6,7,1,1,1,1,2,»•Œ ±£∞≤,2,,,,,
+63,99,—ß–£Õ‚Ã· æ,6,-1,2,-1,8,0,1,0,1,‘ŸÕ‚±ﬂæÕ «–£√≈Õ‚¿≤,,,,,,,
+0,0,ªÒµ√ƒ–”—,7,-1,3,-1,-1,0,0,1,0,1,,,,,,,
+0,0,go on,8,-1,4,-10,-1,0,0,0,1,
diff --git a/Resources/csv/event111.csv b/Resources/csv/event111.csv
new file mode 100644
index 0000000..0805959
--- /dev/null
+++ b/Resources/csv/event111.csv
@@ -0,0 +1,2 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres
+54,60,µÿÕº∂˛…œ»À,101,1,0,1,-1,0,1,0,1,Hola,,
diff --git a/Resources/csv/event200.csv b/Resources/csv/event200.csv
new file mode 100644
index 0000000..b4709dc
--- /dev/null
+++ b/Resources/csv/event200.csv
@@ -0,0 +1 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
diff --git a/Resources/csv/event201.csv b/Resources/csv/event201.csv
new file mode 100644
index 0000000..b4709dc
--- /dev/null
+++ b/Resources/csv/event201.csv
@@ -0,0 +1 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
diff --git a/Resources/csv/event202.csv b/Resources/csv/event202.csv
new file mode 100644
index 0000000..c475d77
--- /dev/null
+++ b/Resources/csv/event202.csv
@@ -0,0 +1,2 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
+0,2,StrangeMan,100,1,0,1,-1,0,1,0,1,hello,
diff --git a/Resources/csv/event203.csv b/Resources/csv/event203.csv
new file mode 100644
index 0000000..b4709dc
--- /dev/null
+++ b/Resources/csv/event203.csv
@@ -0,0 +1 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
diff --git a/Resources/csv/event204.csv b/Resources/csv/event204.csv
new file mode 100644
index 0000000..b4709dc
--- /dev/null
+++ b/Resources/csv/event204.csv
@@ -0,0 +1 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
diff --git a/Resources/csv/event205.csv b/Resources/csv/event205.csv
new file mode 100644
index 0000000..b4709dc
--- /dev/null
+++ b/Resources/csv/event205.csv
@@ -0,0 +1 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
diff --git a/Resources/csv/event206.csv b/Resources/csv/event206.csv
new file mode 100644
index 0000000..b4709dc
--- /dev/null
+++ b/Resources/csv/event206.csv
@@ -0,0 +1 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres,,
diff --git a/Resources/csv/event210.csv b/Resources/csv/event210.csv
new file mode 100644
index 0000000..0805959
--- /dev/null
+++ b/Resources/csv/event210.csv
@@ -0,0 +1,2 @@
+x,y,description,id,category,type,imgNo,next,nPreCondition,nDialog,nArgument,repeat,args,dialogs,pres
+54,60,µÿÕº∂˛…œ»À,101,1,0,1,-1,0,1,0,1,Hola,,
diff --git a/Resources/img/story/ConfirmBackground.png b/Resources/img/story/ConfirmBackground.png
new file mode 100644
index 0000000..40a703b
Binary files /dev/null and b/Resources/img/story/ConfirmBackground.png differ
diff --git a/Resources/img/story/ConfirmButton.png b/Resources/img/story/ConfirmButton.png
new file mode 100644
index 0000000..7116751
Binary files /dev/null and b/Resources/img/story/ConfirmButton.png differ
diff --git a/Resources/img/story/Landscape.png b/Resources/img/story/Landscape.png
new file mode 100755
index 0000000..c4e4ae5
Binary files /dev/null and b/Resources/img/story/Landscape.png differ
diff --git a/Resources/img/story/leaflet.png b/Resources/img/story/leaflet.png
new file mode 100644
index 0000000..4590a86
Binary files /dev/null and b/Resources/img/story/leaflet.png differ
diff --git a/Resources/img/story/leafletsclose.png b/Resources/img/story/leafletsclose.png
new file mode 100755
index 0000000..3702978
Binary files /dev/null and b/Resources/img/story/leafletsclose.png differ
diff --git a/Resources/img/story/staff.png b/Resources/img/story/staff.png
new file mode 100755
index 0000000..45ebc81
Binary files /dev/null and b/Resources/img/story/staff.png differ
diff --git a/Resources/img/story/staff_bg.png b/Resources/img/story/staff_bg.png
new file mode 100755
index 0000000..7a27c91
Binary files /dev/null and b/Resources/img/story/staff_bg.png differ
diff --git a/Resources/txt/Fin1 b/Resources/txt/Fin1
new file mode 100644
index 0000000..5818bb3
--- /dev/null
+++ b/Resources/txt/Fin1
@@ -0,0 +1,16 @@
+10300ÊàëÊÄÄÁùÄÁ¥ßÂº†ÂíåÊúüÂæÖÁöÑÂøÉÊÉÖÔºåÈ©¨‰∏çÂÅúËπÑÁöÑË∑ëÂêëÁ∫¶ÂÆöÁöÑÂú∞ÁÇπ--‰∏çÈ´òÂ±±
+11000ÂïäÔºåÁªà‰∫éÂà∞‰∫ÜÔºåÂâçÈù¢ÁöÑ‰∫∫ÂΩ±ÊòØ---------
+21400ÔºÅÔºÅÔºÅÔºÅÔºÅÊòØÂ≠êËΩ©ÔºÅÔºÅÔºÅ
+10000ÊÄé‰πàÂõû‰∫ãÔºü‰ªÄ‰πàÊó∂ÂÄôÊàëÁöÑÊÑèÂøµÂäõËøô‰πàÂº∫Â§ß‰∫ÜÂêóÔºüÁ´üÁÑ∂ÈÉΩÂøÉÊÉ≥‰∫ãÊàê‰∫ÜÔºÅÔºÅ
+10009Â•ΩÁ¥ßÂº†ÂëÄÔºå‰ªñ‰ºöËØ¥‰ªÄ‰πàÔºü
+25000‰∏´Â§¥Ôºå‰Ω†Êó¢ÁÑ∂Êù•‰∫ÜÔºåÂ∞±ÊòØÈªòËÆ§Á≠îÂ∫îÂÅöÊàëÂ•≥ÊúãÂèã‰∫ÜÂì¶Ôºü
+13000„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+27000Â§™Â•Ω‰∫ÜÔºÅÔºÅËÄÅÂ≠êÁªà‰∫éËÑ±Âçï‰∫ÜÔºÅÔºÅÂ¶àÂ¶àÂÜç‰πü‰∏çÁî®ÊãÖÂøÉÊàëÁöÑÊÄßÂèñÂêëÔºÅ
+16000ËøôË¥ßÊòØÊù•ÊêûÁ¨ëÁöÑÂòõ„ÄÇ„ÄÇ„ÄÇÂ•ΩÊÉ≥ÂêêÊßΩ„ÄÇ„ÄÇ„ÄÇ„ÄÇÊÄªËßâÂæó‰ºöÂæà‰∏çÈù†Ë∞±ÁöÑËØ¥„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+12000‰Ω†ÊÉ≥ÂæóÂ§™Áæé‰∫ÜÂêßÔºüÂì™ÊúâÂàöËÆ§ËØÜ‰∏ÄÂ§©Â∞±‰∫§ÂæÄÔºÅÔºÅÔºÅ
+26000ËØ∂Ôºü„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+16000ÊàëÁúãÂêëÂØπÈù¢Èú≤Âá∫Ëå´ÁÑ∂ÂèØÁà±Ë°®ÊÉÖÁöÑÁî∑ÁîüÔºåÁ™ÅÁÑ∂ËßâÂæóÁé∞Âú®ËøôÊ†∑ÁúüÁöÑÊòØÊúÄÂ•ΩÁöÑÁªìÂ±Ä)
+26000‰Ω†ÊÄé‰πà‰∫ÜÔºüXXÔºåÂπ≤Âòõ‰∏ÄÁõ¥ÂèëÂëÜ„ÄÇ„ÄÇ
+15000Ê≤°‰∫ãÔºåÈô™ÊàëÂéªÂ±±ÈáåÈÄõÈÄõÂêß~
+21000Âì¶„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+00520ÁîªÈù¢Ê∏êÊ∏êËΩ¨Èªë„ÄÇ„ÄÇ„ÄÇ„ÄÇ
\ No newline at end of file
diff --git a/Resources/txt/Fin2 b/Resources/txt/Fin2
new file mode 100644
index 0000000..12e87c6
--- /dev/null
+++ b/Resources/txt/Fin2
@@ -0,0 +1,19 @@
+10000ÊàëÊÄÄÁùÄÁ¥ßÂº†ÂíåÊúüÂæÖÁöÑÂøÉÊÉÖÔºåÈ©¨‰∏çÂÅúËπÑÁöÑË∑ëÂêëÁ∫¶ÂÆöÁöÑÂú∞ÁÇπ--‰∏çÈ´òÂ±±
+11000ÂïäÔºåÁªà‰∫éÂà∞‰∫ÜÔºåÂâçÈù¢ÁöÑ‰∫∫ÂΩ±ÊòØ---------
+31400ÔºÅÔºÅÔºÅÔºÅÔºÅÊòØÂ∞ëÊù∞ÔºÅÔºÅÔºÅ
+10000ÊÄé‰πàÂõû‰∫ãÔºü‰ªÄ‰πàÊó∂ÂÄôÊàëÁöÑÊÑèÂøµÂäõËøô‰πàÂº∫Â§ß‰∫ÜÂêóÔºüÁ´üÁÑ∂ÈÉΩÂøÉÊÉ≥‰∫ãÊàê‰∫ÜÔºÅÔºÅ
+10009Â•ΩÁ¥ßÂº†ÂëÄÔºå‰ªñ‰ºöËØ¥‰ªÄ‰πàÔºü
+30000Â∞ëÊù∞ÁºìÁºìÂú∞ÂºÄÂè£‰∫ÜÔºåÊ∏ÖÂÜΩÁöÑÂ£∞Èü≥ÊµÅÊ∑åÁùÄ-
+35000Êàë‰∏çÁü•ÈÅì‰Ω†ÊÄÄÁùÄ‰ΩïÁßçÂøÉÊÉÖËÄåÊù•‚Äî‚Äî
+31000‰ΩÜ‰Ω†ËÇØÂÆö‰ºöÂØπËøô‰∏™Âè™Êúâ‰∏ÄÈù¢‰πãÁºòÁöÑÂëäÁôΩÂÖÖÊª°‰∫ÜÊÄÄÁñëÔºåËÄåÊàëÊÉ≥ËØ¥ÁöÑÊòØ‚Äî‚Äî
+36000ÊàëÊØèÂ§©ÈÅáËßÅ‰∏çÂêåÁöÑ‰∫∫ÔºåÁªèÂéÜ‰∏çÂêåÁöÑÊïÖ‰∫ãÔºå‰ΩÜ‰ªäÂ§©ÔºåÊàëÂè™Áõ∏‰ø°ÊàëËá™Â∑±ÁöÑÊÑüËßâÔºå‰Ω†Â∞±ÊòØÊàëÊ†°Âõ≠ÊïÖ‰∫ãÈáåÁöÑÂÖ¨‰∏ª‚Äî‚Äî
+32000Â∞±ËÆ©Êó∂Èó¥ÂéªËØÅÊòé‰∏ÄÂàáÂêß„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+10000Âê¨ÁùÄÂ∞ëÊù∞Ê∑±ÊÉÖÁöÑËá™ÁôΩÔºåÊàëÊÑüËßâÂøÉÈÉΩÊπøÊ∂¶‰∫Ü„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+12000ÊàëÊÑøÊÑèÔºÅ
+16000ËôΩÁÑ∂‰ªéÂ∞èÂà∞Â§ßÔºåÈô§‰∫ÜÊùÄÈ©¨ÁâπÂÖ¨‰∏ªÔºåÊàëÂ∞±ÂÜç‰πüÊ≤°ÊúâË¢´Ë¢´‰∫∫Âè´ÂÅöÂÖ¨‰∏ª‰∫Ü„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+33000Âïä?
+16000ÊàëÁúãÂêëÂØπÈù¢Èú≤Âá∫Ëå´ÁÑ∂ÂèØÁà±Ë°®ÊÉÖÁöÑÁî∑ÁîüÔºåÁ™ÅÁÑ∂ËßâÂæóÁé∞Âú®ËøôÊ†∑ÁúüÁöÑÊòØÊúÄÂ•ΩÁöÑÁªìÂ±Ä
+33000‰Ω†ÊÄé‰πà‰∫ÜÔºüÁ©ÜÂ©ßÔºåÂπ≤Âòõ‰∏ÄÁõ¥ÂèëÂëÜ„ÄÇ„ÄÇ
+15000Ê≤°‰∫ãÔºåÈô™ÊàëÂéªÂ±±ÈáåÈÄõÈÄõÂêß
+36000Âì¶„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+00520ÁîªÈù¢Ê∏êÊ∏êËΩ¨Èªë„ÄÇ„ÄÇ„ÄÇ„ÄÇ
\ No newline at end of file
diff --git a/Resources/txt/Fin3 b/Resources/txt/Fin3
new file mode 100644
index 0000000..fe6ef15
--- /dev/null
+++ b/Resources/txt/Fin3
@@ -0,0 +1,16 @@
+10300ÊàëÊÄÄÁùÄÁ¥ßÂº†ÂíåÊúüÂæÖÁöÑÂøÉÊÉÖÔºåÈ©¨‰∏çÂÅúËπÑÁöÑË∑ëÂêëÁ∫¶ÂÆöÁöÑÂú∞ÁÇπ--‰∏çÈ´òÂ±±
+11000ÂïäÔºåÁªà‰∫éÂà∞‰∫ÜÔºåÂâçÈù¢ÁöÑ‰∫∫ÂΩ±ÊòØ---------
+41400ÔºÅÔºÅÔºÅÔºÅÔºÅÊòØÂª∫ÂõΩÔºÅÔºÅÔºÅ
+10000ÊÄé‰πàÂõû‰∫ãÔºü‰ªÄ‰πàÊó∂ÂÄôÊàëÁöÑÊÑèÂøµÂäõËøô‰πàÂº∫Â§ß‰∫ÜÂêóÔºüÁ´üÁÑ∂ÈÉΩÂøÉÊÉ≥‰∫ãÊàê‰∫ÜÔºÅÔºÅ
+10009Â•ΩÁ¥ßÂº†ÂëÄÔºå‰ªñ‰ºöËØ¥‰ªÄ‰πàÔºü
+43000ÈÇ£‰∏™„ÄÇ„ÄÇ„ÄÇ„ÄÇ‰∏çÂ•ΩÊÑèÊÄùÂïäÔºåËøôÊù°Áü≠‰ø°ÊòØÊàë‰ª¨ÂØùÁé©ÁúüÂøÉËØùÂ§ßÂÜíÈô©Ë¢´ÊçüÂèãÈÄºÁùÄÂèëÁöÑ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇÂÆ≥‰Ω†ÁôΩË∑ë‰∏ÄË∂üÔºåÈùûÂ∏∏Êä±Ê≠âÔºÅ
+10000ÊÄé‰πà‰ºöÊòØËøôÊ†∑ÔºÅÔºÅÔºÅÂéüÊù•ÊûúÁÑ∂ÊòØÊàëËá™‰ΩúÂ§öÊÉÖÂêó„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+42000‰Ω†ÂçÉ‰∏áÂà´Âì≠ÂïäÔºÅÔºÅÈÉΩÊòØÊàë‰∏çÂ•Ω„ÄÇ„ÄÇ„ÄÇËøôÊòØ„ÄÇ„ÄÇ„ÄÇ„ÄÇÊàë‰∏ìÈó®Áªô‰Ω†‰π∞ÁöÑËä±ÔºåÂ∏åÊúõ‰Ω†‰∏çË¶ÅÂú®ÊÑèÂïä„ÄÇ„ÄÇ„ÄÇ
+10000ÁôΩÁé´Áë∞„ÄÇ„ÄÇ„ÄÇËøòÁúüÊòØÁî®ÂøÉÁöÑÁ§ºÁâ©ÂëêÔºüÂìàÂìàÔºåÊù•Êó•ÊñπÈïø„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+16000ËØ¥ÔºÅËøôÁü≠‰ø°ÁúüÊòØÁé©Â§ßÂÜíÈô©ÂèëÁöÑÔºü
+46000ÊÅ©ÊÅ©ÔºåÊàëÂíãÊï¢È™ó‰Ω†Âïä„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+16000ÊàëÁúãÂêëÂØπÈù¢Èú≤Âá∫Ëå´ÁÑ∂ÂèØÁà±Ë°®ÊÉÖÁöÑÁî∑ÁîüÔºåÁ™ÅÁÑ∂ËßâÂæóÁé∞Âú®ËøôÊ†∑ÁúüÁöÑÊòØÊúÄÂ•ΩÁöÑÁªìÂ±Ä)
+42000‰Ω†ÊÄé‰πà‰∫ÜÔºüÁ©ÜÂ©ßÔºåÂπ≤Âòõ‰∏ÄÁõ¥ÂèëÂëÜ„ÄÇ„ÄÇ
+15000Ê≤°‰∫ãÔºåÈô™ÊàëÂéªÂ±±ÈáåÈÄõÈÄõÂêß~
+46000Âì¶„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+00520ÁîªÈù¢Ê∏êÊ∏êËΩ¨Èªë„ÄÇ„ÄÇ„ÄÇ„ÄÇ
\ No newline at end of file
diff --git a/Resources/txt/Script0 b/Resources/txt/Script0
new file mode 100644
index 0000000..e0c6812
--- /dev/null
+++ b/Resources/txt/Script0
@@ -0,0 +1,35 @@
+11301Áªà‰∫éÂà∞Âï¶ÔºÅÔºÅ‰º†ËØ¥‰∏≠ÁöÑÂõõÂ∑ùÂ§ßÂ≠¶~
+11030ËØ∂ÔºåÊûúÁÑ∂ÊòØÂ•ΩÂ£ÆËßÇÁöÑÂ§ßÈó®Âïä
+10000ËÉåÊôØÊ∏êËøõÔºàËÑöÊ≠•Â£∞Ôºâ
+10000ÂèØÊòØË¶ÅÂæÄÂì™ÈáåËµ∞Âë¢Ôºü
+21400ÈòøÊãâ~ÂèØÁà±ÁöÑÂ≠¶Â¶π‰Ω†Â•ΩÂïäÔºåÊàëÊòØÂ≠êËΩ©ÔºåÈúÄË¶ÅÂ∏ÆÂøôÂêó?
+11000ÔºàÁúüÊòØÈò≥ÂÖâÁöÑÁ¨ëÂÆπÈÇ£ÔºåËøûÂ∏¶ÁùÄÁÉ¶Ë∫ÅÁöÑÂøÉÊÉÖÈÉΩË∑üÁùÄÂèòÂ•Ω‰∫ÜÔºâ
+10000ÈÇ£‰∏™ÔºåÁúüÊòØÈ∫ªÁÉ¶‰∫ÜÔºåÊàëÊòØÁ©ÜÂ©ß
+10000ÂèØ‰ª•ÂëäËØâÊàëËÆ°ÁÆóÊú∫Â≠¶Èô¢ÁöÑÁöÑÊä•Âà∞Âú∞ÁÇπÂêóÔºü
+20000ËÆ°ÁÆóÊú∫Â≠¶Èô¢„ÄÇ„ÄÇÂêóÔºü
+20000ÁúüÊòØÂ∑ß‰∫ÜÔºåÊàë‰πüÊòØËÆ°Èô¢ÁöÑÂì¶ÔºåÂπ≤ËÑÜÊàëÂ∏¶‰Ω†ËøáÂéªÂêßÔºåÂ∞±Âú®ÂâçÈù¢ÁöÑÈùíÊò•ÂπøÂú∫‰∏ä„ÄÇ
+24030ËøôÈáåÂ∞±ÊòØËÆ°ÁÆóÊú∫Â≠¶Èô¢ÁöÑÊëä‰Ωç‰∫ÜÔºåÊàëÂ§ßËÆ°Áßë‰∫∫ÊâçÊµéÊµé
+27030Â∞±ÊòØË¥®ÈáèÊúâÁÇπÂèÇÂ∑Æ‰∏çÈΩêÂïäÔºåÂëµÂëµ
+22000Â•Ω‰∫ÜÔºåÂ∫üËØù‰∏çÂ§öËØ¥
+22000Âø´Âà∞ÂÖ¨ÂëäÊùøÈÇ£ÈáåÁúãÁúã‰Ω†ÂàÜÈÖçÁöÑÂØùÂÆ§ÂíåÂ∞è‰ºô‰º¥‰ª¨Âêß
+13000ÂïäÔºåÂíåÊàë‰∏Ä‰∏™Â∞èÂØùÁöÑÊúâË∑Ø‰∫∫AÔºåË∑Ø‰∫∫BÔºåÂíåË∑Ø‰∫∫C„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+25000ÁúãÂêçÂ≠óÂ∞±ÊòØÊÑüËßâÂæàÂ•ΩÁõ∏Â§ÑÁöÑ‰∫∫Âë¢~
+20000‰∏çÂÉèÊàëÁöÑÈÇ£Â∏ÆÁãêÊúãÁãóÂèãÔºåÁúüÊòØ‰∏Ä‰∏™ÊØî‰∏Ä‰∏™Áå•Áêê„ÄÇ„ÄÇ
+10000ÂïäÔºåËØ∑ÂÖÅËÆ∏ÊàëÂÅö‰∏Ä‰∏™ÊÇ≤‰º§ÁöÑË°®ÊÉÖ~~
+21000ÂÖâÈ°æÁùÄËÅäÂ§©ÔºåÂ∑ÆÁÇπÊääÊ≠£‰∫ãÁªôÂøò‰∫ÜÔºåËµ∂Á¥ßÊãøÂá∫‰Ω†ÈáëÁÅøÁÅøÁöÑÂΩïÂèñÈÄöÁü•‰π¶Êù•È¢ÜÂèñ‰Ω†ÁöÑÊ†°Âõ≠‰∏ÄÂç°ÈÄöÂêß
+25000Êúâ‰∫ÜËøô‰∏™Â∞±ÂèØ‰ª•Áî®ÂÆÉÊù•ÂêÉÈ•≠ÔºåÊ¥óÊæ°Â§ñÂä†ÈÄöËøáÈó®Á¶Å‰∫Ü~
+20030„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇÂ•Ω‰∫ÜÔºÅÔºÅ
+23000Ê≥®ÂÜåÂÆå‰πãÂêéÔºåÂ∞±ÊòØË¥≠‰π∞ÂçßÂÖ∑ÁÑ∂ÂêéÂéªÁúãÁúãÂØùÂÆ§‰∫ÜÔºåÂÆøËàçÂå∫ÈÉΩÂú®ÂïÜ‰∏öË°óÁöÑËøôËæπÔºåÂæàÂ•ΩËæ®ËÆ§„ÄÇ
+24000Ë°åÊùéÊãøÊù•ÔºåÊàëÊù•ÊèêÂêß
+00000ÔºàÂñòÊ∞îÂ£∞Ôºâ
+21000Âíø‚Äî‚Äî‚Äî‚ÄîÂó¨‚Äî‚Äî‚Äî‚Äî
+21030ÊàëÂãí‰∏™Âéª~‰Ω†Ë°åÊùéÁÆ±‰∫ÜÈáåÂà∞Â∫ïË£Ö‰∫Ü‰ªÄ‰πàÂïäÔºåÁ¥ØÊ≠ªÊúï‰∫Ü
+11000ÈÇ£‰∏™„ÄÇ„ÄÇ„ÄÇ„ÄÇÈ∫ªÈ∫ªËØ¥‰∏çË¶ÅÈöè‰æø‰π∞Â§ñÈù¢ÁöÑË°£Êúç
+16000ÊâÄ‰ª•Â∞±ÁªôÊàëË£Ö‰∫ÜÂá†Â•óÂøÖÂ§áÊ¨æÂºè„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+10000(ÊÑüËßâÊàëÁöÑË°åÊùéÁÆ±ËøòÊòØÂæàÊå∫Ê≠£Â∏∏‰∏çÊÄé‰πàÈáçÁöÑËØ¥ÔºåÂ•ΩÂêßÊàëÁªùÂØπ‰∏ç‰ºöÊâøËÆ§ÂØπÈò≥ÂÖâÁæéÂ∞ëÂπ¥ÁöÑÈÑôËßÜÁöÑ)
+26000ÊòØÂêóÔºüÁúüÂèó‰∏ç‰∫Ü‰Ω†‰ª¨Â•≥ÁîüÔºåËµ∞ÂêßÔºå‰∏Ä‰ºöÊàë‰∏ÄÂÆöË¶ÅÂ§öÂêÉÂá†‰∏™Ê±âÂ†°
+10000(ÊñëÈ©≥ÁöÑÊ†ëÂΩ±‰∏ãÔºåÊä¨Ëµ∑Â§¥ÁúãÂêëÂ≠êËΩ©ÔºåËôΩÁÑ∂ËÑ∏‰∏äÊª°ÊòØÊ±óÊ∞¥Ôºå‰ΩÜÈÇ£ÁÅøÁÉÇÁöÑÁ¨ëÂÆπÂ∞±Â¶ÇÊöñÊöñÁöÑÈò≥ÂÖâÂ°ûÊª°‰∫ÜÊàëÁöÑËÉ∏ËÜõ)
+10000(ÁúüÊòØ‰∏Ä‰∏™Ê∏©ÊüîÁöÑ‰∫∫Âïä~)
+12000ÈÇ£‰∏™ÔºåÂ≠êËΩ©Â≠¶ÈïøÔºåÂèØ‰ª•ÁªôÊàë‰Ω†ÁöÑÊâãÊú∫Âè∑ÂêóÔºüÊàëÊÉ≥„ÄÇ„ÄÇ„ÄÇ„ÄÇ‰ª•ÂêéÈÅáÂà∞‰ªÄ‰πàÈóÆÈ¢ò‰πüÊù•ÈóÆ‰Ω†
+25507Ê≤°ÈóÆÈ¢òÂïäÔºåÂ≠¶Â¶πÁöÑËØ∑Ê±Ç‰ªéÊù•‰∏ç‰ºöÊãíÁªùÔºÅÂø´Âéª‰Ω†ÁöÑÂÆøËàçÁúãÁúãÂêßÔºåÂ∫îËØ•ÊòØ21ËàçÔºåËøôÊòØÊ±üÂÆâÊ†°Âå∫ÊúÄÂÅèÂÉªÁöÑÂÆøËàç‰∫Ü
+00010
diff --git a/Resources/txt/Script1 b/Resources/txt/Script1
new file mode 100644
index 0000000..d14578c
--- /dev/null
+++ b/Resources/txt/Script1
@@ -0,0 +1,20 @@
+16301ÂìáÔºåËøôÈáåÂ∞±ÊòØÊàëË¶ÅÁîüÊ¥ªÂõõÂπ¥ÁöÑÂú∞Êñπ‰∫ÜÂêó
+10000Â±ÖÁÑ∂ÊúâÁ©∫Ë∞ÉÔºåÈ£éÊâáÔºåËøòÊúâÊØè‰∫∫‰∏Ä‰∏™ÁöÑË°£ÊüúÂíå‰∏äÂ∫ä‰∏ãÊ°åÔºÅÔºÅÁúüÊ£íÂëê
+10000(ÂÆ§Âèã‰ª¨ÈÉΩÂ∑≤ÁªèÂà∞‰∫ÜÂë¢ÔºåÊàëÊûúÁÑ∂ÂèàÊòØÊúÄÂêé‰∏Ä‰∏™„ÄÇ„ÄÇ„ÄÇ)
+10000(Â•áÊÄ™‰∫ÜÔºåÊàë‰∏∫‰ªÄ‰πàË¶ÅËØ¥„ÄÇ„ÄÇ„ÄÇ„ÄÇ‚ÄòÂèà‚ÄôÔºü)
+15000Â§ßÂÆ∂Â•ΩÂïä~ÊàëÊòØÁ©ÜÂ©ßÔºå‰ª•ÂêéËØ∑Â§öÂ§öÂÖ≥ÁÖßÂï¶ÔºÅÔºÅ
+5440AÔºàÊ∏∏ÊàèËΩ∞È∏£Â£∞ÔºâÊ≥ïÂ∏àÔºÅÈîÅÂÆöÈÇ£‰∏™‰∫öÈ©¨ÈÄäÔºÅÔºÅÁâßÂ∏àÂø´Êù•ÁªôÊàëÂä†Á∫¢ÂïäÔºÅÔºÅÔºÅÔºÅ
+11400ÔºÅÔºÅÔºÅÔºÅ
+61400Áúã‰Ω†Âç∞Â†ÇÂèëÈªëÔºåÊúÄËøëÂèØËÉΩ‰ºöÈÅáÂà∞‰ªÄ‰πà‰∏çÂ•ΩÁöÑ‰∏úË•øÂïä„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+10400Âí≥Âí≥„ÄÇ„ÄÇ„ÄÇÊÄªËßâÂæó‰ªäÂêéÁöÑÁîüÊ¥ªÂéãÂäõÂ•ΩÂ§ß„ÄÇ„ÄÇ„ÄÇ
+71400ÂïäÔºå‰Ω†Â∞±ÊòØÁ©ÜÂ©ßÂïä
+10000ÂëúÂëúÔºåÁªà‰∫éÊúâ‰∫∫ÁêÜÊàë‰∫ÜÔºåÊõôÂÖâÂïäÊõôÂÖâÔºÅÔºÅ
+15000ÊòØÁöÑÊòØÁöÑÔºÅÔºÅ
+76000Êàë‰∏ÄÁõ¥Âú®ÊÄùËÄÉÂïäÔºå‰∏∫‰ªÄ‰πà‰Ω†ÁöÑÂêçÂ≠óÊÑüËßâÂíåÊàë‰ª¨ÁöÑ‰∏çÊòØ‰∏Ä‰∏™Á≥ªÂàóÁöÑÂë¢Ôºü
+1000D= =ÂÆåÂÖ®‰∏çÊòØÊ≠£Â∏∏‰∫∫ÁöÑÂÖ≥Ê≥®ÁÇπÂ•ΩÂêóÔºÅÈöæÈÅìËøô‰∏™ÂØùÂÆ§Âè™ÊúâÊàë‰∏çÊ≠£Â∏∏„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+10000Ê≥™„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+71000ËØùËØ¥Á©ÜÂ©ßÂêõÔºå‰Ω†ÂàöÊù•ËøòÊ≤°Êúâ‰ΩìÊ£ÄÂêßÔºåÂø´ÁÇπÂéªÊ†°ÂåªÈô¢ÂêßÔºå‰∏çÁÑ∂‰∫∫‰∏ÄÂ§öÊúâÂèØËÉΩÂæàÈ∫ªÁÉ¶Âì¶ÔºÅ
+11000ÁúüÁöÑÂêóÔºüÈÇ£‰πàÊÄé‰πàÂéªÂë¢Ôºü
+71000ÈÇ£Âπ≤ËÑÜÊàëÂ∏¶‰Ω†ÂéªÂêßÔºÅ
+16507ÁúüÁöÑÂêóÔºü‰Ω†ÁúüÊòØÂ§™Â•Ω‰∫ÜËÄ∂ÔºÅÔºÅÔºÅÔºÅ
+00010
\ No newline at end of file
diff --git a/Resources/txt/Script2 b/Resources/txt/Script2
new file mode 100644
index 0000000..0c8df25
--- /dev/null
+++ b/Resources/txt/Script2
@@ -0,0 +1,16 @@
+14306ÂïäÔºå‰∫∫Â∑≤ÁªèÂæàÂ§ö‰∫ÜÂïä„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+12000Ê≤°Êúâ‰ªÄ‰πàËÉΩÂáªÂÄíÊàëÔºÅ
+12000‰∏ãÈù¢Â∞±ÊòØ‰ΩìÊ£ÄÂ§ß‰ΩúÊàòÔºÅÔºÅÔºÅ
+12000fightingÔºÅÔºÅÔºÅ
+11000‰ªÄ‰πàÂòõÔºåÁªìÊûúËøò‰∏çÊòØÂì™ÈáåÈÉΩË¶ÅÊéíÈòü„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+73400Áü•Ë∂≥ÂêßÔºåÂ∞ëÂ•≥ÔºÅÊàëÊò®Â§©Êù•ÁöÑÊó∂ÂÄôÈòü‰ºçÂèØÊòØÊúâ‰∫åÂçÅÂ§öÁ±≥ÈïøÔºÅ‰∏çÊÑßÊòØÂè∑Áß∞ÊúâÂÖ≠‰∏áÂ§öÂ§ßÂ≠¶ÁîüÁöÑÂ§ßÂ≠¶ÔºÅ
+15000È¢ù„ÄÇ„ÄÇ„ÄÇ„ÄÇÊàëÂèØ‰ª•ÂêêÊßΩ‰πà„ÄÇ„ÄÇ
+71000‰∏çÂèØ‰ª•Âë¶ÔºåÂ∞ëÂ•≥ÔºåËÆ©ÂßêÂßêÂçñ‰Ω†‰∏™‰πñÔºåÂí±Â∑ùÂ§ßÁöÑËëóÂêçÊ†°ÂèãËøòÁúü‰∏çÂ∞ëÔºå‰ªÄ‰πàÈÉ≠Ê≤´Ëã•„ÄÅÂ∑¥Èáë„ÄÅÂçû‰πãÁê≥„ÄÅÈôàÂØÖÊÅ™„ÄÅÂÜØÊ±âÈ™•„ÄÅÂÜØÂèãÂÖ∞ÔºåËøô‰∫õÂ§ßÊñáË±™ÈÉΩÊòØÊù•Ëá™Â∑ùÂ§ßÁöÑÂì¶ÔºÅ
+13000Âí¶ÔºüÁúüÁöÑÂêóÔºüÈÇ£‰∏™ÈôàÂØÖÊÅ™ÂÖàÁîü‰∏çÊòØÂè∑Áß∞Ê∏ÖÂçéÁ¨¨‰∏ÄÊâçÂ≠êÂêóÔºüÁ´üÁÑ∂ËøòÊòØÊàëÂ∑ùÂ§ßÁöÑÔºüËøòÊúâÂçû‰πãÁê≥Ôºå‰ªñÂÜôÁöÑËØóÊàë‰ΩúÊñáÂºïÁî®ËøáÊó†Êï∞ÈÅçÂïäÂïäÂïäÂïäÔºÅ
+71000Ë°®Â§™ÊøÄÂä®Âïä
+13000Âí¶ÔºüÈÇ£ÊòØ‰ªÄ‰πàÔºü   
+00500„ÄÇ„ÄÇ„ÄÇËØ∑ÊÄÄÂ≠ïÊàñËÄÖÂçäÂπ¥ÂÜÖËÆ°ÂàíË¶ÅÊÄÄÂ≠ïÁöÑÂêåÂ≠¶‰∏çË¶ÅÂèÇÂä†XÂÖâÊ£ÄÊü•È°πÁõÆÔºÅÔºÅ„ÄÇ„ÄÇ„ÄÇ
+10500Â•ΩÂÉèÂèëÁé∞‰∫Ü‰∏çÂæó‰∫ÜÁöÑ‰∫ãÊÉÖÂë¢„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+76000„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇÂà∞È•≠ÁÇπ‰∫ÜÔºåÊàëÂÖàÂéªÈ£üÂ†ÇÂêÉÈ•≠‰∫ÜÂïäÔºå‰Ω†ËøôËæπÂÆå‰∫ã‰∫ÜÂ∞±ÂéªÈ£üÂ†ÇÊâæÊàëÂòõÔºÅ
+11507ÂñÇÂñÇÔºÅÔºÅÂà´‰∏¢‰∏ãÊàëÂïäÊ∑∑ËõãÔºÅ
+00010
diff --git a/Resources/txt/Script3 b/Resources/txt/Script3
new file mode 100644
index 0000000..b13b932
--- /dev/null
+++ b/Resources/txt/Script3
@@ -0,0 +1,8 @@
+10302ËÇöÂ≠êÂ•ΩÈ•ø„ÄÇ„ÄÇ„ÄÇ‰∏çË°å‰∫Ü„ÄÇ„ÄÇÂøÖÈ°ªË¶ÅË°•ÂÖÖËÉΩÈáè„ÄÇ„ÄÇ„ÄÇ
+15000Â•áÊÄ™„ÄÇ„ÄÇÊÄé‰πà‰πüÊâæ‰∏çÂà∞CÂêõ„ÄÇ„ÄÇ„ÄÇÂè™Â•ΩËá™Â∑±ÂÖàÂêÉÂÜçËØ¥„ÄÇ„ÄÇ
+10000(‰∏çÁü•ÈÅìËÉΩ‰∏çËÉΩÂú®ËøôÈáåÈÅáËßÅÂ≠êËΩ©Â≠¶ÈïøÂë¢„ÄÇ„ÄÇ„ÄÇ„ÄÇ)
+10000(‰Ωú‰∏∫‰∏Ä‰∏™‰∏•Ë∞®ÁöÑÊ∏∏ÊàèÔºåÊòØ‰∏ç‰ºöËÆæËÆ°Ëøô‰πàÁãóË°ÄÁöÑÂâßÊÉÖÁöÑÔºÅÔºÅ)
+10000Â•ΩÂêßÔºåÈÇ£ÊàëÂè™Â•ΩÁã¨Ëá™‰∏∫È£üÁâ©ËÄåÊàòÊñó‰∫ÜÔºÅ
+15000ËøôÈáåÁöÑÈ•≠ÁúãËµ∑Êù•‰∏çÈîôÂòõ~
+13000Âí¶ÔºüËøôÊòØ‰ªÄ‰πàÔºü
+00117‰Ω†ÂèëÁé∞‰∫ÜÂõõÂ∑ùÂ§ßÂ≠¶ÊúÄÊñ∞ÁâàÊ†°Âè≤ÂÆ£‰º†Âçï1ÔºåËØ∑ÈóÆÊòØÂê¶ÊâìÂºÄÔºü
\ No newline at end of file
diff --git a/Resources/txt/Script4 b/Resources/txt/Script4
new file mode 100644
index 0000000..a160d16
--- /dev/null
+++ b/Resources/txt/Script4
@@ -0,0 +1,25 @@
+10302Â•ΩÈïøÁöÑÊ°•Âïä~~~~‰∏çÁü•ÈÅì‰∏éÂ§öÂ∞ëÂÖ¨ÈáåÂëêÔºÅ
+14000ÂïäÔºÅÈÇ£ÊòØ------
+31400
+10000ÔºàÈÇ£‰øØË∫´ÊúõÂêëÊπñÈù¢ÁöÑÂ∞ëÂπ¥ÔºåÊüîÂíåÁöÑ‰æßËÑ∏‰∏éÊ∞¥ÂÖâÂ§©ÂΩ±ÂÆåÁæéÁöÑËûçÂêàÔºåÂÉèÊòØÂëΩ‰∏≠Ê≥®ÂÆö‰ºöÂèëÁîüÁöÑÂ∞èÊ¶ÇÁéá‰∫ã‰ª∂ÔºåÊàë---ÈÅáËßÅ‰∫Ü‰ªñ„ÄÇ)
+00000Ôºà‰ºº‰πéÊàëÂÅú‰ΩèÁöÑÁõÆÂÖâË¢´‰ªñÂèëÁé∞‰∫ÜÔºå‰ªñÂø´Ê≠•ÂêëÊàëËµ∞Êù•‚Äî‚Äî‚Äî‚ÄîÔºâ
+10000(ÁõÆÂÖâÂøßÈÉÅÁöÑÂ∞ëÂπ¥ÂºÄÂè£ÂêëÊàëÈóÆ‰∫ÜÔºåÊàëÁöÑÂøÉÁ¥ßÂº†ÁöÑÁ†∞Á†∞‰π±Ë∑≥‚Äî‚Äî‚Äî‚Äî)
+33000Êàë‰∏¢Â§±ÁöÑ‰∏úË•ø‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‰Ω†ÊâæÂà∞‰∫ÜÂêóÔºü
+10000(ÂïäÂïäÔºå‰ªÄ‰πàÊÑèÊÄùÂïäÔºüÂÆåÂÖ®Êë∏‰∏çÁùÄÂ§¥ËÑëÂïä„ÄÇ„ÄÇ„ÄÇ)
+36000ÂìàÂìàÔºåÊòØÈ™ó‰Ω†ÁöÑ~ÊòØÂ∞èÂ≠¶Â¶πÂêßÔºüÁúüÊòØÂèØÁà±Âëê„ÄÇ
+10000‰ªÄ‰πàÂòõÔºÅÂ§ßÂ•ΩÁöÑÊ∞îÊ∞õÂÆåÂÖ®Ê≤°Êúâ‰∫ÜÂ•ΩÂêß„ÄÇ„ÄÇ
+36003Â•Ω‰∫ÜÔºå‰Ω†‰∏ÄÂÆö‰∏çÁü•ÈÅìÂÖ≥‰∫éËøô‰∏™ÈïøÊ°•ÁöÑÊïÖ‰∫ãÂêßÔºü
+32000Âπ¥ÂâçÔºåÊúâ‰∏Ä‰∏™Âª∫ÁéØÂ≠¶Èô¢ÁöÑÁî∑ÁîüÔºåÊöóÊÅã‰∏Ä‰∏™Â•≥Áîü„ÄÇ„ÄÇ
+32000ÂΩì‰ªñÈºìËµ∑ÂãáÊ∞îË¶ÅË°®ÁôΩÁöÑÊó∂ÂÄôÔºåÂ•≥ÁîüÂç¥ËΩ¨Âà∞‰∫ÜÂà´ÁöÑÂ≠¶Èô¢„ÄÇ„ÄÇ„ÄÇ
+32000‰∫éÊòØ‰ªñÂè™Â•ΩÊääËøô‰ªΩÊÑüÊÉÖÂüãËóèÂú®ÂøÉÈáå„ÄÇ„ÄÇ„ÄÇ
+32000‰∫åÂçÅÂπ¥ÂêéÔºåÂΩì‰ªñÂõûÂà∞ÊØçÊ†°Ë¢´ËÅòËÆæËÆ°ËøôÊù°ÈïøÊ°•ÁöÑÊó∂ÂÄô‚Äî‚Äî
+32000‰ªñÂ∞±Êää‰∏ÄÂ∞ÅËã±Êñá‰π¶ÂÜôÁöÑÊÉÖ‰π¶Âç∞Âú®Áü≥Á†ñ‰∏äÂàÜË¥¥Âú®‰∫ÜÈïøÊ°•‰∏äÔºå‰ª•Á∫™ÂøµÈÇ£ÊÆµÊó†ÂßãÊó†ÁªàÁöÑÁà±ÊÉÖ„ÄÇ
+11000ÁúüÊòØÈÅóÊÜæÂëê„ÄÇ„ÄÇ„ÄÇ„ÄÇË¶ÅÊòØ‰ªñ‰ª¨ÂΩìÂπ¥ÂèØ‰ª•Âú®‰∏ÄËµ∑Â∞±Â•Ω‰∫Ü„ÄÇ„ÄÇ„ÄÇ
+12000‰∏çËøáÂ≠¶ÈïøÔºåÂèØ‰ª•ÈóÆ‰∏Ä‰∏ã‰Ω†‰∏∫‰ªÄ‰πàË¶ÅÁ´ôÂú®ËøôÈáåÁúãÈ£éÊôØÂë¢Ôºü
+36000Âõ†‰∏∫ÊàëÂñúÊ¨¢ÁúãÁùÄÈ£éÊôØÂéªÊÉ≥Ë±°Âú®ËøôÈáåÂèëÁîüÁöÑÊïÖ‰∫ãÂïäÔºå
+32000Â∞±Âú®ÂàöÊâçÔºåÊàëÁ´ôÂú®Ê°•‰∏äÔºåÂ∞±‰ªø‰ΩõÁúãËßÅ‰∫ÜÈÇ£‰∏∫ËÆæËÆ°Â∏àÊ†°ÂèãÂíå‰ªñÂøÉÁà±ÁöÑÂ•≥ÁîüÂú®ÊÉÖ‰π¶‰∏äÁõ∏Êã•Âïä„ÄÇ„ÄÇ
+12000Â§ö‰πàÁæéÂ•ΩÁöÑÁîªÈù¢„ÄÇ„ÄÇ„ÄÇ„ÄÇÈÇ£‰πàÔºåÂ∞ëÊù∞Â≠¶ÈïøÔºåÂèØ‰ª•ÂëäËØâÊàëÂ∑ùÂ§ßÂÖ∂‰ªñÁöÑÊïÖ‰∫ãÂêóÔºü
+36000ÂëµÂëµÔºåËøô‰∏™Â∞±Ë¶ÅÈù†‰Ω†Ëá™Â∑±Âú®Ê†°Âõ≠ÈáåÂéªÂèëÊéò‰∫ÜÔºåÊèêÁ§∫‰∏Ä‰∏ãÔºåÂú®ÊòéËøúÊπñÂæàÊúâÂèØËÉΩÊúâÊÑèÊÉ≥‰∏çÂà∞ÁöÑÊî∂Ëé∑Âì¶~
+34000ËøôÊòØÊàëÁöÑÂêçÁâáÔºåÂ¶ÇÊûúÂèëÁé∞‰∫ÜÁæéÂ•ΩÁöÑÊïÖ‰∫ãËÆ∞Âæó‰∏éÊàëÂàÜ‰∫´Âì¶~See-ya~
+00507ÔºàÂëäÂà´‰∫ÜÁúºÁ•ûÂøßÈÉÅËÄåÂèàÁâπÂà´Êµ™Êº´ÁöÑÂ∞ëÂπ¥ÔºåÊàëÂèàÁªßÁª≠ÂºÄÂßã‰∫ÜÊé¢ÂØªÂ∑ùÂ§ßÊ†°Âõ≠ÁöÑÊóÖÈÄî„ÄÇ„ÄÇ„ÄÇ„ÄÇÂéªÂõæ‰π¶È¶ÜËΩ¨ËΩ¨Â•Ω‰∫ÜÔºâ
+00010
\ No newline at end of file
diff --git a/Resources/txt/Script5 b/Resources/txt/Script5
new file mode 100644
index 0000000..49a715f
--- /dev/null
+++ b/Resources/txt/Script5
@@ -0,0 +1,4 @@
+13306ËøôÂ∞±ÊòØÂ∑ùÂ§ßÁöÑÂõæ‰π¶È¶Ü‰∫ÜÂïäÔºåÁúüÊòØÂ§ßÊ∞î~
+1500FÂ§ßÂÆ∂ÈÉΩÂæàÂÆâÈùôÁöÑÂ≠¶‰π†Âë¢~
+14307ÊóÅËæπÁöÑÊòéËøúÊπñÂ•ΩÊºÇ‰∫ÆÔºåÂéªÈÇ£ËæπÁúãÁúãÂêß
+00010
diff --git a/Resources/txt/Script6 b/Resources/txt/Script6
new file mode 100644
index 0000000..8f33e74
--- /dev/null
+++ b/Resources/txt/Script6
@@ -0,0 +1,19 @@
+10300Áªà‰∫éÊù•Âà∞‰∫ÜÂ∞ëÊù∞Â≠¶ÈïøÊâÄËØ¥ÁöÑÊπñËæπÔºåÁúãÁùÄÁßÄÁæéÁöÑÊôØËâ≤ÔºåÂøÉÊÉÖ‰πüÂπ≥Èùô‰∫Ü‰∏ãÊù•„ÄÇ
+11005ÂïäÔºÅÈÇ£ÊòØ‰ªÄ‰πàÔºÅ
+11000ÊòØ‰ªÄ‰πà‰∫∫ÔºüÔºÅÔºÅ
+92400‰∏çË¶ÅÁ¥ßÂº†ÔºåÊàëÂè´Ê±üÁ´πÁ≠†Ôºå‰Ω†Â∫îËØ•Êõ¥Âä†ÁÜüÊÇâÊàëÁöÑ‰ª£Áß∞‚ÄôÊ±üÂßêÂêßÔºÅ‚Äò
+14000ÂïäÔºÅÊòØËëóÂêçÁöÑÈù©ÂëΩÂ•≥Ëã±ÈõÑÊ±üÂßêÂïäÔºÅÔºÅ
+10000(ÁúãÁùÄÈù¢ÂâçÁöÑÊ±üÂßêÈú≤Âá∫Ê∏©Â©âÁöÑÁ¨ëÂÆπÔºåÂÆûÂú®Êó†Ê≥ïÊÉ≥Ë±°Â∞±ÊòØËøô‰∏™‰∫ëÊ∑°È£éËΩªÁöÑÂ•≥Â≠êÂú®Ê∏£ÊªìÊ¥ûÁªèÂéÜ‰∫Ü‰∏áËà¨Â±àËæ±‰∏éÊäòÈ∫ΩÔºåÊå∫Ëøá‰∫ÜÁîµÂàëÔºåËÄÅËôéÊ¥ûÂíåÁ´πÁ≠æÈíâÊâãÊåáÁöÑÁ≠âÁ≠âÈÖ∑Âàë‰πãÂêé‰æùÁÑ∂ÂùöË¥û‰∏çÂ±àÁöÑÊ†∑Â≠êÂïä„ÄÇ„ÄÇ„ÄÇ)
+91000‰∏çÁî®ËøôÊ†∑ÁúãÁùÄÊàëÔºåËØ¥Ëµ∑Êù•ÊàëËøòÊòØ‰Ω†ÂÜúÂ≠¶Èô¢ÁöÑÂ≠¶ÂßêÂë¢„ÄÇ„ÄÇ
+13010ÈÇ£‰πàÊÇ®‰∏∫‰ªÄ‰πà‰ºöÂá∫Áé∞Âú®ËøôÈáåÂë¢Ôºü
+00000Ê±üÂßêÁúãÂêëÂπ≥ÈùôÁöÑÊπñÈù¢ÔºåÈú≤Âá∫ÊÄÄÂøµÁöÑÁ•ûËâ≤
+94000Âõ†‰∏∫Âú®Â∑ùÂ§ßÁöÑËøôÊÆµÊó∂ÂÖâÊòØ29Âπ¥ÁîüÂëΩ‰∏≠ÊúÄÁæéÂ•ΩÁöÑÊó∂ÂÖâÂïä„ÄÇ„ÄÇ„ÄÇ
+95000Ê≤°ÊúâÊïå‰∫∫ÔºåÊ≤°Êúâ‰ªªÂä°ÔºåÂ∞±Âú®ËøôÈáåÔºåÊàëÈÅáËßÅ‰∫ÜÂíèÊ¢ßÂì•ÔºåËôΩÁÑ∂ÂºÄÂßãÊòØÁªÑÁªáÂÆâÊéíÊàë‰ª¨ÊâÆ‰ΩúÂ§´Â¶ªÔºå‰ΩÜÊòØÊàë‰ª¨‰πãÈó¥ÁöÑÁõ∏Â§ÑÊØèÂàÜÊØèÁßíÈÉΩËÆ©‰∫∫ÊÑüÂà∞ÂæàÂÆâÂøÉÂæàÊ∏©ÊöñÔºåÂ∞±ÊòØËøôÊÆµÂõûÂøÜÊîØÊåÅÊàëÊíëËøáÊ∏£ÊªìÊ¥ûÊïå‰∫∫ÁöÑÈÖ∑Âàë„ÄÇ„ÄÇ„ÄÇ
+14000ÈÇ£Êó∂ÂÄôÁöÑÂ∑ùÂ§ßÊòØ‰ªÄ‰πàÊ†∑Â≠êÁöÑÂë¢Ôºü
+91000ÊàëËÆ∞ÂæóÈÇ£Êó∂ÂÄôÁöÑÂõΩÁ´ãÂ∑ùÂ§ßÔºåÊúâÊñáÂ≠¶Èô¢ÔºåÂ§ñÂõΩÊñáÂ≠¶Èô¢ÔºåÊ≥ïÊîøÂ≠¶Èô¢ÔºåÂ∑•ÁßëÂ≠¶Èô¢ÂíåÂÜúÁßëÂ≠¶Èô¢‰∫îÂ§ßÊ†°ÔºåÂçéË•øÈÇ£Êó∂ÂÄôËøòÊòØÊïô‰ºöÂ≠¶Ê†°Âë¢ÔºåÊàë‰ª¨ÁöÑÊ†°ÈïøËøòÊòØÂº†ÊæúËÄÅÂÖàÁîü„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+11000Â±ÖÁÑ∂ÊòØËøôÊ†∑Âë¢„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+92000ÊàëÁé∞Âú®Êù•Âà∞Â∞ÜÊåâÊñ∞Ê†°Âå∫ÔºåÁúãÂà∞Ëøô‰πàÂ§ö‰∏çÂêåÂ≠¶Èô¢‰∏çÂêå‰∏ì‰∏öÁöÑÂ≠¶ÁîüËøòÂêì‰∫Ü‰∏ÄË∑≥Âë¢ÔºÅÂ∑ùÂ§ßÁúüÊòØÂèëÂ±ïÁöÑË∂äÊù•Ë∂äÂ•Ω‰∫ÜÂïä„ÄÇ„ÄÇ
+10000ÊàëËøòÁúüÊòØËõÆÂπ∏ËøêÁöÑ„ÄÇ„ÄÇËÉΩÁîüÂú®Ëøô‰∏™ÁπÅÂçéÂÆâÈÄ∏ÁöÑÊó∂‰ª£„ÄÇ„ÄÇ„ÄÇ
+93000Â•Ω‰∫ÜÔºåÊàë‰πüËØ•Á¶ªÂºÄ‰∫Ü„ÄÇÂ∞èÂ≠¶Â¶πÔºåË¶ÅÂä™ÂäõÂ≠¶‰π†Âì¶ÔºÅÊàëÂéüÊù•ÂèØÊòØÊàë‰ª¨‰∏ì‰∏öÁöÑÁ¨¨‰∏ÄÂêçÂë¢„ÄÇ„ÄÇ„ÄÇ
+10507ÊîæÂøÉÂêßÔºåÊ±üÂßêÔºåÊàë‰∏ÄÂÆö‰∏ç‰ºöÂøòËÆ∞‰Ω†ÁöÑÊúüÊúõÔºÅÈÇ£‰πà‰∏ãÈù¢ÂéªÈÇ£ÈáåÈÄõÈÄõÂë¢ÔºüÂàöÂàöË∑ØËøá‰∏Ä‰∏™Âè´‰∫åÂü∫Ê•ºÁöÑÂú∞ÊñπÔºåÂéªÈáåÈù¢ÁúãÁúãÂêß
+00010
\ No newline at end of file
diff --git a/Resources/txt/Script7 b/Resources/txt/Script7
new file mode 100644
index 0000000..2e73639
--- /dev/null
+++ b/Resources/txt/Script7
@@ -0,0 +1,40 @@
+1030FËøôÈáåÂ∞±ÊòØ‰∫åÂü∫Ê•º‰∫ÜÂêßÔºåÂê¨Â≠¶ÈïøËØ¥ÊòØÂÅöÂèØÊÅ∂ÁöÑÁâ©ÁêÜÂÆûÈ™åÂíåÂèØÊÅ∂ÁöÑÁîµÂ≠êÊäÄÊúØÂÆûÈ™åÁöÑÂú∞ÊñπÂëÄ„ÄÇ„ÄÇ„ÄÇ
+12005ÔºÅÔºÅÔºÅËøôÊòéÊòéÊòØÈ¨ºÂ±ãÂ•Ω‰∏çÂ•ΩÔºÅ
+10000ËôΩÁÑ∂‰∏çÂÅúÂú∞Ëá™ÊàëÂÇ¨Áú†Ë¶ÅÊ∑°ÂÆöÔºåÂèØÊòØËÑëÊµ∑‰∏≠ËøòÊòØÊÉÖ‰∏çËá™Á¶ÅÁöÑÂõûÂìçËµ∑‚Äî‚Äî‚Äî‚Äî
+65400Âê¨ËØ¥ËøôÊ†°Âõ≠ÈáåÊúâÊ∏∏Ëç°ÁöÑÂÜ§È≠ÇÂì¶~
+16000Ëøô‰πàËØ¥ÁöÑËØùÂè™Ë¶ÅÊôö‰∏ä‰∏çÂá∫Èó®Â∞±Ê≤°‰∫ã‰∫ÜÂêßÔºü
+64000‰∏çÊòØËøôÊ†∑ÁöÑÂë¶~Âê¨ËØ¥Êúâ‰∫õÂéâÂÆ≥ÁöÑÈ¨ºÈ≠ÇÂèØ‰ª•Âú®ÁôΩÂ§©Âá∫Ê≤°ÊäΩÂèñÊ¥ª‰∫∫ÁöÑÁ≤æÊ∞îÂë¢„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+16400ÔºÅÔºÅÔºÅÔºÅ
+00000ÔºàÂ∞±Âú®ËøôÊó∂ÔºåÊú¨Êù•ÂçÅÂàÜÂÆÅÈùôÁöÑËµ∞ÂªäÂõûÂìçËµ∑‰∏Ä‰∏≤ÁºìÊÖ¢ÁöÑËÑöÊ≠•Â£∞Ôºâ
+00000ÔºàÊòØÂºÄÂÖ≥‰∏äÁöÑÂ£∞Èü≥ÔºåÁ¥ßÊé•ÁùÄÁÅØÂºÄ‰∫ÜÔºåÂá∫Áé∞‰∫Ü‰∏Ä‰∏™È´òÂ§ßÁöÑÁî∑ÁîüÁ´ôÂú®ÊàëÈù¢ÂâçÔºâ
+44400Ëøô‰ΩçÂêåÂ≠¶Ôºå‰Ω†ËøòÂ•ΩÂêßÔºü
+16000È¢ù„ÄÇ„ÄÇ„ÄÇ„ÄÇ‰∏çË¶ÅÊ≤°‰∫ãË£ÖÈ¨ºÂêì‰∫∫ÂïäÔºÅ‰Ω†Â•ΩÔºåÊàëÊòØËÆ°ÁÆóÊú∫Â≠¶Èô¢ÁöÑÊñ∞ÁîüXX~
+46000ÂëµÂëµ„ÄÇ
+16000„ÄÇ„ÄÇ„ÄÇÂëµÂëµ„ÄÇ
+10000(‰∏çË°åÂïäÔºå‰Ω†‰∏ÄÂÆöË¶ÅËØ¥ÁÇπ‰ªÄ‰πàÂïä‰∏çÁÑ∂Â§™Â∞¥Â∞¨‰∫Ü„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ)
+13000ÈÇ£‰∏™ÔºåËØ∑ÈóÆÊàë‰ª¨Êñ∞ÁîüÁöÑËæÖÂØºÂëòËÄÅÂ∏àÂäûÂÖ¨ÂÆ§Âú®Âì™ÈáåÂëÄÔºåÊàëÊÉ≥Âú®ÂºÄÂ≠¶ÂâçÂéªÊãúËÆø‰ªñ„ÄÇ„ÄÇ„ÄÇ
+41000ÂëµÂëµÔºåËøôÈáåÂú∞ÂΩ¢ÊØîËæÉÂ§çÊùÇÔºåÊàëËÑëÂ≠êÊØîËæÉÁ¨®ÔºåÂëµÂëµÔºåÂè™Ëµ∞ËøáÂá†Ê¨°ÊâÄ‰ª•Âè™Â•ΩÂ∏¶‰Ω†ÂéªËØïËØï‰∫Ü„ÄÇ
+10000(ÁúãÁùÄË∫´‰æßÈ´òÂ§ßËÄåÊ≤âÈªòÁöÑË∫´ÂΩ±ÔºåËôΩÁÑ∂ÊúâÁÇπÁ¨®Á¨®ÁöÑÔºå‰ΩÜÊòØ‰∏çÁü•ÈÅì‰∏∫‰ªÄ‰πàÊàëÁöÑÂøÉ‰∏≠ÂÖÖÊª°‰∫ÜÂÆâËØ¶ÁöÑÊÑüËßâ„ÄÇËøôÂÆ∂‰ºôÔºåÂÇªÂÇªÁöÑ‰πüÂæàÂèØÁà±ÂëÄ~)
+15000Âïä~~ÂéÜÂ∞ΩÂçÉËæõ‰∏áËã¶Áªà‰∫éÊâæÂà∞Âï¶ÔºÅÔºÅ
+47000ÂëµÂëµ„ÄÇ
+16000ÁúüÊòØË∞¢Ë∞¢‰Ω†‰∫ÜÔºÅÂØπ‰∫ÜÔºå‰Ω†Â∏ÆÊàëËøô‰πàÂ§ßÁöÑÂøôÊàëËøò‰∏çÁü•Âà∞‰Ω†ÁöÑÂêçÂ≠óÂë¢„ÄÇ„ÄÇ„ÄÇ
+46000ÊàëÂè´Âª∫ÂõΩ„ÄÇ
+1000DÊàëËØ•ËØ¥‰ªÄ‰πàÔºåËøôÂêçÂ≠óËÆ©ÊàëÂàöÊâçÁöÑÂøÉÁêÜÊ¥ªÂä®ÊúâÁßçÂ§ßÊµ∑ÁöÑÊÑüËßâËøòÊòØËøôÂêçÂ≠óÂíå‰ªñÊú¨‰∫∫Á´üÁÑ∂Âá∫‰πéÊÑèÊñôÁöÑÁõ∏ÈÖçÂë¢Ôºü
+15500ÂëêÔºÅÂª∫„ÄÇ„ÄÇ„ÄÇÂõΩ„ÄÇÊàëÂÖàËøõÂéªÂï¶Ôºå‰∏ãÊ¨°ÂÜçË∞¢‰Ω†ÂñΩ~
+00000
+15300ÂïäÔºåÂØºÂëòËÄÅÂ∏àÁúüÊòØ‰∏Ä‰∏™Ê∏©ÊüîÁöÑÂ•Ω‰∫∫Âëê~ÁúüÊòØLuckyÔºÅÔºÅ
+14000Âª∫ÂõΩÔºü‰Ω†‰∏∫‰ªÄ‰πàËøòÂú®ËøôÔºü‰∏ç‰ºöÊòØÂú®Á≠âÊàëÂêßÔºÅÔºÅÔºÅ
+41400Âì¶ÔºåÂõ†‰∏∫ÊàëÊÄïXX‰Ω†Ëá™Â∑±Ëµ∞‰ºöËø∑Ë∑Ø„ÄÇÊâÄ‰ª•ÊàëÂ∞±ÂäûÂÆå‰∫ãÁ≠â‰Ω†Âá∫Êù•‰∏ÄËµ∑Ëµ∞Â•Ω‰∫Ü
+10000(„ÄÇ„ÄÇ„ÄÇ„ÄÇÊàëÁúãËµ∑Êù•ÂÉèÊòØÁôæÂàÜÁôæËø∑Ë∑ØË¥ßÂêóÔºü„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ‰∏çËøáËøòÁúüÊòØÊúâÁÇπÊÑüÂä®Âë¢„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ)
+16000ÂïäÔºåËôΩÁÑ∂ÊÑüËßâÂ∫îËØ•Ê≤°‰ªÄ‰πà‰∫ãÔºåËøòÊòØË∞¢Ë∞¢‰Ω†‰∫Ü„ÄÇ
+13000‰∏çËøáÂª∫ÂõΩÂïäÔºåËøôÈáåÁúüÁöÑ‰∏ç‰ºöÈÅáÂà∞ÈáéÁîüÁöÑÂ±ÖÈáåÂ§´‰∫∫‰∏ÄÁ±ªÁöÑBOSSÂêßÔºü
+44000‰Ω†Âú®ÊÉ≥‰ªÄ‰πàÂïä„ÄÇ„ÄÇ„ÄÇËøôÈáåÂ∞±Âè™ÊúâÁâ©ÁêÜÂô®ÊùêÂíåÂêÑÁßçÁîµËÑëÂïäÔºå‰Ω†ÁúüÂ∫îËØ•ÂéªÁúãÁúãÂ≠¶Ê†°ÈÇ£‰∫õÊñ∞‰π∞ÁöÑËÅîÊÉ≥‰∏Ä‰ΩìÊú∫ÂïäÔºåÁúüÁöÑÂæàÈÖ∑Âì¶„ÄÇ„ÄÇ„ÄÇ
+10000(Ê≤üÈÄöÊúâÈöúÁ¢ç‰∫Ü„ÄÇ„ÄÇ„ÄÇ)
+15000ÊÄª‰πãÔºå‰ªäÂ§©ÁúüÊòØÂçÅÂàÜÊÑüË∞¢ÔºÅ
+46000ÂïäÔºåÊ≤°ÊúâÂÖ≥Á≥ªÁöÑÔºåÂèçÊ≠£Êàë‰πüÊ≤°‰ªÄ‰πà‰∫ãÔºåËøôÊòØÊàëÁöÑÊâãÊú∫Âè∑Á†ÅÔºå‰ª•ÂêéÂ¶ÇÊûúËø∑Ë∑ØÁöÑËØùËøòÂèØ‰ª•ÊâìÁªôÊàëÁöÑ„ÄÇÂÜçËßÅ„ÄÇ
+00400
+10000Âπ≤ÂòõÈó™ÈÇ£‰πàÂø´ÔºåÁúüÊòØÁöÑ„ÄÇ„ÄÇ„ÄÇ„ÄÇ‰∏çËøáËøòÁúüÊòØ‰∏™Â•Ω‰∫∫Âëê
+00000ÔºàÊâãÊú∫ÈìÉÂ£∞Ôºâ
+00000ÔºàÁîµËØùÂΩïÈü≥ÔºöÂñÇÔºåÂºÄÂ≠¶‰ª™ÂºèÈ©¨‰∏äÂ∞±Ë¶ÅÂºÄÂßã‰∫ÜÔºå‰Ω†ÊÄé‰πàËøòÊ≤°Âà∞ÂëêÔºüÔºüÔºüÔºâ
+11307Á≥ü‰∫ÜÔºÅÔºÅÔºÅÂÖâÈ°æÁùÄÂú®Ê†°Âõ≠ÈáåÁûéÈÄõÔºåÈÉΩÂøò‰∫ÜË¶ÅÂéª‰ΩìËÇ≤È¶ÜÂèÇÂä†‰ª™ÂºèÁöÑ‰∫ã‰∫ÜÔºÅÔºÅ
+00010
\ No newline at end of file
diff --git a/Resources/txt/Script8 b/Resources/txt/Script8
new file mode 100644
index 0000000..850555b
--- /dev/null
+++ b/Resources/txt/Script8
@@ -0,0 +1,16 @@
+10300Ëøô‰πàÂ§ö‰∫∫ÂïäÔºåË¶ÅÂùêÂì™ÈáåÂëêÔºü
+51400ÂñÇÔºÅ
+63000‰Ω†ÂéªÂì™Âï¶ÔºüÊàë‰ª¨ÂØùÂÆ§ÈÉΩÂà∞ÈΩê‰∫ÜÔºåÂ∞±Â∑Æ‰Ω†Âï¶
+11000ÂïäÔºåÊàëÂ±ÖÁÑ∂ÊòØÊúÄÂêé‰∏Ä‰∏™„ÄÇ„ÄÇ„ÄÇ„ÄÇÂ•Ω‰∏¢ËÑ∏„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+16000ÈÇ£‰∏™„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇÊä±Ê≠âÂõ†‰∏∫ÊàëÂú®Ê†°Âõ≠ÈáåÈÄõÂæóÂ§™highÂ∞±Êôö‰∫Ü„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+65000ÁÆóÂï¶ÁÆóÂï¶ÔºåËøôÊ¨°ÂÖàÂéüË∞Ö‰Ω†‰∫ÜÔºåÁé∞Âú®ÊòØÂ≠¶Áîü‰ª£Ë°®ÂèëË®ÄÔºå‰Ω†ÂÖàÂ∏ÆÂøôÂê¨ÁùÄÔºåÊàëÁé©‰ºöÊâãÊú∫ÂÖà~
+00000Â≠¶Áîü‰ª£Ë°®Ôºö„ÄÇ„ÄÇ„ÄÇ„ÄÇÂæàÊó©‰πãÂâçÔºåÊàëÂ∞±ÂçÅÂàÜ‰ª∞ÊÖïÂ∑ùÂ§ßÔºåÂõ†‰∏∫ËøôÈáåÊõæÁªèÂüπÂÖªÂá∫ËÆ∏Â§ö‰ºòÁßÄÁöÑÊ†°ÂèãÔºåÊØîÂ¶ÇÈÉ≠Ê≤´Ëã•ÔºåÂ∑¥ÈáëÔºåÂΩ≠ÂíèÊ¢ßÔºåÊú±Âæ∑ÔºåÊ±üÂßê„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+14000Ëøô‰∏™ÂΩ≠ÂíèÊ¢ßÊòØ‰ªÄ‰πà‰∫∫ÂëêÔºüÊÑüËßâÂêçÂ≠óÂæàÊúâÈüµÂë≥ÈÇ£„ÄÇ„ÄÇ
+55000Âì¶ÔºåÂ•ΩÂÉèÊòØÈù©ÂëΩÁÉàÂ£´ÁöÑËØ¥Ôºå‰∏çËøáÊúÄÂêéÊ≠ªÁöÑÂæàÊÉ®ÔºåËÑëË¢ãË¢´ÈÇ£‰∫õÂõΩÊ∞ëÂÖöÁ†ç‰∏ãÊù•Á§∫‰ºó‰∏ÄÂë®Âïä„ÄÇ„ÄÇ„ÄÇ
+61000ËøòÊúâÈÇ£‰∏™Ê±üÂßêÂïäÔºåÂê¨ËØ¥ÁîüÂâçÁªèÂéÜ‰∫ÜÂêÑÁßçÊØîÊª°Ê∏ÖÂçÅÂ§ßÈÖ∑ÂàëËøòÂèòÊÄÅÁöÑÊäòÁ£®ÈÇ£ÔºÅÔºÅ
+75000Ôºö„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇÂ•ΩÊÅêÊÄñ„ÄÇ„ÄÇ„ÄÇ
+62000‰∏çËØ¥Ëøô‰∏™‰∫Ü„ÄÇÂìé‰Ω†‰ª¨Áü•ÈÅìÂêóÔºåÈÇ£‰∏™ÊñáÂ≠¶Â∑®Âå†ÈÉ≠Ê≤´Ëã•ÔºåÂª∫ÂõΩ‰πãÂêéËøòÊúâÂõõ‰∏™ËÄÅÂ©ÜÂë¢„ÄÇ„ÄÇÂÖ∂‰∏≠‰∏§‰∏™ËøòÊòØÊó•Êú¨‰∫∫„ÄÇ„ÄÇ„ÄÇ
+77000ÂïßÂïß„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+00000Â≠¶Áîü‰ª£Ë°®ÔºöËÄåÁé∞Âú®ÁöÑÂ∑ùÂ§ßÔºå‰∏ç‰ªÖÊúâ‰∏äÂ∏ÇÂ∏ÇÂÄº4‰∫øÂÖÉÁöÑÂ∑ùÂ§ßÊô∫ËÉúÂÖ¨Âè∏ÔºåËøòÊúâÂÖ∂‰ªñÂêÑÁßçÂõΩÂÆ∂ÈáçÁÇπÁ†îÁ©∂ÊâÄ„ÄÇÊàë‰ª¨ÁöÑÊ†°ÊóóÔºåÈ£û‰∏äËøáÂ§™Á©∫ÔºåÈ©ªË∂≥Âú®ÂçóÊûÅÔºåÊõ¥ÂêëÁùÄÊó†ÈôêÂÖâËæâÁöÑÊú™Êù•ËøõÂèë„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+10500Êº´‰∏çÁªèÂøÉÁöÑÂê¨ÁùÄÂ≠¶Áîü‰ª£Ë°®ÂÖÖÊª°Ê≠£ËÉΩÈáèÁöÑÂèëË®ÄÔºåÂõûÊÉ≥ÁùÄËøô‰∏ÄÂ§©ÈÅáËßÅÁöÑ‰∫∫Âíå‰∫ãÂÑøÔºåÂØπÂ∞ÜÊù•ÁöÑÂ§ßÂ≠¶ÁîüÊ¥ªÂÖÖÊª°‰∫ÜÊúüÂæÖÂëÄ„ÄÇ
+00010
\ No newline at end of file
diff --git a/Resources/txt/Script9 b/Resources/txt/Script9
new file mode 100644
index 0000000..f13a687
--- /dev/null
+++ b/Resources/txt/Script9
@@ -0,0 +1,19 @@
+10300ÔºàÂú®Ê†°Âõ≠ÈÄõ‰∫Ü‰∏ÄÊï¥Â§©ÁöÑÊàëÊúâÁÇπÁñ≤ÊÉ´‰∫ÜÔºåÈÇ£‰πà‰∏ãÈù¢Ë¶ÅÂéªÂì™ÈáåÈÄõÂë¢ÔºüÔºâ
+0000BÔºàÊâãÊú∫Áü≠‰ø°ÈìÉÂ£∞Ôºâ
+10000ÊúâÁü≠‰ø°Êù•‰∫ÜÔºÅ
+00000‚ÄòXXÔºå‰∏äÊ¨°Âíå‰Ω†‰∫§Ë∞àÂçÅÂàÜÊÑâÂø´ÔºåÊàëËßâÂæó‰Ω†ÊòØ‰∏Ä‰∏™ÂçÅÂàÜÂèØÁà±ÁöÑÂ•≥Â≠©ÔºåÊàë‰ª¨‰∫§ÂæÄÂêßÔºÅÊàëÂú®‰∏çÈ´òÂ±±Á≠â‰Ω†ÔºÅÔºÅÔºÅÔºÅ‚Äô
+11000ÔºÅÔºÅÔºÅÔºÅ
+16000ËØ¥‰∏çÁ¥ßÂº†‰∏ÄÂÆöÊòØÂÅáÁöÑÔºå‰ΩÜÂèëÁü≠‰ø°ÁöÑ‰∫∫‰ºöÊòØË∞ÅÂë¢Ôºü‰ªäÂ§©‰∏∫Ê≠¢ÊàëÂè™Áªô‰∫Ü‰∏â‰∏™ÂºÇÊÄßÊâãÊú∫Âè∑ÂïäÔºå
+16000Âà∞Â∫ïË¶Å‰∏çË¶ÅÂéªÂë¢Ôºü
+83400
+13000Âïä‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
+81000Â≠©Â≠êÔºåÁúã‰Ω†ÂàöÊâçÁäπË±´ÁöÑÊ†∑Â≠êÊòØÈÅáÂà∞‰∫Ü‰ªÄ‰πàÈöæÈ¢òÂêóÔºü
+10000(‰∏ÄÊÆµËß£ÈáäÔºåÂú®Ê≠§ÁúÅÁï•„ÄÇ„ÄÇ„ÄÇ)
+85000ÂéüÊù•ÊòØËøôÊ†∑Ôºå‰∏çÁÆ°ÊòØË∞ÅÔºå‰∏çÁÆ°‰Ω†ÊòØÂê¶Á≠îÂ∫îÔºåÊúÄÂ•ΩÈÉΩÊòØË¶ÅË∑ü‰∫∫ÂÆ∂ËØ¥Ê∏ÖÊ•ö‰Ω†ÁöÑÂøÉÊÑèÂïä„ÄÇ„ÄÇ„ÄÇ„ÄÇ
+82000Ëá≥‰∫éÂà∞Â∫ïÊòØË∞ÅÂèëÁöÑËøô‰∏™Áü≠‰ø°„ÄÇ„ÄÇ„ÄÇÊÉ≥ÊÉ≥‰Ω†ÂøÉÈáåÊúüÊúõÁöÑÈÇ£‰∏™‰∫∫ÊòØË∞ÅÔºåÂÜçÂéªËµ¥Á∫¶ÂêßÔºÅÔºÅÔºÅ
+10400Áà∑Áà∑ËØ¥ÁöÑËØùÊúâÈÅìÁêÜÂïäÔºåXXÔºåÈºìËµ∑ÂãáÊ∞îÊù•ÔºÅ‰Ω†ÂèØ‰ª•ÁöÑÔºÅÔºÅ
+10000(ËøòÊúâÔºåÊàëÂà∞Â∫ïÂ∏åÊúõÊòØË∞ÅÂèëÁöÑÈÇ£Êù°Áü≠‰ø°Âë¢Ôºü)
+25400ÊòØÁÉ≠ÊÉÖÈò≥ÂÖâËÄåÂèà‰πê‰∫éÂä©‰∫∫ÁöÑÂ≠êËΩ©Ôºü
+31000ËøòÊòØ‰øäÁæéÂøßÈÉÅÂèàÂØåÊúâÊµ™Êº´Ê∞îË¥®ÁöÑÂ∞ëÊù∞Ôºü
+47000ËøòÊòØÊÜ®ÂéöËÄÅÂÆûÂèàÊ∑≥Êú¥ÁöÑÂª∫ÂõΩÔºü
+16130ÊàëÂøÉÈáåÂ∏åÊúõÈÇ£‰∏™‰∫∫ÊòØ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
\ No newline at end of file
diff --git a/Resources/txt/names.txt b/Resources/txt/names.txt
new file mode 100644
index 0000000..263dde9
--- /dev/null
+++ b/Resources/txt/names.txt
@@ -0,0 +1,10 @@
+
+ƒ¬Ê∫:
+◊”–˘:
+…ŸΩ‹:
+Ω®π˙:
+¬∑»ÀA:
+¬∑»ÀB:
+¬∑»ÀC:
+¿œ“Ø“Ø:
+Ω≠Ω„:
diff --git "a/doc/function/~$\344\273\266CSV\345\256\232\344\271\211.docx" "b/doc/function/~$\344\273\266CSV\345\256\232\344\271\211.docx"
deleted file mode 100644
index acb9a89..0000000
diff --git "a/doc/function/\344\272\213\344\273\266CSV\345\256\232\344\271\211.docx" "b/doc/function/\344\272\213\344\273\266CSV\345\256\232\344\271\211.docx"
index e6d2d1d..dfb331d 100644
--- "a/doc/function/\344\272\213\344\273\266CSV\345\256\232\344\271\211.docx"
+++ "b/doc/function/\344\272\213\344\273\266CSV\345\256\232\344\271\211.docx"
@@ -6,7 +6,7 @@ CSVÂ±ûÊÄßËØ¥Êòé
 * DescriptionÔºö‰∫ã‰ª∂ÊèèËø∞ÔºåÁî®‰ΩúÊ≥®Èáä
 * IdÔºö‰∫ã‰ª∂id
 * CategoryÔºöNPCÁ±ªÂûã„ÄÇÊúânotÔºà-1Ôºâ„ÄÅstandÔºà0Ôºâ„ÄÅturnÔºà1ÔºâÂíåwalkÔºà2Ôºâ‰∏≠ÁöÑ‰∏Ä‰∏™
-* TypeÔºöTypeÔºö‰∫ã‰ª∂Á±ªÂûã„ÄÇÊúâTALKMAN_EVTÔºà0ÔºâÔºåGET_SUP_EVTÔºà1ÔºâÔºåDIALOG_EVTÔºà2Ôºâ
+* TypeÔºöTypeÔºö‰∫ã‰ª∂Á±ªÂûã„ÄÇÊúâTALKMAN_EVTÔºà0ÔºâÔºåGET_SUP_EVTÔºà1ÔºâÔºåDIALOG_EVTÔºà2ÔºâÔºåSHADOW_EVTÔºà3ÔºâÔºåRELOAD_EVTÔºà4Ôºâ
 * imgNoÔºöNPCÂõæÁâáid„ÄÇÊúâATRIG_NO_MAN_IMGNOÔºà-1Ôºâ„ÄÅSTAND_TRIG_IMGNOÔºà-10Ôºâ„ÄÅÂõæÁâáid
 * nextÔºöÂêéÁª≠‰∫ã‰ª∂id„ÄÇÊúâÊó†ÂêéÁª≠‰∫ã‰ª∂Ôºà-1Ôºâ„ÄÅÂêéÁª≠‰∫ã‰ª∂id
 * nPreConditionÔºöÊúâÂ§öÂ∞ë‰∏™ÂâçÂØº‰∫ã‰ª∂„ÄÇ
@@ -18,16 +18,15 @@ CSVÂ±ûÊÄßËØ¥Êòé
 * PresÔºönPreCondition‰∏™ÂâçÂØº‰∫ã‰ª∂id„ÄÇ
 Ê∏©È¶®ÊèêÁ§∫Ôºö
 * Êú™ÂºÄÊîæ‰ΩøÁî®ÂäüËÉΩÁöÑÂ±ûÊÄßÂ∫îÂèÇÁÖß‰æãÂ≠êÂ°´ÂÜô
-* XYÂùêÊ†áÂèØ‰ª•ÊâìÂºÄTileMapÈº†Ê†áÈÄâÁÇπÊü•Áúã
+* XYÂùêÊ†áÂèØ‰ª•ÊâìÂºÄTileMapÈº†Ê†áÈÄâÁÇπÊü•ÁúãÔºå‰∏é‰ΩçÁΩÆÊó†ÂÖ≥‰∫ã‰ª∂XYÂ∫îÂ°´ÂÜô0,0
 * Description‰∏çÂ°´ÂÜôÂØπ‰∫éÊ∏∏ÊàèËøêË°åÊ≤°ÊúâÂΩ±Âìç
 * ‰∫ã‰ª∂idÂèØ‰ª•ÈÄöËøáexcelÊãñÂä®Èº†Ê†áËá™Âä®Á¥ØÂä†ÁîüÊàê
 * ÂØπ‰∫éimgNoÂ±ûÊÄßÔºåÂõæÁâáÂèØ‰ª•Âú®Resources/img/man/ÁõÆÂΩï‰∏ãÊåëÈÄâ
 * ÊØè‰∏ÄÊù°ËÆ∞ÂΩïÂ±ûÊÄßÁöÑ‰∏™Êï∞‰ºöÂõ†ÔºànPreCondition+ nDialog+ nArgumentÔºâ‰∏çÂêåËÄåÊúâÊâÄÂ∑ÆÂºÇ
-
 ArgsÂçèËÆÆÔºö
 * WalkingManÔºàType 0ÔºåCategory 3Ôºâargs‰∏≠ÂÆö‰πâË°åËµ∞Ë∑ØÂæÑÔºåÂ∫îÂåÖÊã¨ÊâÄÊúâËΩ¨ÊäòÁÇπÔºåÂπ∂ÊûÑÊàêÂõûË∑Ø
 * StandingManÔºàType 0ÔºåCategory 1Ôºâargs‰∏≠ÂÆö‰πâÈù¢ÊúùÊñπÂêëÔºå‰∏∫‰∏ã0Â∑¶1Âè≥2‰∏ä3
-
+* GetShadowÔºàType 3Ôºâargs‰∏≠ÂÆö‰πâÁî∑ÊúãÂèãÂá∫Áé∞‰ΩçÁΩÆÊñπÂêëÔºå‰∏∫‰∏ã0Â∑¶1Âè≥2‰∏ä3ÔºåÈªòËÆ§‰∏∫Âè≥
 DialogsÂçèËÆÆ
 * TALKMAN_EVTÔºàType 0ÔºâÂåÖÂê´ÂØπËØù
 * DIALOG_EVTÔºàType 2ÔºâÂåÖÂê´ÂØπËØù
